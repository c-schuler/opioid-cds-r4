{
  "resourceType": "Library",
  "id": "OpioidCDSREC08",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSREC08",
  "version": "2022.1.0",
  "name": "OpioidCDSREC08",
  "title": "Library - Recommendation #8 - Naloxone Consideration",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommon|2022.1.0"
  }, {
    "type": "depends-on",
    "display": "Library Config",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommonConfig|2022.1.0"
  }, {
    "type": "depends-on",
    "display": "Library Routines",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSRoutines|2022.1.0"
  }, {
    "type": "depends-on",
    "display": "Library MMECalculator",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/MMECalculator|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library OMTKLogic",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKLogic|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library OMTKData",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKData|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library ConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/ConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library CDCMMEClinicalConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/CDCMMEClinicalConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system Usage Context Type",
    "resource": "http://terminology.hl7.org/CodeSystem/usage-context-type"
  }, {
    "type": "depends-on",
    "display": "Code system CDC MME Usage Context Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes"
  }, {
    "type": "depends-on",
    "display": "Value set Opioid analgesics with ambulatory misuse potential",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/opioid-analgesics-with-ambulatory-misuse-potential"
  }, {
    "type": "depends-on",
    "display": "Value set Community",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/medicationrequest-category-community"
  }, {
    "type": "depends-on",
    "display": "Value set Substance misuse behavioral counseling",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/substance-misuse-behavioral-counseling"
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Diagnosis Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-encounter-diagnosis-category"
  }, {
    "type": "depends-on",
    "display": "Value set Problem List Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-problem-list-category"
  }, {
    "type": "depends-on",
    "display": "Value set US Core Health Concern Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-us-core-health-concern-category"
  }, {
    "type": "depends-on",
    "display": "Value set Conditions documenting substance misuse",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/conditions-documenting-substance-misuse"
  }, {
    "type": "depends-on",
    "display": "Value set Limited life expectancy conditions",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/limited-life-expectancy-conditions"
  }, {
    "type": "depends-on",
    "display": "Value set Active Condition",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-clinical-status-active"
  }, {
    "type": "depends-on",
    "display": "Value set Therapies indicating end of life care",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/therapies-indicating-end-of-life-care"
  }, {
    "type": "depends-on",
    "display": "Value set Conditions likely terminal for opioid prescribing",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/conditions-likely-terminal-for-opioid-prescribing"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Procedure Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/hospice-procedure"
  } ],
  "parameter": [ {
    "name": "ContextPrescriptions",
    "use": "in",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "ErrorLevel",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "ConversionFactorSupplementName",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Chronic Pain Opioid Analgesic with Ambulatory Misuse Potential Prescriptions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Patient Is Being Prescribed Opioid Analgesic with Ambulatory Misuse Potential",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "On Benzodiazepine",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Total MME",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Quantity"
  }, {
    "name": "Has Substance Abuse History",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "On Naloxone",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Exclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Is Recommendation Applicable?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Get Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Get Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Detail Descriptions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Detail List",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Get Detail",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Medication",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Medication" ],
    "mustSupport": [ "id" ],
    "codeFilter": [ {
      "path": "id"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-encounter-diagnosis-category"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-problem-list-category"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-us-core-health-concern-category"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/substance-misuse-behavioral-counseling"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "status", "intent", "authoredOn", "code" ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "status", "status.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/hospice-procedure"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "code", "status", "status.value" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "period", "period.start", "status", "status.value" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBPcGlvaWRDRFNSRUMwOCB2ZXJzaW9uICcyMDIyLjEuMCcKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzICB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzCmluY2x1ZGUgT3Bpb2lkQ0RTQ29tbW9uIHZlcnNpb24gJzIwMjIuMS4wJyBjYWxsZWQgQ29tbW9uCmluY2x1ZGUgT3Bpb2lkQ0RTQ29tbW9uQ29uZmlnIHZlcnNpb24gJzIwMjIuMS4wJyBjYWxsZWQgQ29uZmlnCmluY2x1ZGUgT3Bpb2lkQ0RTUm91dGluZXMgdmVyc2lvbiAnMjAyMi4xLjAnIGNhbGxlZCBSb3V0aW5lcwovKmluY2x1ZGUgZmhpci5jZGMuIm9waW9pZC1tbWUtcjQiLk1NRUNhbGN1bGF0b3IgdmVyc2lvbiAnMy4wLjAnIGNhbGxlZCBNTUVDYWxjdWxhdG9yCiAqLwppbmNsdWRlIE1NRUNhbGN1bGF0b3IgdmVyc2lvbiAnMy4wLjAnIGNhbGxlZCBNTUVDYWxjdWxhdG9yCgovKgoqKgoqKiAgUmVjb21tZW5kYXRpb24gIzgKKiogICAgQmVmb3JlIHN0YXJ0aW5nIGFuZCBwZXJpb2RpY2FsbHkgZHVyaW5nIGNvbnRpbnVhdGlvbiBvZiBvcGlvaWQgdGhlcmFweSwKKiogICAgY2xpbmljaWFucyBzaG91bGQgZXZhbHVhdGUgcmlzayBmYWN0b3JzIGZvciBvcGlvaWQtcmVsYXRlZCBoYXJtcy4gQ2xpbmljaWFucwoqKiAgICBzaG91bGQgaW5jb3Jwb3JhdGUgaW50byB0aGUgbWFuYWdlbWVudCBwbGFuIHN0cmF0ZWdpZXMgdG8gbWl0aWdhdGUgcmlzaywKKiogICAgaW5jbHVkaW5nIGNvbnNpZGVyaW5nIG9mZmVyaW5nIG5hbG94b25lIHdoZW4gZmFjdG9ycyB0aGF0IGluY3JlYXNlIHJpc2sgZm9yCioqICAgIG9waW9pZCBvdmVyZG9zZSwgc3VjaCBhcyBoaXN0b3J5IG9mIG92ZXJkb3NlLCBoaXN0b3J5IG9mIHN1YnN0YW5jZSB1c2UgZGlzb3JkZXIsCioqICAgIGhpZ2hlciBvcGlvaWQgZG9zYWdlcyAo4omlNTAgTU1FL2RheSksIG9yIGNvbmN1cnJlbnQgYmVuem9kaWF6ZXBpbmUgdXNlLCBhcmUKKiogICAgcHJlc2VudCAocmVjb21tZW5kYXRpb24gY2F0ZWdvcnk6IEEsIGV2aWRlbmNlIHR5cGU6IDQpCioqCioqICBXaGVuCioqICAgIFByb3ZpZGVyIGlzIHByZXNjcmliaW5nIGFuIG9waW9pZCBhbmFsZ2VzaWMgd2l0aCBhbWJ1bGF0b3J5IG1pc3VzZSBwb3RlbnRpYWwKKiogICAgUHJlc2NyaXB0aW9uIGlzIGZvciB0cmVhdGluZyBjaHJvbmljIHBhaW4uCioqICAgIE9waW9pZCByZXZpZXcgaXMgdXNlZnVsIGZvciB0aGlzIHBhdGllbnQ6CioqICAgICAgUGF0aWVudCBpcyAxOCBvciBvdmVyCioqICAgICAgUGF0aWVudCBkb2VzIG5vdCBoYXZlIGZpbmRpbmdzIGluZGljYXRpbmcgbGltaXRlZCBsaWZlIGV4cGVjdGFuY3kKKiogICAgICBQYXRpZW50IGRvZXMgbm90IGhhdmUgb3JkZXJzIGZvciB0aGVyYXBpZXMgaW5kaWNhdGluZyBlbmQgb2YgbGlmZSBjYXJlCioqICAgICAgUGF0aWVudCBpcyBub3QgdW5kZXJnb2luZyBhY3RpdmUgY2FuY2VyIHRyZWF0bWVudDoKKiogICAgICAgIFBhdGllbnQgaGFzIGhhZCBhdCBsZWFzdCAyIGVuY291bnRlcnMgd2l0aGluIHRoZSBwYXN0IHllYXIgd2l0aCBhbnkgZGlhZ25vc2lzIG9mIGNhbmNlcgoqKiAgICBQYXRpZW50IGlzIG5vdCBjdXJyZW50bHkgcHJlc2NyaWJlZCBuYWxveG9uZSBtZWRpY2F0aW9ucwoqKiAgICBGYWN0b3JzIHRoYXQgaW5jcmVhc2UgcmlzayBmb3Igb3Bpb2lkIG92ZXJkb3NlIGFyZSBwcmVzZW50OgoqKiAgICAgIENvbmN1cnJlbnQgYmVuem9kaWF6ZXBpbmUgdXNlCioqICAgICAgSGlnaCBvcGlvaWQgZG9zYWdlcyAoTU1FL2RheSA+PSA1MCkKKiogICAgICBIaXN0b3J5IG9mIHN1YnN0YW5jZSBhYnVzZQoqKiAgVGhlbgoqKiAgICBSZWNvbW1lbmQgb2ZmZXJpbmcgbmFsb3hvbmUgbWVkaWNhdGlvbnMKKiogICAgICBXaWxsIG9mZmVyIG5hbG94b25lIG1lZGljYXRpb25zCioqICAgICAgQmVuZWZpdHMgb3V0d2VpZ2ggcmlza3MsIHNub296ZSAzIG1vbnRocwoqKiAgICAgIE4vQSAtIHNlZSBjb21tZW50LCBzbm9vemUgMyBtb250aHMKKioKKi8KCi8vIE1FVEE6IFBsYW4gRGVmaW5pdGlvbjogaHR0cDovL2ZoaXIub3JnL2d1aWRlcy9jZGMvb3Bpb2lkLWNkcy1yNC9QbGFuRGVmaW5pdGlvbi9vcGlvaWQtY2RzLTA4CgpwYXJhbWV0ZXIgQ29udGV4dFByZXNjcmlwdGlvbnMgTGlzdDxNZWRpY2F0aW9uUmVxdWVzdD4KCmNvbnRleHQgUGF0aWVudAoKZGVmaW5lICJDaHJvbmljIFBhaW4gT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCBQcmVzY3JpcHRpb25zIjoKICAoIENvbW1vbi4iSXMgT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbD8iKCBDb250ZXh0UHJlc2NyaXB0aW9ucyApICkgQW1idWxhdG9yeU9waW9pZFByZXNjcmlwdGlvbgogICAgd2hlcmUgUm91dGluZXMuIklzIFN1YmFjdXRlIG9yIENocm9uaWMgUGFpbiBQcmVzY3JpcHRpb24/IiggQW1idWxhdG9yeU9waW9pZFByZXNjcmlwdGlvbiApCgpkZWZpbmUgIlBhdGllbnQgSXMgQmVpbmcgUHJlc2NyaWJlZCBPcGlvaWQgQW5hbGdlc2ljIHdpdGggQW1idWxhdG9yeSBNaXN1c2UgUG90ZW50aWFsIjoKICBleGlzdHMoICJDaHJvbmljIFBhaW4gT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCBQcmVzY3JpcHRpb25zIiApCgpkZWZpbmUgIk9uIEJlbnpvZGlhemVwaW5lIjoKICBleGlzdHMoIENvbW1vbi4iQWN0aXZlIEFtYnVsYXRvcnkgQmVuem9kaWF6ZXBpbmUgUngiICkKCmRlZmluZSAiVG90YWwgTU1FIjoKICBNTUVDYWxjdWxhdG9yLlRvdGFsTU1FKAogICAgIkNocm9uaWMgUGFpbiBPcGlvaWQgQW5hbGdlc2ljIHdpdGggQW1idWxhdG9yeSBNaXN1c2UgUG90ZW50aWFsIFByZXNjcmlwdGlvbnMiCiAgICAgIHVuaW9uIENvbW1vbi4iQWN0aXZlIEFtYnVsYXRvcnkgT3Bpb2lkIFJ4IgogICkKCmRlZmluZSAiSGFzIFN1YnN0YW5jZSBBYnVzZSBIaXN0b3J5IjoKICBleGlzdHMgKAogICAgW1Byb2NlZHVyZTogQ29tbW9uLiJTdWJzdGFuY2UgbWlzdXNlIGJlaGF2aW9yYWwgY291bnNlbGluZyJdCiAgKQogICAgb3IgZXhpc3RzICgKICAgICAgQ29tbW9uLiJVUyBDb3JlLUNhdGVnb3JpemVkIENvbmRpdGlvbnMiIEMKICAgICAgICB3aGVyZSBDLmNvZGUgaW4gQ29tbW9uLiJDb25kaXRpb25zIGRvY3VtZW50aW5nIHN1YnN0YW5jZSBtaXN1c2UiCiAgICApCgpkZWZpbmUgIkluY2x1c2lvbiBDcml0ZXJpYSI6CiAgIlBhdGllbnQgSXMgQmVpbmcgUHJlc2NyaWJlZCBPcGlvaWQgQW5hbGdlc2ljIHdpdGggQW1idWxhdG9yeSBNaXN1c2UgUG90ZW50aWFsIgogICAgYW5kIFJvdXRpbmVzLiJJcyBPcGlvaWQgUmV2aWV3IFVzZWZ1bD8iCiAgICBhbmQgKAogICAgICAiT24gQmVuem9kaWF6ZXBpbmUiCiAgICAgICAgb3IgIlRvdGFsIE1NRSIgPj0gNTAgJ3tNTUV9L2QnCiAgICAgICAgb3IgIkhhcyBTdWJzdGFuY2UgQWJ1c2UgSGlzdG9yeSIKICAgICkKCmRlZmluZSAiT24gTmFsb3hvbmUiOgogIGV4aXN0cyggQ29tbW9uLiJBY3RpdmUgQW1idWxhdG9yeSBOYWxveG9uZSBSeCIgKQoKZGVmaW5lICJFeGNsdXNpb24gQ3JpdGVyaWEiOgogICgKICAgIENvbmZpZy4iRXZpZGVuY2Ugb2YgTmFsb3hvbmUgRW5hYmxlZCIKICAgICAgYW5kICJPbiBOYWxveG9uZSIKICApCiAgICBvciBDb21tb24uIkVuZCBvZiBMaWZlIEFzc2Vzc21lbnQiCgpkZWZpbmUgIklzIFJlY29tbWVuZGF0aW9uIEFwcGxpY2FibGU/IjoKICAiSW5jbHVzaW9uIENyaXRlcmlhIgogICAgYW5kIG5vdCAiRXhjbHVzaW9uIENyaXRlcmlhIgoKZGVmaW5lICJHZXQgSW5kaWNhdG9yIjoKICBpZiAiSXMgUmVjb21tZW5kYXRpb24gQXBwbGljYWJsZT8iCiAgICB0aGVuICd3YXJuaW5nJwogIGVsc2UgbnVsbAoKZGVmaW5lICJHZXQgU3VtbWFyeSI6CiAgaWYgIklzIFJlY29tbWVuZGF0aW9uIEFwcGxpY2FibGU/IgogICAgdGhlbiAnSW5jb3Jwb3JhdGUgaW50byB0aGUgbWFuYWdlbWVudCBwbGFuIHN0cmF0ZWdpZXMgdG8gbWl0aWdhdGUgcmlzazsgaW5jbHVkaW5nIGNvbnNpZGVyaW5nIG9mZmVyaW5nIG5hbG94b25lIHdoZW4gZmFjdG9ycyB0aGF0IGluY3JlYXNlIHJpc2sgZm9yIG9waW9pZCBvdmVyZG9zZSBhcmUgcHJlc2VudCcKICBlbHNlIG51bGwKCmRlZmluZSAiRGV0YWlsIERlc2NyaXB0aW9ucyI6Cgl7CiAgICB7IGhhc0NvbmRpdGlvbjogIlRvdGFsIE1NRSIgPj0gNTAgJ3tNTUV9L2QnLCB0ZXh0OiAnQXZlcmFnZSBNTUUgKCcgKyBUb1N0cmluZygiVG90YWwgTU1FIikgKyAnKSDiiaUgNTAgbWcvZCcgfSwKICAgIHsgaGFzQ29uZGl0aW9uOiAiT24gQmVuem9kaWF6ZXBpbmUiLCB0ZXh0OiAnY29uY3VycmVudCB1c2Ugb2YgYmVuem9kaWF6ZXBpbmUnfSwKICAgIHsgaGFzQ29uZGl0aW9uOiAiSGFzIFN1YnN0YW5jZSBBYnVzZSBIaXN0b3J5IiwgdGV4dDogJ2hpc3Rvcnkgb2YgYWxjb2hvbCBvciBkcnVnIGFidXNlJyB9CiAgfQoKZGVmaW5lICJEZXRhaWwgTGlzdCI6CglDb21iaW5lKCJEZXRhaWwgRGVzY3JpcHRpb25zIiBkZCB3aGVyZSBkZC5oYXNDb25kaXRpb24gcmV0dXJuIGRkLnRleHQsICcsICcpCgpkZWZpbmUgIkdldCBEZXRhaWwiOgogIGlmICJJcyBSZWNvbW1lbmRhdGlvbiBBcHBsaWNhYmxlPyIKICAgIHRoZW4KICAgICAgJ0NvbnNpZGVyIG9mZmVyaW5nIG5hbG94b25lIGdpdmVuIGZvbGxvd2luZyByaXNrIGZhY3RvcihzKSBmb3Igb3Bpb2lkIG92ZXJkb3NlOiAnCiAgICAgICAgKyBpZiAiRGV0YWlsIExpc3QiIGlzIG5vdCBudWxsIGFuZCAiRGV0YWlsIExpc3QiICE9ICcnCiAgICAgICAgIHRoZW4gIkRldGFpbCBMaXN0IiArICcuJwogICAgICAgIGVsc2UgJ04vQS4nCiAgZWxzZSBudWxsCg=="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}
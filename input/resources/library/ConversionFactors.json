{
  "resourceType": "Library",
  "id": "ConversionFactors",
  "meta": {
    "profile": [ "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary" ]
  },
  "text": {
    "status": "extensions",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n    <table class=\"grid dict\">\n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">ConversionFactors</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\">http://fhir.org/guides/cdc/opioid-cds/Library/ConversionFactors</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">3.0.0</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Name: </b></th>\n            <td style=\"padding-left: 4px;\">ConversionFactors</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">Morphine Milligram Equivalent (MME) Conversion Factors for FHIR R4</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">active</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Experimental: </b></th>\n            <td style=\"padding-left: 4px;\">false</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span>http://terminology.hl7.org/CodeSystem/library-type</span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2022-02-01T20:35:24+00:00</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">Alphora</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\">This library contains logic to expose configurable conversion factors for the MME calculation functionality provided by the OMTKLogic library.</td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Capability: </b></th>\n          <td style=\"padding-left: 4px;\">\n            shareable computable publishable executable \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Representation Level: </b></th>\n          <td style=\"padding-left: 4px;\">\n            structured\n          </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Use Context: </b></th>\n            <td style=\"padding-left: 4px;\">\n                <table class=\"grid-dict\">\n                    <tr><th><b>code</b></th><th><b>value</b></th><th><b>display</b></th></tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>182888003</td>\n                        <td>Medication requested (situation)</td>\n                      </tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>82423001</td>\n                        <td>Chronic pain (finding)</td>\n                      </tr>\n                    \n                </table>\n            </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Jurisdiction: </b></th>\n            <td style=\"padding-left: 4px;\">840</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Usage: </b></th>\n            <td style=\"padding-left: 4px;\">NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Copyright: </b></th>\n            <td style=\"padding-left: 4px;\">Copyright 2019+ Centers for Disease Control and Prevention (CDC)</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Last Review Date: </b></th>\n            <td style=\"padding-left: 4px;\">2020-09-26</td>\n        </tr>\n        \n        \n        \n        <tr>\n          <th scope=\"row\"><b>Related Artifacts: </b></th>\n          <td style=\"padding-left: 4px;\">\n            \n            <p><b>Documentation</b></p>\n            <ul>\n              \n                <li><a href=\"http://fhir.org/guides/cdc/opioid-cds/conversion-factors.html\">Conversion Factors Conversion Factors</a></li>\n              \n            </ul>\n            \n            \n            <p><b>References</b></p>\n            <ul>\n              \n                <li>Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)<br/><a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/\">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/</a></li>\n              \n                <li>Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org<br/><a href=\"http://unitsofmeasure.org\">http://unitsofmeasure.org</a></li>\n              \n                <li>Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1<br/><a href=\"http://dx.doi.org/10.15585/mmwr.rr6501e1\">http://dx.doi.org/10.15585/mmwr.rr6501e1</a></li>\n              \n                <li>National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020<br/><a href=\"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\">https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf</a></li>\n              \n            </ul>\n            \n            \n            <p><b>Dependencies</b></p>\n            <ul>\n              \n                <li>http://terminology.hl7.org/CodeSystem/usage-context-type</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes</li>\n              \n            </ul>\n            \n            \n            \n            \n            \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>ErrorLevel</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>ConversionFactorSupplementName</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>out</th></tr>\n              \n                <tr><th>ConversionFactorSupplement</th><th>CodeSystem</th><th>0</th><th>1</th><th>out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Data Requirements:</b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Type</b></th><th><b>Profile</b></th><th><b>MS</b></th><th><b>Code Filter</b></th></tr>\n              \n                <tr>\n                  <th>Patient</th>\n                  <th>http://hl7.org/fhir/StructureDefinition/Patient</th>\n                  <th/>\n                  <th>\n                    \n                  </th>\n                </tr>\n              \n                <tr>\n                  <th>CodeSystem</th>\n                  <th>http://hl7.org/fhir/StructureDefinition/CodeSystem</th>\n                  <th>;;;;;;</th>\n                  <th>\n                    \n                  </th>\n                </tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">library ConversionFactors version '3.0.0'\r\n\r\n/*\r\nThis library provides logic to determine the appropriate conversion factor to be\r\nused for calculating Morphine Milligram Equivalent (MME) for a given medication.\r\n\r\nThe conversion factors are configurable using a CodeSystem supplement. This\r\nimplementation guide contains one conversion factor table:\r\n\r\nCDCMMEClinicalConversionFactors\r\n\r\nThe Clinical Conversion Factors table uses values from CDC guidance here:\r\nhttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\r\n\r\nThe CodeSystem supplements are configured with 3 types of properties:\r\n\r\n* conversion-factor: Defines the conversion factor for a specific ingredient,\r\nwhen the conversion factor is the same for all dose forms and dose amounts for\r\nthe ingredient. The value of this property will be the decimal representation of\r\nthe conversion factor.\r\n* dose-form-conversion-factor: Defines the conversion factor for an ingredient\r\nwhen the conversion factor varies by the dose form of the medication. The value\r\nof this property will be a string of the form\r\n&lt;dose-form-code&gt;:&lt;conversion-factor&gt;[@&lt;doses-per-day&gt;],\r\ne.g. 970789:130, where '970789' is the RxNorm dose form code, and '130' is the\r\ndecimal representation of the conversion factor. An example of a per-day\r\nconversion factor is fentanyl, 316987:7200@0.33333333, where 316987 is RxNorm\r\ndose form code, 7200 is the conversion factor, and 0.33333333 is the dosesPerDay,\r\nexpressed as a decimal with a maximum of 8 digits after the decimal.\r\n* dose-range-conversion-factor: Defines the conversion factor for an ingredient\r\nwhen the conversion factor varies by the overall dose of the medication. The\r\nvalue of this property will be a string of the form\r\n&lt;low-value&gt;-&lt;high-value&gt;:&lt;conversion-factor&gt;,\r\ne.g. 1-20:4. Note that the low-value or high-value may be a wildcard '*' to\r\nindicate the range continues (e.g. '61-*:12' indicates the range is 61 or greater).\r\n\r\nFor a given ingredient, only one of 'dose-form' or 'dose-range' will be present,\r\nwith or without an ingredient-specific conversion factor. The properties together\r\nwill enable a unique conversion factor to be determined if the input is within\r\nthe expected range. If the input is outside the expected range, and there is no\r\ningredient-specific conversion-factor specified, implementations should indicate\r\na conversion factor could not be determined from the supplied information.\r\nAll conversion factors supplied in these supplements are in 'mg/d'.\r\n*/\r\n\r\nusing FHIR version '4.0.1'\r\n\r\ninclude FHIRHelpers version '4.0.1'\r\n\r\ncodesystem &quot;Usage Context Type&quot;: 'http://terminology.hl7.org/CodeSystem/usage-context-type'\r\ncodesystem &quot;CDC MME Usage Context Codes&quot;: 'http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes'\r\n\r\ncode &quot;Task Usage Context&quot;: 'task' from &quot;Usage Context Type&quot;\r\ncode &quot;MME Calculation&quot;: 'mme-calculation' from &quot;CDC MME Usage Context Codes&quot;\r\n\r\nparameter ErrorLevel String default 'Trace'\r\n\r\n/*\r\nIf this parameter is supplied, it specifies the name of the code system supplement\r\nto be used to supply conversion factors for the calculator. If this parameter is not\r\nprovided, the _single_ CodeSystem with a task usage context code of &quot;mme-calculation&quot;\r\nfrom the CDCMMEUsageContextCodes code system will be used to provide conversion factors.\r\nIf neither of these configurations is available, the hard-coded conversion factors\r\nin GetConversionFactor will be used. The hard-coded conversion factors use the\r\nclinical conversion factors only.\r\n*/\r\nparameter ConversionFactorSupplementName String\r\n\r\ncontext Patient\r\n\r\n/*\r\nReturns the conversion factor for the given ingredient\r\n\r\nCDC Guidance:\r\nhttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\r\n\r\n|Opioid (strength in mg except where noted)     |MME Conversion Factor*|\r\n|-----------------------------------------------|----------------------|\r\n|Codeine                                        |                 0.15 |\r\n|Fentanyl, transdermal patch (MCG/HR)           |                 2.4  |\r\n|Hydrocodone                                    |                 1    |\r\n|Hydromorphone                                  |                 4    |\r\n|Methadone                                      |                      |\r\n|  1-20 mg/d                                    |                 4    |\r\n|  21-40 mg/d                                   |                 8    |\r\n|  41-60 mg/d                                   |                10    |\r\n|  61-80+ mg/d                                  |                12    |\r\n| Morphine                                      |                 1    |\r\n| Oxycodone                                     |                 1.5  |\r\n| Oxymorphone                                   |                 3    |\r\n\r\n*/\r\ndefine function GetConversionFactor(ingredientCode System.Code, dailyDose System.Quantity, doseFormCode System.Code, dosesPerDay System.Decimal):\r\n  Coalesce(\r\n    LookupConversionFactor(ingredientCode, dailyDose, doseFormCode, dosesPerDay),\r\n    case ToInteger(ingredientCode.code)\r\n      when 2670 then 0.15 /*\tCodeine */\r\n      when 4337 then ( /*\tFentanyl */\r\n        case\r\n          when ToInteger(doseFormCode.code) = 316987 then (0.33333333 / dosesPerDay) * 7200 /* Transdermal system */\r\n          else Message(null, true, 'OMTKLogic.GetConversionFactor.UnknownDoseForm', ErrorLevel, 'Unknown dose form code ' &amp; doseFormCode.code)\r\n        end\r\n      )\r\n      when 5489 then 1 /*\tHydrocodone */\r\n      when 3423 then 4 /*\tHydromorphone */\r\n      when 6813 then ( /*\tMethadone */\r\n        case\r\n          when dailyDose.value between 1 and 20 then 4\r\n          when dailyDose.value between 21 and 40 then 8\r\n          when dailyDose.value between 41 and 60 then 10\r\n          when dailyDose.value &gt;= 61 then 12\r\n          when dailyDose is null or dailyDose.value is null then\r\n            Message(null, true, 'OMTKLogic.GetConversionFactor.DailyDoseNull', ErrorLevel, 'Daily dose is required to determine methadone conversion factor')\r\n          else Message(null, dailyDose.value &lt; 1, 'OMTKLogic.GetConversionFactor.DailyDoseLessThanOne', ErrorLevel, 'Daily dose less than 1')\r\n        end\r\n      )\r\n      when 7052 then 1 /*\tMorphine */\r\n      when 7804 then 1.5 /*\tOxycodone */\r\n      when 7814 then 3 /*\tOxymorphone */\r\n      else Message(null, true, 'OMTKLogic.GetConversionFactor.UnknownIngredientCode', ErrorLevel, 'Unknown ingredient code: ' &amp; ingredientCode.code)\r\n    end\r\n  )\r\n\r\ndefine ConversionFactorSupplement:\r\n  singleton from (\r\n    [CodeSystem] C\r\n      where C.supplements.value = 'http://www.nlm.nih.gov/research/umls/rxnorm'\r\n      and (\r\n        C.name.value = ConversionFactorSupplementName\r\n          or exists (\r\n            C.useContext UC\r\n              where UC.code ~ &quot;Task Usage Context&quot;\r\n                and UC.value ~ &quot;MME Calculation&quot;\r\n          )\r\n      )\r\n  )\r\n\r\n/*\r\nConverts a range value boundary to a Decimal (or null for a wildcard)\r\n*/\r\ndefine function ToRangeValue(value System.String):\r\n  if value = '*' then null else ToDecimal(value)\r\n\r\n/*\r\nConverts the property value of a dose-range-conversion-factor property to the dose range\r\n&lt;low-value&gt;-&lt;high-value&gt;:&lt;conversion-factor&gt;\r\nNote that low-value and/or high-value may be wildcards '*'\r\n*/\r\ndefine function ToDoseRange(propertyValue FHIR.string):\r\n  ({ : }) X\r\n    let rangeValues: Split(Split(propertyValue.value, ':')[0], '-')\r\n    return Interval[ToRangeValue(rangeValues[0]), ToRangeValue(rangeValues[1])]\r\n\r\n/*\r\nConverts the property value of a dose-range-conversion-factor property to the conversion factor\r\n&lt;low-value&gt;-&lt;high-value&gt;:&lt;conversion-factor&gt;\r\n*/\r\ndefine function ToDoseRangeConversionFactor(propertyValue FHIR.string):\r\n  ToDecimal(Split(propertyValue.value, ':')[1])\r\n\r\n/*\r\nConverts the property value of a dose-form-conversion-factor property to the dose form\r\n&lt;dose-form-code&gt;:&lt;conversion-factor&gt;\r\n*/\r\ndefine function ToDoseForm(propertyValue FHIR.string):\r\n  Split(propertyValue.value, ':')[0]\r\n\r\n/*\r\nConverts the property value of a dose-form-conversion-factor property to the conversion factor\r\n&lt;dose-form-code&gt;:&lt;conversion-factor&gt;[@doses-per-day]\r\n*/\r\ndefine function ToDoseFormConversionFactor(propertyValue FHIR.string, dosesPerDay System.Decimal):\r\n  if PositionOf('@', propertyValue.value) &gt; 0 then\r\n    ToDoseFormDosesPerDayConversionFactor(propertyValue, dosesPerDay)\r\n  else\r\n    ToDecimal(Split(propertyValue.value, ':')[1])\r\n\r\n/*\r\nConverts the property value of a dose-form-conversion-factor property to the conversion factor\r\nif the property includes a doses-per-day value\r\n*/\r\ndefine function ToDoseFormDosesPerDayConversionFactor(propertyValue FHIR.string, dosesPerDay System.Decimal):\r\n  propertyValue P\r\n    let components: Split(P.value, '@')\r\n    return (ToDecimal(components[1]) / dosesPerDay) * ToDecimal(Split(components[0], ':')[1])\r\n\r\n/*\r\nReturns the conversion factor for a conversion-factor property\r\nNOTE: These functions are used to avoid use of _is_ and _as_\r\n*/\r\ndefine function ToConversionFactor(propertyValue FHIR.decimal):\r\n  propertyValue.value\r\n\r\n/*\r\nLooks up the conversion factor for the given ingredient, daily dose, and dose form from the\r\nconfigured conversion factor supplement, if available.\r\n\r\nIf no conversion factor supplement is configured, returns null\r\n*/\r\ndefine function LookupConversionFactor(ingredientCode System.Code, dailyDose System.Quantity, doseFormCode System.Code, dosesPerDay System.Decimal):\r\n  ConversionFactorSupplement CFS\r\n    let\r\n      ingredientConcept: singleton from (CFS.&quot;concept&quot; C where C.code.value = ingredientCode.code),\r\n      conversionFactor: singleton from (ingredientConcept.property P where P.code.value = 'conversion-factor'),\r\n      doseFormConversionFactors: (ingredientConcept.property P where P.code.value = 'dose-form-conversion-factor'),\r\n      doseRangeConversionFactors: (ingredientConcept.property P where P.code.value = 'dose-range-conversion-factor')\r\n    return\r\n      Coalesce\r\n      (\r\n        case\r\n          when exists (doseRangeConversionFactors) then\r\n            singleton from (\r\n              doseRangeConversionFactors DRCF\r\n                where dailyDose.value in ToDoseRange(DRCF.value)\r\n                return ToDoseRangeConversionFactor(DRCF.value)\r\n            )\r\n          when exists (doseFormConversionFactors) then\r\n            singleton from (\r\n              doseFormConversionFactors DFCF\r\n                where doseFormCode.code = ToDoseForm(DFCF.value)\r\n                return ToDoseFormConversionFactor(DFCF.value, dosesPerDay)\r\n            )\r\n          else null\r\n        end,\r\n        ToConversionFactor(conversionFactor.value)\r\n      )\r\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (159884 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+json</th></tr>\n              <tr><td><pre><code>Encoded data (778100 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "shareable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "computable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "publishable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "executable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel",
    "valueCode": "structured"
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/ConversionFactors",
  "version": "3.0.0",
  "name": "ConversionFactors",
  "title": "Morphine Milligram Equivalent (MME) Conversion Factors for FHIR R4",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2022-02-01T20:35:24+00:00",
  "publisher": "Alphora",
  "contact": [ {
    "telecom": [ {
      "system": "url",
      "value": "http://alphora.com"
    } ]
  } ],
  "description": "This library contains logic to expose configurable conversion factors for the MME calculation functionality provided by the OMTKLogic library.",
  "useContext": [ {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "182888003",
        "display": "Medication requested (situation)"
      } ]
    }
  }, {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "82423001",
        "display": "Chronic pain (finding)"
      } ]
    }
  } ],
  "jurisdiction": [ {
    "coding": [ {
      "system": "http://unstats.un.org/unsd/methods/m49/m49.htm",
      "code": "840"
    } ]
  } ],
  "usage": "NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.",
  "copyright": "Copyright 2019+ Centers for Disease Control and Prevention (CDC)",
  "lastReviewDate": "2020-09-26",
  "topic": [ {
    "text": "Opioid Prescribing"
  }, {
    "text": "Morphine Milligram Equivalent (MME)"
  } ],
  "author": [ {
    "name": "Floyd Eisenberg, MD, MPH"
  }, {
    "name": "Kensaku Kawamoto, MD, PhD, MHS"
  }, {
    "name": "Robert McClure, MD"
  }, {
    "name": "Bryn Rhodes"
  } ],
  "relatedArtifact": [ {
    "type": "citation",
    "label": "RxNORM",
    "display": "This product uses publicly available data courtesy of the U.S. National Library of Medicine (NLM), National Institutes of Health, Department of Health and Human Services; NLM is not responsible for the product and does not endorse or recommend this or any other product.",
    "citation": "Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)",
    "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/",
    "document": {
      "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/"
    }
  }, {
    "type": "citation",
    "label": "UCUM",
    "display": "This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at http://unitsofmeasure.org<br/> The current complete UCUM table, UCUM Specification are available for download at http://unitsofmeasure.org<br/>The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.",
    "citation": "Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org",
    "url": "http://unitsofmeasure.org",
    "document": {
      "url": "http://unitsofmeasure.org"
    }
  }, {
    "type": "citation",
    "label": "CDC 2016 Opioid Prescribing Guideline",
    "display": "Centers For Disease Control and Prevention (CDC) Guideline for Prescribing Opioids for Chronic Pain — United States, 2016",
    "citation": "Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "document": {
      "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1"
    }
  }, {
    "type": "citation",
    "label": "Calculating total daily dose of opioids for safer dosage",
    "display": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.",
    "citation": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020",
    "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf",
    "document": {
      "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"
    }
  }, {
    "type": "documentation",
    "label": "Conversion Factors",
    "display": "Conversion Factors",
    "url": "http://fhir.org/guides/cdc/opioid-cds/conversion-factors.html",
    "document": {
      "url": "http://fhir.org/guides/cdc/opioid-cds/conversion-factors.html"
    }
  }, {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library CDCMMEClinicalConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/CDCMMEClinicalConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Code system Usage Context Type",
    "resource": "http://terminology.hl7.org/CodeSystem/usage-context-type"
  }, {
    "type": "depends-on",
    "display": "Code system CDC MME Usage Context Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes"
  } ],
  "parameter": [ {
    "name": "ErrorLevel",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "ConversionFactorSupplementName",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "ConversionFactorSupplement",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "CodeSystem"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}
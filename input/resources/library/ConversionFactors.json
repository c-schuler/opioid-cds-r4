{
  "resourceType": "Library",
  "id": "ConversionFactors",
  "meta": {
    "profile": [ "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary" ]
  },
  "text": {
    "status": "extensions",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n    <table class=\"grid dict\">\n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">ConversionFactors</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\">http://fhir.org/guides/cdc/opioid-cds/Library/ConversionFactors</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">3.0.0</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Name: </b></th>\n            <td style=\"padding-left: 4px;\">ConversionFactors</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">Morphine Milligram Equivalent (MME) Conversion Factors for FHIR R4</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">active</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Experimental: </b></th>\n            <td style=\"padding-left: 4px;\">false</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span>http://terminology.hl7.org/CodeSystem/library-type</span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2022-02-01T20:35:24+00:00</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">Alphora</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\">This library contains logic to expose configurable conversion factors for the MME calculation functionality provided by the OMTKLogic library.</td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Capability: </b></th>\n          <td style=\"padding-left: 4px;\">\n            shareable computable publishable executable \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Representation Level: </b></th>\n          <td style=\"padding-left: 4px;\">\n            structured\n          </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Use Context: </b></th>\n            <td style=\"padding-left: 4px;\">\n                <table class=\"grid-dict\">\n                    <tr><th><b>code</b></th><th><b>value</b></th><th><b>display</b></th></tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>182888003</td>\n                        <td>Medication requested (situation)</td>\n                      </tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>82423001</td>\n                        <td>Chronic pain (finding)</td>\n                      </tr>\n                    \n                </table>\n            </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Jurisdiction: </b></th>\n            <td style=\"padding-left: 4px;\">840</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Usage: </b></th>\n            <td style=\"padding-left: 4px;\">NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Copyright: </b></th>\n            <td style=\"padding-left: 4px;\">Copyright 2019+ Centers for Disease Control and Prevention (CDC)</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Last Review Date: </b></th>\n            <td style=\"padding-left: 4px;\">2020-09-26</td>\n        </tr>\n        \n        \n        \n        <tr>\n          <th scope=\"row\"><b>Related Artifacts: </b></th>\n          <td style=\"padding-left: 4px;\">\n            \n            <p><b>Documentation</b></p>\n            <ul>\n              \n                <li><a href=\"http://fhir.org/guides/cdc/opioid-cds/conversion-factors.html\">Conversion Factors Conversion Factors</a></li>\n              \n            </ul>\n            \n            \n            <p><b>References</b></p>\n            <ul>\n              \n                <li>Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)<br/><a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/\">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/</a></li>\n              \n                <li>Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org<br/><a href=\"http://unitsofmeasure.org\">http://unitsofmeasure.org</a></li>\n              \n                <li>Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1<br/><a href=\"http://dx.doi.org/10.15585/mmwr.rr6501e1\">http://dx.doi.org/10.15585/mmwr.rr6501e1</a></li>\n              \n                <li>National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020<br/><a href=\"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\">https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf</a></li>\n              \n            </ul>\n            \n            \n            <p><b>Dependencies</b></p>\n            <ul>\n              \n                <li>http://terminology.hl7.org/CodeSystem/usage-context-type</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes</li>\n              \n            </ul>\n            \n            \n            \n            \n            \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>ErrorLevel</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>ConversionFactorSupplementName</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>out</th></tr>\n              \n                <tr><th>ConversionFactorSupplement</th><th>CodeSystem</th><th>0</th><th>1</th><th>out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Data Requirements:</b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Type</b></th><th><b>Profile</b></th><th><b>MS</b></th><th><b>Code Filter</b></th></tr>\n              \n                <tr>\n                  <th>Patient</th>\n                  <th>http://hl7.org/fhir/StructureDefinition/Patient</th>\n                  <th/>\n                  <th>\n                    \n                  </th>\n                </tr>\n              \n                <tr>\n                  <th>CodeSystem</th>\n                  <th>http://hl7.org/fhir/StructureDefinition/CodeSystem</th>\n                  <th>;;;;;;</th>\n                  <th>\n                    \n                  </th>\n                </tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">library ConversionFactors version '3.0.0'\r\n\r\n/*\r\nThis library provides logic to determine the appropriate conversion factor to be\r\nused for calculating Morphine Milligram Equivalent (MME) for a given medication.\r\n\r\nThe conversion factors are configurable using a CodeSystem supplement. This\r\nimplementation guide contains one conversion factor table:\r\n\r\nCDCMMEClinicalConversionFactors\r\n\r\nThe Clinical Conversion Factors table uses values from CDC guidance here:\r\nhttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\r\n\r\nThe CodeSystem supplements are configured with 3 types of properties:\r\n\r\n* conversion-factor: Defines the conversion factor for a specific ingredient,\r\nwhen the conversion factor is the same for all dose forms and dose amounts for\r\nthe ingredient. The value of this property will be the decimal representation of\r\nthe conversion factor.\r\n* dose-form-conversion-factor: Defines the conversion factor for an ingredient\r\nwhen the conversion factor varies by the dose form of the medication. The value\r\nof this property will be a string of the form\r\n&lt;dose-form-code&gt;:&lt;conversion-factor&gt;[@&lt;doses-per-day&gt;],\r\ne.g. 970789:130, where '970789' is the RxNorm dose form code, and '130' is the\r\ndecimal representation of the conversion factor. An example of a per-day\r\nconversion factor is fentanyl, 316987:7200@0.33333333, where 316987 is RxNorm\r\ndose form code, 7200 is the conversion factor, and 0.33333333 is the dosesPerDay,\r\nexpressed as a decimal with a maximum of 8 digits after the decimal.\r\n* dose-range-conversion-factor: Defines the conversion factor for an ingredient\r\nwhen the conversion factor varies by the overall dose of the medication. The\r\nvalue of this property will be a string of the form\r\n&lt;low-value&gt;-&lt;high-value&gt;:&lt;conversion-factor&gt;,\r\ne.g. 1-20:4. Note that the low-value or high-value may be a wildcard '*' to\r\nindicate the range continues (e.g. '61-*:12' indicates the range is 61 or greater).\r\n\r\nFor a given ingredient, only one of 'dose-form' or 'dose-range' will be present,\r\nwith or without an ingredient-specific conversion factor. The properties together\r\nwill enable a unique conversion factor to be determined if the input is within\r\nthe expected range. If the input is outside the expected range, and there is no\r\ningredient-specific conversion-factor specified, implementations should indicate\r\na conversion factor could not be determined from the supplied information.\r\nAll conversion factors supplied in these supplements are in 'mg/d'.\r\n*/\r\n\r\nusing FHIR version '4.0.1'\r\n\r\ninclude FHIRHelpers version '4.0.1'\r\n\r\ncodesystem &quot;Usage Context Type&quot;: 'http://terminology.hl7.org/CodeSystem/usage-context-type'\r\ncodesystem &quot;CDC MME Usage Context Codes&quot;: 'http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes'\r\n\r\ncode &quot;Task Usage Context&quot;: 'task' from &quot;Usage Context Type&quot;\r\ncode &quot;MME Calculation&quot;: 'mme-calculation' from &quot;CDC MME Usage Context Codes&quot;\r\n\r\nparameter ErrorLevel String default 'Trace'\r\n\r\n/*\r\nIf this parameter is supplied, it specifies the name of the code system supplement\r\nto be used to supply conversion factors for the calculator. If this parameter is not\r\nprovided, the _single_ CodeSystem with a task usage context code of &quot;mme-calculation&quot;\r\nfrom the CDCMMEUsageContextCodes code system will be used to provide conversion factors.\r\nIf neither of these configurations is available, the hard-coded conversion factors\r\nin GetConversionFactor will be used. The hard-coded conversion factors use the\r\nclinical conversion factors only.\r\n*/\r\nparameter ConversionFactorSupplementName String\r\n\r\ncontext Patient\r\n\r\n/*\r\nReturns the conversion factor for the given ingredient\r\n\r\nCDC Guidance:\r\nhttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\r\n\r\n|Opioid (strength in mg except where noted)     |MME Conversion Factor*|\r\n|-----------------------------------------------|----------------------|\r\n|Codeine                                        |                 0.15 |\r\n|Fentanyl, transdermal patch (MCG/HR)           |                 2.4  |\r\n|Hydrocodone                                    |                 1    |\r\n|Hydromorphone                                  |                 4    |\r\n|Methadone                                      |                      |\r\n|  1-20 mg/d                                    |                 4    |\r\n|  21-40 mg/d                                   |                 8    |\r\n|  41-60 mg/d                                   |                10    |\r\n|  61-80+ mg/d                                  |                12    |\r\n| Morphine                                      |                 1    |\r\n| Oxycodone                                     |                 1.5  |\r\n| Oxymorphone                                   |                 3    |\r\n\r\n*/\r\ndefine function GetConversionFactor(ingredientCode System.Code, dailyDose System.Quantity, doseFormCode System.Code, dosesPerDay System.Decimal):\r\n  Coalesce(\r\n    LookupConversionFactor(ingredientCode, dailyDose, doseFormCode, dosesPerDay),\r\n    case ToInteger(ingredientCode.code)\r\n      when 2670 then 0.15 /*\tCodeine */\r\n      when 4337 then ( /*\tFentanyl */\r\n        case\r\n          when ToInteger(doseFormCode.code) = 316987 then (0.33333333 / dosesPerDay) * 7200 /* Transdermal system */\r\n          else Message(null, true, 'OMTKLogic.GetConversionFactor.UnknownDoseForm', ErrorLevel, 'Unknown dose form code ' &amp; doseFormCode.code)\r\n        end\r\n      )\r\n      when 5489 then 1 /*\tHydrocodone */\r\n      when 3423 then 4 /*\tHydromorphone */\r\n      when 6813 then ( /*\tMethadone */\r\n        case\r\n          when dailyDose.value between 1 and 20 then 4\r\n          when dailyDose.value between 21 and 40 then 8\r\n          when dailyDose.value between 41 and 60 then 10\r\n          when dailyDose.value &gt;= 61 then 12\r\n          when dailyDose is null or dailyDose.value is null then\r\n            Message(null, true, 'OMTKLogic.GetConversionFactor.DailyDoseNull', ErrorLevel, 'Daily dose is required to determine methadone conversion factor')\r\n          else Message(null, dailyDose.value &lt; 1, 'OMTKLogic.GetConversionFactor.DailyDoseLessThanOne', ErrorLevel, 'Daily dose less than 1')\r\n        end\r\n      )\r\n      when 7052 then 1 /*\tMorphine */\r\n      when 7804 then 1.5 /*\tOxycodone */\r\n      when 7814 then 3 /*\tOxymorphone */\r\n      else Message(null, true, 'OMTKLogic.GetConversionFactor.UnknownIngredientCode', ErrorLevel, 'Unknown ingredient code: ' &amp; ingredientCode.code)\r\n    end\r\n  )\r\n\r\ndefine ConversionFactorSupplement:\r\n  singleton from (\r\n    [CodeSystem] C\r\n      where C.supplements.value = 'http://www.nlm.nih.gov/research/umls/rxnorm'\r\n      and (\r\n        C.name.value = ConversionFactorSupplementName\r\n          or exists (\r\n            C.useContext UC\r\n              where UC.code ~ &quot;Task Usage Context&quot;\r\n                and UC.value ~ &quot;MME Calculation&quot;\r\n          )\r\n      )\r\n  )\r\n\r\n/*\r\nConverts a range value boundary to a Decimal (or null for a wildcard)\r\n*/\r\ndefine function ToRangeValue(value System.String):\r\n  if value = '*' then null else ToDecimal(value)\r\n\r\n/*\r\nConverts the property value of a dose-range-conversion-factor property to the dose range\r\n&lt;low-value&gt;-&lt;high-value&gt;:&lt;conversion-factor&gt;\r\nNote that low-value and/or high-value may be wildcards '*'\r\n*/\r\ndefine function ToDoseRange(propertyValue FHIR.string):\r\n  ({ : }) X\r\n    let rangeValues: Split(Split(propertyValue.value, ':')[0], '-')\r\n    return Interval[ToRangeValue(rangeValues[0]), ToRangeValue(rangeValues[1])]\r\n\r\n/*\r\nConverts the property value of a dose-range-conversion-factor property to the conversion factor\r\n&lt;low-value&gt;-&lt;high-value&gt;:&lt;conversion-factor&gt;\r\n*/\r\ndefine function ToDoseRangeConversionFactor(propertyValue FHIR.string):\r\n  ToDecimal(Split(propertyValue.value, ':')[1])\r\n\r\n/*\r\nConverts the property value of a dose-form-conversion-factor property to the dose form\r\n&lt;dose-form-code&gt;:&lt;conversion-factor&gt;\r\n*/\r\ndefine function ToDoseForm(propertyValue FHIR.string):\r\n  Split(propertyValue.value, ':')[0]\r\n\r\n/*\r\nConverts the property value of a dose-form-conversion-factor property to the conversion factor\r\n&lt;dose-form-code&gt;:&lt;conversion-factor&gt;[@doses-per-day]\r\n*/\r\ndefine function ToDoseFormConversionFactor(propertyValue FHIR.string, dosesPerDay System.Decimal):\r\n  if PositionOf('@', propertyValue.value) &gt; 0 then\r\n    ToDoseFormDosesPerDayConversionFactor(propertyValue, dosesPerDay)\r\n  else\r\n    ToDecimal(Split(propertyValue.value, ':')[1])\r\n\r\n/*\r\nConverts the property value of a dose-form-conversion-factor property to the conversion factor\r\nif the property includes a doses-per-day value\r\n*/\r\ndefine function ToDoseFormDosesPerDayConversionFactor(propertyValue FHIR.string, dosesPerDay System.Decimal):\r\n  propertyValue P\r\n    let components: Split(P.value, '@')\r\n    return (ToDecimal(components[1]) / dosesPerDay) * ToDecimal(Split(components[0], ':')[1])\r\n\r\n/*\r\nReturns the conversion factor for a conversion-factor property\r\nNOTE: These functions are used to avoid use of _is_ and _as_\r\n*/\r\ndefine function ToConversionFactor(propertyValue FHIR.decimal):\r\n  propertyValue.value\r\n\r\n/*\r\nLooks up the conversion factor for the given ingredient, daily dose, and dose form from the\r\nconfigured conversion factor supplement, if available.\r\n\r\nIf no conversion factor supplement is configured, returns null\r\n*/\r\ndefine function LookupConversionFactor(ingredientCode System.Code, dailyDose System.Quantity, doseFormCode System.Code, dosesPerDay System.Decimal):\r\n  ConversionFactorSupplement CFS\r\n    let\r\n      ingredientConcept: singleton from (CFS.&quot;concept&quot; C where C.code.value = ingredientCode.code),\r\n      conversionFactor: singleton from (ingredientConcept.property P where P.code.value = 'conversion-factor'),\r\n      doseFormConversionFactors: (ingredientConcept.property P where P.code.value = 'dose-form-conversion-factor'),\r\n      doseRangeConversionFactors: (ingredientConcept.property P where P.code.value = 'dose-range-conversion-factor')\r\n    return\r\n      Coalesce\r\n      (\r\n        case\r\n          when exists (doseRangeConversionFactors) then\r\n            singleton from (\r\n              doseRangeConversionFactors DRCF\r\n                where dailyDose.value in ToDoseRange(DRCF.value)\r\n                return ToDoseRangeConversionFactor(DRCF.value)\r\n            )\r\n          when exists (doseFormConversionFactors) then\r\n            singleton from (\r\n              doseFormConversionFactors DFCF\r\n                where doseFormCode.code = ToDoseForm(DFCF.value)\r\n                return ToDoseFormConversionFactor(DFCF.value, dosesPerDay)\r\n            )\r\n          else null\r\n        end,\r\n        ToConversionFactor(conversionFactor.value)\r\n      )\r\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (159884 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+json</th></tr>\n              <tr><td><pre><code>Encoded data (778100 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "shareable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "computable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "publishable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "executable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel",
    "valueCode": "structured"
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/ConversionFactors",
  "version": "3.0.0",
  "name": "ConversionFactors",
  "title": "Morphine Milligram Equivalent (MME) Conversion Factors for FHIR R4",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2022-02-01T20:35:24+00:00",
  "publisher": "Alphora",
  "contact": [ {
    "telecom": [ {
      "system": "url",
      "value": "http://alphora.com"
    } ]
  } ],
  "description": "This library contains logic to expose configurable conversion factors for the MME calculation functionality provided by the OMTKLogic library.",
  "useContext": [ {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "182888003",
        "display": "Medication requested (situation)"
      } ]
    }
  }, {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "82423001",
        "display": "Chronic pain (finding)"
      } ]
    }
  } ],
  "jurisdiction": [ {
    "coding": [ {
      "system": "http://unstats.un.org/unsd/methods/m49/m49.htm",
      "code": "840"
    } ]
  } ],
  "usage": "NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.",
  "copyright": "Copyright 2019+ Centers for Disease Control and Prevention (CDC)",
  "lastReviewDate": "2020-09-26",
  "topic": [ {
    "text": "Opioid Prescribing"
  }, {
    "text": "Morphine Milligram Equivalent (MME)"
  } ],
  "author": [ {
    "name": "Floyd Eisenberg, MD, MPH"
  }, {
    "name": "Kensaku Kawamoto, MD, PhD, MHS"
  }, {
    "name": "Robert McClure, MD"
  }, {
    "name": "Bryn Rhodes"
  } ],
  "relatedArtifact": [ {
    "type": "citation",
    "label": "RxNORM",
    "display": "This product uses publicly available data courtesy of the U.S. National Library of Medicine (NLM), National Institutes of Health, Department of Health and Human Services; NLM is not responsible for the product and does not endorse or recommend this or any other product.",
    "citation": "Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)",
    "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/",
    "document": {
      "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/"
    }
  }, {
    "type": "citation",
    "label": "UCUM",
    "display": "This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at http://unitsofmeasure.org<br/> The current complete UCUM table, UCUM Specification are available for download at http://unitsofmeasure.org<br/>The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.",
    "citation": "Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org",
    "url": "http://unitsofmeasure.org",
    "document": {
      "url": "http://unitsofmeasure.org"
    }
  }, {
    "type": "citation",
    "label": "CDC Opioid Prescribing Guideline",
    "display": "Centers For Disease Control and Prevention (CDC) Guideline for Prescribing Opioids for Chronic Pain — United States, 2016",
    "citation": "Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "document": {
      "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1"
    }
  }, {
    "type": "citation",
    "label": "Calculating total daily dose of opioids for safer dosage",
    "display": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.",
    "citation": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020",
    "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf",
    "document": {
      "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"
    }
  }, {
    "type": "documentation",
    "label": "Conversion Factors",
    "display": "Conversion Factors",
    "url": "http://fhir.org/guides/cdc/opioid-cds/conversion-factors.html",
    "document": {
      "url": "http://fhir.org/guides/cdc/opioid-cds/conversion-factors.html"
    }
  }, {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library CDCMMEClinicalConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/CDCMMEClinicalConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Code system Usage Context Type",
    "resource": "http://terminology.hl7.org/CodeSystem/usage-context-type"
  }, {
    "type": "depends-on",
    "display": "Code system CDC MME Usage Context Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes"
  } ],
  "parameter": [ {
    "name": "ErrorLevel",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "ConversionFactorSupplementName",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "ConversionFactorSupplement",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "CodeSystem"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBDb252ZXJzaW9uRmFjdG9ycyB2ZXJzaW9uICczLjAuMCcNCg0KLyoNClRoaXMgbGlicmFyeSBwcm92aWRlcyBsb2dpYyB0byBkZXRlcm1pbmUgdGhlIGFwcHJvcHJpYXRlIGNvbnZlcnNpb24gZmFjdG9yIHRvIGJlDQp1c2VkIGZvciBjYWxjdWxhdGluZyBNb3JwaGluZSBNaWxsaWdyYW0gRXF1aXZhbGVudCAoTU1FKSBmb3IgYSBnaXZlbiBtZWRpY2F0aW9uLg0KDQpUaGUgY29udmVyc2lvbiBmYWN0b3JzIGFyZSBjb25maWd1cmFibGUgdXNpbmcgYSBDb2RlU3lzdGVtIHN1cHBsZW1lbnQuIFRoaXMNCmltcGxlbWVudGF0aW9uIGd1aWRlIGNvbnRhaW5zIG9uZSBjb252ZXJzaW9uIGZhY3RvciB0YWJsZToNCg0KQ0RDTU1FQ2xpbmljYWxDb252ZXJzaW9uRmFjdG9ycw0KDQpUaGUgQ2xpbmljYWwgQ29udmVyc2lvbiBGYWN0b3JzIHRhYmxlIHVzZXMgdmFsdWVzIGZyb20gQ0RDIGd1aWRhbmNlIGhlcmU6DQpodHRwczovL3d3dy5jZGMuZ292L2RydWdvdmVyZG9zZS9wZGYvY2FsY3VsYXRpbmdfdG90YWxfZGFpbHlfZG9zZS1hLnBkZg0KDQpUaGUgQ29kZVN5c3RlbSBzdXBwbGVtZW50cyBhcmUgY29uZmlndXJlZCB3aXRoIDMgdHlwZXMgb2YgcHJvcGVydGllczoNCg0KKiBjb252ZXJzaW9uLWZhY3RvcjogRGVmaW5lcyB0aGUgY29udmVyc2lvbiBmYWN0b3IgZm9yIGEgc3BlY2lmaWMgaW5ncmVkaWVudCwNCndoZW4gdGhlIGNvbnZlcnNpb24gZmFjdG9yIGlzIHRoZSBzYW1lIGZvciBhbGwgZG9zZSBmb3JtcyBhbmQgZG9zZSBhbW91bnRzIGZvcg0KdGhlIGluZ3JlZGllbnQuIFRoZSB2YWx1ZSBvZiB0aGlzIHByb3BlcnR5IHdpbGwgYmUgdGhlIGRlY2ltYWwgcmVwcmVzZW50YXRpb24gb2YNCnRoZSBjb252ZXJzaW9uIGZhY3Rvci4NCiogZG9zZS1mb3JtLWNvbnZlcnNpb24tZmFjdG9yOiBEZWZpbmVzIHRoZSBjb252ZXJzaW9uIGZhY3RvciBmb3IgYW4gaW5ncmVkaWVudA0Kd2hlbiB0aGUgY29udmVyc2lvbiBmYWN0b3IgdmFyaWVzIGJ5IHRoZSBkb3NlIGZvcm0gb2YgdGhlIG1lZGljYXRpb24uIFRoZSB2YWx1ZQ0Kb2YgdGhpcyBwcm9wZXJ0eSB3aWxsIGJlIGEgc3RyaW5nIG9mIHRoZSBmb3JtDQo8ZG9zZS1mb3JtLWNvZGU+Ojxjb252ZXJzaW9uLWZhY3Rvcj5bQDxkb3Nlcy1wZXItZGF5Pl0sDQplLmcuIDk3MDc4OToxMzAsIHdoZXJlICc5NzA3ODknIGlzIHRoZSBSeE5vcm0gZG9zZSBmb3JtIGNvZGUsIGFuZCAnMTMwJyBpcyB0aGUNCmRlY2ltYWwgcmVwcmVzZW50YXRpb24gb2YgdGhlIGNvbnZlcnNpb24gZmFjdG9yLiBBbiBleGFtcGxlIG9mIGEgcGVyLWRheQ0KY29udmVyc2lvbiBmYWN0b3IgaXMgZmVudGFueWwsIDMxNjk4Nzo3MjAwQDAuMzMzMzMzMzMsIHdoZXJlIDMxNjk4NyBpcyBSeE5vcm0NCmRvc2UgZm9ybSBjb2RlLCA3MjAwIGlzIHRoZSBjb252ZXJzaW9uIGZhY3RvciwgYW5kIDAuMzMzMzMzMzMgaXMgdGhlIGRvc2VzUGVyRGF5LA0KZXhwcmVzc2VkIGFzIGEgZGVjaW1hbCB3aXRoIGEgbWF4aW11bSBvZiA4IGRpZ2l0cyBhZnRlciB0aGUgZGVjaW1hbC4NCiogZG9zZS1yYW5nZS1jb252ZXJzaW9uLWZhY3RvcjogRGVmaW5lcyB0aGUgY29udmVyc2lvbiBmYWN0b3IgZm9yIGFuIGluZ3JlZGllbnQNCndoZW4gdGhlIGNvbnZlcnNpb24gZmFjdG9yIHZhcmllcyBieSB0aGUgb3ZlcmFsbCBkb3NlIG9mIHRoZSBtZWRpY2F0aW9uLiBUaGUNCnZhbHVlIG9mIHRoaXMgcHJvcGVydHkgd2lsbCBiZSBhIHN0cmluZyBvZiB0aGUgZm9ybQ0KPGxvdy12YWx1ZT4tPGhpZ2gtdmFsdWU+Ojxjb252ZXJzaW9uLWZhY3Rvcj4sDQplLmcuIDEtMjA6NC4gTm90ZSB0aGF0IHRoZSBsb3ctdmFsdWUgb3IgaGlnaC12YWx1ZSBtYXkgYmUgYSB3aWxkY2FyZCAnKicgdG8NCmluZGljYXRlIHRoZSByYW5nZSBjb250aW51ZXMgKGUuZy4gJzYxLSo6MTInIGluZGljYXRlcyB0aGUgcmFuZ2UgaXMgNjEgb3IgZ3JlYXRlcikuDQoNCkZvciBhIGdpdmVuIGluZ3JlZGllbnQsIG9ubHkgb25lIG9mICdkb3NlLWZvcm0nIG9yICdkb3NlLXJhbmdlJyB3aWxsIGJlIHByZXNlbnQsDQp3aXRoIG9yIHdpdGhvdXQgYW4gaW5ncmVkaWVudC1zcGVjaWZpYyBjb252ZXJzaW9uIGZhY3Rvci4gVGhlIHByb3BlcnRpZXMgdG9nZXRoZXINCndpbGwgZW5hYmxlIGEgdW5pcXVlIGNvbnZlcnNpb24gZmFjdG9yIHRvIGJlIGRldGVybWluZWQgaWYgdGhlIGlucHV0IGlzIHdpdGhpbg0KdGhlIGV4cGVjdGVkIHJhbmdlLiBJZiB0aGUgaW5wdXQgaXMgb3V0c2lkZSB0aGUgZXhwZWN0ZWQgcmFuZ2UsIGFuZCB0aGVyZSBpcyBubw0KaW5ncmVkaWVudC1zcGVjaWZpYyBjb252ZXJzaW9uLWZhY3RvciBzcGVjaWZpZWQsIGltcGxlbWVudGF0aW9ucyBzaG91bGQgaW5kaWNhdGUNCmEgY29udmVyc2lvbiBmYWN0b3IgY291bGQgbm90IGJlIGRldGVybWluZWQgZnJvbSB0aGUgc3VwcGxpZWQgaW5mb3JtYXRpb24uDQpBbGwgY29udmVyc2lvbiBmYWN0b3JzIHN1cHBsaWVkIGluIHRoZXNlIHN1cHBsZW1lbnRzIGFyZSBpbiAnbWcvZCcuDQoqLw0KDQp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJw0KDQppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJw0KaW5jbHVkZSBDRENNTUVDbGluaWNhbENvbnZlcnNpb25GYWN0b3JzIHZlcnNpb24gJzMuMC4wJyBjYWxsZWQgQ0RDTU1FQ2xpbmljYWxDb252ZXJzaW9uRmFjdG9ycw0KDQpjb2Rlc3lzdGVtICJVc2FnZSBDb250ZXh0IFR5cGUiOiAnaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS91c2FnZS1jb250ZXh0LXR5cGUnDQpjb2Rlc3lzdGVtICJDREMgTU1FIFVzYWdlIENvbnRleHQgQ29kZXMiOiAnaHR0cDovL2ZoaXIub3JnL2d1aWRlcy9jZGMvb3Bpb2lkLW1tZS1yNC9Db2RlU3lzdGVtL0NEQ01NRVVzYWdlQ29udGV4dENvZGVzJw0KDQpjb2RlICJUYXNrIFVzYWdlIENvbnRleHQiOiAndGFzaycgZnJvbSAiVXNhZ2UgQ29udGV4dCBUeXBlIg0KY29kZSAiTU1FIENhbGN1bGF0aW9uIjogJ21tZS1jYWxjdWxhdGlvbicgZnJvbSAiQ0RDIE1NRSBVc2FnZSBDb250ZXh0IENvZGVzIg0KDQpwYXJhbWV0ZXIgRXJyb3JMZXZlbCBTdHJpbmcgZGVmYXVsdCAnVHJhY2UnDQoNCi8qDQpJZiB0aGlzIHBhcmFtZXRlciBpcyBzdXBwbGllZCwgaXQgc3BlY2lmaWVzIHRoZSBuYW1lIG9mIHRoZSBjb2RlIHN5c3RlbSBzdXBwbGVtZW50DQp0byBiZSB1c2VkIHRvIHN1cHBseSBjb252ZXJzaW9uIGZhY3RvcnMgZm9yIHRoZSBjYWxjdWxhdG9yLiBJZiB0aGlzIHBhcmFtZXRlciBpcyBub3QNCnByb3ZpZGVkLCB0aGUgX3NpbmdsZV8gQ29kZVN5c3RlbSB3aXRoIGEgdGFzayB1c2FnZSBjb250ZXh0IGNvZGUgb2YgIm1tZS1jYWxjdWxhdGlvbiINCmZyb20gdGhlIENEQ01NRVVzYWdlQ29udGV4dENvZGVzIGNvZGUgc3lzdGVtIHdpbGwgYmUgdXNlZCB0byBwcm92aWRlIGNvbnZlcnNpb24gZmFjdG9ycy4NCklmIG5laXRoZXIgb2YgdGhlc2UgY29uZmlndXJhdGlvbnMgaXMgYXZhaWxhYmxlLCB0aGUgaGFyZC1jb2RlZCBjb252ZXJzaW9uIGZhY3RvcnMNCmluIEdldENvbnZlcnNpb25GYWN0b3Igd2lsbCBiZSB1c2VkLiBUaGUgaGFyZC1jb2RlZCBjb252ZXJzaW9uIGZhY3RvcnMgdXNlIHRoZQ0KY2xpbmljYWwgY29udmVyc2lvbiBmYWN0b3JzIG9ubHkuDQoqLw0KcGFyYW1ldGVyIENvbnZlcnNpb25GYWN0b3JTdXBwbGVtZW50TmFtZSBTdHJpbmcgZGVmYXVsdCAnQ0RDTU1FQ2xpbmljYWxDb252ZXJzaW9uRmFjdG9ycycNCg0KY29udGV4dCBQYXRpZW50DQoNCi8qDQpSZXR1cm5zIHRoZSBjb252ZXJzaW9uIGZhY3RvciBmb3IgdGhlIGdpdmVuIGluZ3JlZGllbnQNCg0KQ0RDIEd1aWRhbmNlOg0KaHR0cHM6Ly93d3cuY2RjLmdvdi9kcnVnb3ZlcmRvc2UvcGRmL2NhbGN1bGF0aW5nX3RvdGFsX2RhaWx5X2Rvc2UtYS5wZGYNCg0KfE9waW9pZCAoc3RyZW5ndGggaW4gbWcgZXhjZXB0IHdoZXJlIG5vdGVkKSAgICAgfE1NRSBDb252ZXJzaW9uIEZhY3Rvcip8DQp8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwNCnxDb2RlaW5lICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgIDAuMTUgfA0KfEZlbnRhbnlsLCB0cmFuc2Rlcm1hbCBwYXRjaCAoTUNHL0hSKSAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgMi40ICB8DQp8SHlkcm9jb2RvbmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAxICAgIHwNCnxIeWRyb21vcnBob25lICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgIDQgICAgfA0KfE1ldGhhZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICB8DQp8ICAxLTIwIG1nL2QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICA0ICAgIHwNCnwgIDIxLTQwIG1nL2QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgIDggICAgfA0KfCAgNDEtNjAgbWcvZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAxMCAgICB8DQp8ICA2MS04MCsgbWcvZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgIDEyICAgIHwNCnwgTW9ycGhpbmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgIDEgICAgfA0KfCBPeHljb2RvbmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgMS41ICB8DQp8IE94eW1vcnBob25lICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAzICAgIHwNCg0KKi8NCmRlZmluZSBmdW5jdGlvbiBHZXRDb252ZXJzaW9uRmFjdG9yKGluZ3JlZGllbnRDb2RlIFN5c3RlbS5Db2RlLCBkYWlseURvc2UgU3lzdGVtLlF1YW50aXR5LCBkb3NlRm9ybUNvZGUgU3lzdGVtLkNvZGUsIGRvc2VzUGVyRGF5IFN5c3RlbS5EZWNpbWFsKToNCiAgQ29hbGVzY2UoDQogICAgTG9va3VwQ29udmVyc2lvbkZhY3RvcihpbmdyZWRpZW50Q29kZSwgZGFpbHlEb3NlLCBkb3NlRm9ybUNvZGUsIGRvc2VzUGVyRGF5KSwNCiAgICBjYXNlIFRvSW50ZWdlcihpbmdyZWRpZW50Q29kZS5jb2RlKQ0KICAgICAgd2hlbiAyNjcwIHRoZW4gMC4xNSAvKglDb2RlaW5lICovDQogICAgICB3aGVuIDQzMzcgdGhlbiAoIC8qCUZlbnRhbnlsICovDQogICAgICAgIGNhc2UNCiAgICAgICAgICB3aGVuIFRvSW50ZWdlcihkb3NlRm9ybUNvZGUuY29kZSkgPSAzMTY5ODcgdGhlbiAoMC4zMzMzMzMzMyAvIGRvc2VzUGVyRGF5KSAqIDcyMDAgLyogVHJhbnNkZXJtYWwgc3lzdGVtICovDQogICAgICAgICAgZWxzZSBNZXNzYWdlKG51bGwsIHRydWUsICdPTVRLTG9naWMuR2V0Q29udmVyc2lvbkZhY3Rvci5Vbmtub3duRG9zZUZvcm0nLCBFcnJvckxldmVsLCAnVW5rbm93biBkb3NlIGZvcm0gY29kZSAnICYgZG9zZUZvcm1Db2RlLmNvZGUpDQogICAgICAgIGVuZA0KICAgICAgKQ0KICAgICAgd2hlbiA1NDg5IHRoZW4gMSAvKglIeWRyb2NvZG9uZSAqLw0KICAgICAgd2hlbiAzNDIzIHRoZW4gNCAvKglIeWRyb21vcnBob25lICovDQogICAgICB3aGVuIDY4MTMgdGhlbiAoIC8qCU1ldGhhZG9uZSAqLw0KICAgICAgICBjYXNlDQogICAgICAgICAgd2hlbiBkYWlseURvc2UudmFsdWUgYmV0d2VlbiAxIGFuZCAyMCB0aGVuIDQNCiAgICAgICAgICB3aGVuIGRhaWx5RG9zZS52YWx1ZSBiZXR3ZWVuIDIxIGFuZCA0MCB0aGVuIDgNCiAgICAgICAgICB3aGVuIGRhaWx5RG9zZS52YWx1ZSBiZXR3ZWVuIDQxIGFuZCA2MCB0aGVuIDEwDQogICAgICAgICAgd2hlbiBkYWlseURvc2UudmFsdWUgPj0gNjEgdGhlbiAxMg0KICAgICAgICAgIHdoZW4gZGFpbHlEb3NlIGlzIG51bGwgb3IgZGFpbHlEb3NlLnZhbHVlIGlzIG51bGwgdGhlbg0KICAgICAgICAgICAgTWVzc2FnZShudWxsLCB0cnVlLCAnT01US0xvZ2ljLkdldENvbnZlcnNpb25GYWN0b3IuRGFpbHlEb3NlTnVsbCcsIEVycm9yTGV2ZWwsICdEYWlseSBkb3NlIGlzIHJlcXVpcmVkIHRvIGRldGVybWluZSBtZXRoYWRvbmUgY29udmVyc2lvbiBmYWN0b3InKQ0KICAgICAgICAgIGVsc2UgTWVzc2FnZShudWxsLCBkYWlseURvc2UudmFsdWUgPCAxLCAnT01US0xvZ2ljLkdldENvbnZlcnNpb25GYWN0b3IuRGFpbHlEb3NlTGVzc1RoYW5PbmUnLCBFcnJvckxldmVsLCAnRGFpbHkgZG9zZSBsZXNzIHRoYW4gMScpDQogICAgICAgIGVuZA0KICAgICAgKQ0KICAgICAgd2hlbiA3MDUyIHRoZW4gMSAvKglNb3JwaGluZSAqLw0KICAgICAgd2hlbiA3ODA0IHRoZW4gMS41IC8qCU94eWNvZG9uZSAqLw0KICAgICAgd2hlbiA3ODE0IHRoZW4gMyAvKglPeHltb3JwaG9uZSAqLw0KICAgICAgZWxzZSBNZXNzYWdlKG51bGwsIHRydWUsICdPTVRLTG9naWMuR2V0Q29udmVyc2lvbkZhY3Rvci5Vbmtub3duSW5ncmVkaWVudENvZGUnLCBFcnJvckxldmVsLCAnVW5rbm93biBpbmdyZWRpZW50IGNvZGU6ICcgJiBpbmdyZWRpZW50Q29kZS5jb2RlKQ0KICAgIGVuZA0KICApDQoNCi8qDQpUaGUgdXNlIG9mIHRoZSBDRENNTUVDbGluaWNhbENvbnZlcnNpb25GYWN0b3JzIGlzIGEgd29ya2Fyb3VuZCBmb3IgdGhlIGZhY3QgdGhhdCB3ZSBjYW4ndCByZXRyaWV2ZSB0aGUgZm9ybWFsbHkgDQpkZWZpbmVkIENvZGVTeXN0ZW0gcmVzb3VyY2UgKGh0dHBzOi8vZmhpci5vcmcvZ3VpZGVzL2NkYy9vcGlvaWQtbW1lLXI0L0NvZGVTeXN0ZW0tQ0RDTU1FQ2xpbmljYWxDb252ZXJzaW9uRmFjdG9ycy5odG1sKSANCmZyb20gdGhlIEZISVIgc2VydmVyDQoqLw0KZGVmaW5lIENvbnZlcnNpb25GYWN0b3JTdXBwbGVtZW50Og0KICBDRENNTUVDbGluaWNhbENvbnZlcnNpb25GYWN0b3JzLiJDRENNTUVDbGluaWNhbENvbnZlcnNpb25GYWN0b3JzQ29kZVN5c3RlbSIgQw0KICAgIHdoZXJlIEMuc3VwcGxlbWVudHMudmFsdWUgPSAnaHR0cDovL3d3dy5ubG0ubmloLmdvdi9yZXNlYXJjaC91bWxzL3J4bm9ybScNCiAgICBhbmQgKA0KICAgICAgQy5uYW1lLnZhbHVlID0gQ29udmVyc2lvbkZhY3RvclN1cHBsZW1lbnROYW1lDQogICAgICAgIG9yIGV4aXN0cyAoDQogICAgICAgICAgQy51c2VDb250ZXh0IFVDDQogICAgICAgICAgICB3aGVyZSBVQy5jb2RlIH4gIlRhc2sgVXNhZ2UgQ29udGV4dCINCiAgICAgICAgICAgICAgYW5kIFVDLnZhbHVlIH4gIk1NRSBDYWxjdWxhdGlvbiINCiAgICAgICAgKQ0KICAgICkNCg0KLyoNCkNvbnZlcnRzIGEgcmFuZ2UgdmFsdWUgYm91bmRhcnkgdG8gYSBEZWNpbWFsIChvciBudWxsIGZvciBhIHdpbGRjYXJkKQ0KKi8NCmRlZmluZSBmdW5jdGlvbiBUb1JhbmdlVmFsdWUodmFsdWUgU3lzdGVtLlN0cmluZyk6DQogIGlmIHZhbHVlID0gJyonIHRoZW4gbnVsbCBlbHNlIFRvRGVjaW1hbCh2YWx1ZSkNCg0KLyoNCkNvbnZlcnRzIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiBhIGRvc2UtcmFuZ2UtY29udmVyc2lvbi1mYWN0b3IgcHJvcGVydHkgdG8gdGhlIGRvc2UgcmFuZ2UNCjxsb3ctdmFsdWU+LTxoaWdoLXZhbHVlPjo8Y29udmVyc2lvbi1mYWN0b3I+DQpOb3RlIHRoYXQgbG93LXZhbHVlIGFuZC9vciBoaWdoLXZhbHVlIG1heSBiZSB3aWxkY2FyZHMgJyonDQoqLw0KZGVmaW5lIGZ1bmN0aW9uIFRvRG9zZVJhbmdlKHByb3BlcnR5VmFsdWUgRkhJUi5zdHJpbmcpOg0KICAoeyA6IH0pIFgNCiAgICBsZXQgcmFuZ2VWYWx1ZXM6IFNwbGl0KFNwbGl0KHByb3BlcnR5VmFsdWUudmFsdWUsICc6JylbMF0sICctJykNCiAgICByZXR1cm4gSW50ZXJ2YWxbVG9SYW5nZVZhbHVlKHJhbmdlVmFsdWVzWzBdKSwgVG9SYW5nZVZhbHVlKHJhbmdlVmFsdWVzWzFdKV0NCg0KLyoNCkNvbnZlcnRzIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiBhIGRvc2UtcmFuZ2UtY29udmVyc2lvbi1mYWN0b3IgcHJvcGVydHkgdG8gdGhlIGNvbnZlcnNpb24gZmFjdG9yDQo8bG93LXZhbHVlPi08aGlnaC12YWx1ZT46PGNvbnZlcnNpb24tZmFjdG9yPg0KKi8NCmRlZmluZSBmdW5jdGlvbiBUb0Rvc2VSYW5nZUNvbnZlcnNpb25GYWN0b3IocHJvcGVydHlWYWx1ZSBGSElSLnN0cmluZyk6DQogIFRvRGVjaW1hbChTcGxpdChwcm9wZXJ0eVZhbHVlLnZhbHVlLCAnOicpWzFdKQ0KDQovKg0KQ29udmVydHMgdGhlIHByb3BlcnR5IHZhbHVlIG9mIGEgZG9zZS1mb3JtLWNvbnZlcnNpb24tZmFjdG9yIHByb3BlcnR5IHRvIHRoZSBkb3NlIGZvcm0NCjxkb3NlLWZvcm0tY29kZT46PGNvbnZlcnNpb24tZmFjdG9yPg0KKi8NCmRlZmluZSBmdW5jdGlvbiBUb0Rvc2VGb3JtKHByb3BlcnR5VmFsdWUgRkhJUi5zdHJpbmcpOg0KICBTcGxpdChwcm9wZXJ0eVZhbHVlLnZhbHVlLCAnOicpWzBdDQoNCi8qDQpDb252ZXJ0cyB0aGUgcHJvcGVydHkgdmFsdWUgb2YgYSBkb3NlLWZvcm0tY29udmVyc2lvbi1mYWN0b3IgcHJvcGVydHkgdG8gdGhlIGNvbnZlcnNpb24gZmFjdG9yDQo8ZG9zZS1mb3JtLWNvZGU+Ojxjb252ZXJzaW9uLWZhY3Rvcj5bQGRvc2VzLXBlci1kYXldDQoqLw0KZGVmaW5lIGZ1bmN0aW9uIFRvRG9zZUZvcm1Db252ZXJzaW9uRmFjdG9yKHByb3BlcnR5VmFsdWUgRkhJUi5zdHJpbmcsIGRvc2VzUGVyRGF5IFN5c3RlbS5EZWNpbWFsKToNCiAgaWYgUG9zaXRpb25PZignQCcsIHByb3BlcnR5VmFsdWUudmFsdWUpID4gMCB0aGVuDQogICAgVG9Eb3NlRm9ybURvc2VzUGVyRGF5Q29udmVyc2lvbkZhY3Rvcihwcm9wZXJ0eVZhbHVlLCBkb3Nlc1BlckRheSkNCiAgZWxzZQ0KICAgIFRvRGVjaW1hbChTcGxpdChwcm9wZXJ0eVZhbHVlLnZhbHVlLCAnOicpWzFdKQ0KDQovKg0KQ29udmVydHMgdGhlIHByb3BlcnR5IHZhbHVlIG9mIGEgZG9zZS1mb3JtLWNvbnZlcnNpb24tZmFjdG9yIHByb3BlcnR5IHRvIHRoZSBjb252ZXJzaW9uIGZhY3Rvcg0KaWYgdGhlIHByb3BlcnR5IGluY2x1ZGVzIGEgZG9zZXMtcGVyLWRheSB2YWx1ZQ0KKi8NCmRlZmluZSBmdW5jdGlvbiBUb0Rvc2VGb3JtRG9zZXNQZXJEYXlDb252ZXJzaW9uRmFjdG9yKHByb3BlcnR5VmFsdWUgRkhJUi5zdHJpbmcsIGRvc2VzUGVyRGF5IFN5c3RlbS5EZWNpbWFsKToNCiAgcHJvcGVydHlWYWx1ZSBQDQogICAgbGV0IGNvbXBvbmVudHM6IFNwbGl0KFAudmFsdWUsICdAJykNCiAgICByZXR1cm4gKFRvRGVjaW1hbChjb21wb25lbnRzWzFdKSAvIGRvc2VzUGVyRGF5KSAqIFRvRGVjaW1hbChTcGxpdChjb21wb25lbnRzWzBdLCAnOicpWzFdKQ0KDQovKg0KUmV0dXJucyB0aGUgY29udmVyc2lvbiBmYWN0b3IgZm9yIGEgY29udmVyc2lvbi1mYWN0b3IgcHJvcGVydHkNCk5PVEU6IFRoZXNlIGZ1bmN0aW9ucyBhcmUgdXNlZCB0byBhdm9pZCB1c2Ugb2YgX2lzXyBhbmQgX2FzXw0KKi8NCmRlZmluZSBmdW5jdGlvbiBUb0NvbnZlcnNpb25GYWN0b3IocHJvcGVydHlWYWx1ZSBGSElSLmRlY2ltYWwpOg0KICBwcm9wZXJ0eVZhbHVlLnZhbHVlDQoNCi8qDQpMb29rcyB1cCB0aGUgY29udmVyc2lvbiBmYWN0b3IgZm9yIHRoZSBnaXZlbiBpbmdyZWRpZW50LCBkYWlseSBkb3NlLCBhbmQgZG9zZSBmb3JtIGZyb20gdGhlDQpjb25maWd1cmVkIGNvbnZlcnNpb24gZmFjdG9yIHN1cHBsZW1lbnQsIGlmIGF2YWlsYWJsZS4NCg0KSWYgbm8gY29udmVyc2lvbiBmYWN0b3Igc3VwcGxlbWVudCBpcyBjb25maWd1cmVkLCByZXR1cm5zIG51bGwNCiovDQpkZWZpbmUgZnVuY3Rpb24gTG9va3VwQ29udmVyc2lvbkZhY3RvcihpbmdyZWRpZW50Q29kZSBTeXN0ZW0uQ29kZSwgZGFpbHlEb3NlIFN5c3RlbS5RdWFudGl0eSwgZG9zZUZvcm1Db2RlIFN5c3RlbS5Db2RlLCBkb3Nlc1BlckRheSBTeXN0ZW0uRGVjaW1hbCk6DQogIENvbnZlcnNpb25GYWN0b3JTdXBwbGVtZW50IENGUw0KICAgIGxldA0KICAgICAgaW5ncmVkaWVudENvbmNlcHQ6IHNpbmdsZXRvbiBmcm9tIChDRlMuImNvbmNlcHQiIEMgd2hlcmUgQy5jb2RlLnZhbHVlID0gaW5ncmVkaWVudENvZGUuY29kZSksDQogICAgICBjb252ZXJzaW9uRmFjdG9yOiBzaW5nbGV0b24gZnJvbSAoaW5ncmVkaWVudENvbmNlcHQucHJvcGVydHkgUCB3aGVyZSBQLmNvZGUudmFsdWUgPSAnY29udmVyc2lvbi1mYWN0b3InKSwNCiAgICAgIGRvc2VGb3JtQ29udmVyc2lvbkZhY3RvcnM6IChpbmdyZWRpZW50Q29uY2VwdC5wcm9wZXJ0eSBQIHdoZXJlIFAuY29kZS52YWx1ZSA9ICdkb3NlLWZvcm0tY29udmVyc2lvbi1mYWN0b3InKSwNCiAgICAgIGRvc2VSYW5nZUNvbnZlcnNpb25GYWN0b3JzOiAoaW5ncmVkaWVudENvbmNlcHQucHJvcGVydHkgUCB3aGVyZSBQLmNvZGUudmFsdWUgPSAnZG9zZS1yYW5nZS1jb252ZXJzaW9uLWZhY3RvcicpDQogICAgcmV0dXJuDQogICAgICBDb2FsZXNjZQ0KICAgICAgKA0KICAgICAgICBjYXNlDQogICAgICAgICAgd2hlbiBleGlzdHMgKGRvc2VSYW5nZUNvbnZlcnNpb25GYWN0b3JzKSB0aGVuDQogICAgICAgICAgICBzaW5nbGV0b24gZnJvbSAoDQogICAgICAgICAgICAgIGRvc2VSYW5nZUNvbnZlcnNpb25GYWN0b3JzIERSQ0YNCiAgICAgICAgICAgICAgICB3aGVyZSBkYWlseURvc2UudmFsdWUgaW4gVG9Eb3NlUmFuZ2UoRFJDRi52YWx1ZSkNCiAgICAgICAgICAgICAgICByZXR1cm4gVG9Eb3NlUmFuZ2VDb252ZXJzaW9uRmFjdG9yKERSQ0YudmFsdWUpDQogICAgICAgICAgICApDQogICAgICAgICAgd2hlbiBleGlzdHMgKGRvc2VGb3JtQ29udmVyc2lvbkZhY3RvcnMpIHRoZW4NCiAgICAgICAgICAgIHNpbmdsZXRvbiBmcm9tICgNCiAgICAgICAgICAgICAgZG9zZUZvcm1Db252ZXJzaW9uRmFjdG9ycyBERkNGDQogICAgICAgICAgICAgICAgd2hlcmUgZG9zZUZvcm1Db2RlLmNvZGUgPSBUb0Rvc2VGb3JtKERGQ0YudmFsdWUpDQogICAgICAgICAgICAgICAgcmV0dXJuIFRvRG9zZUZvcm1Db252ZXJzaW9uRmFjdG9yKERGQ0YudmFsdWUsIGRvc2VzUGVyRGF5KQ0KICAgICAgICAgICAgKQ0KICAgICAgICAgIGVsc2UgbnVsbA0KICAgICAgICBlbmQsDQogICAgICAgIFRvQ29udmVyc2lvbkZhY3Rvcihjb252ZXJzaW9uRmFjdG9yLnZhbHVlKQ0KICAgICAgKQ=="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}
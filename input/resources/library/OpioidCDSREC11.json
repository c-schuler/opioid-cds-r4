{
  "resourceType": "Library",
  "id": "OpioidCDSREC11",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-OpioidCDSREC11</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> logic-library </td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">0.1.1</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"3\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers</span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommon</span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSRoutines</span></p></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library OpioidCDSREC11 version '0.1.1'\n\nusing FHIR version '4.0.1'\n\ninclude FHIRHelpers version '4.0.1' called FHIRHelpers\ninclude OpioidCDSCommon version '0.1.1' called Common\ninclude OpioidCDSRoutines version '0.1.1' called Routines\n\n/*\n**\n**  Recommendation #11\n**    Clinicians should avoid prescribing opioid pain medication and benzodiazepines\n**    concurrently whenever possible (recommendation category: A, evidence type: 3)\n**\n**  When\n**    Provider is prescribing an opioid analgesic with ambulatory misuse potential in the outpatient setting\n**    Provider is prescribing a benzodiazepine medication\n**    Opioid review is useful for this patient:\n**      Patient is 18 or over\n**      Patient does not have findings indicating limited life expectancy\n**      Patient does not have orders for therapies indicating end of life care\n**      Patient is not undergoing active cancer treatment:\n**        Patient has had at least 2 encounters within the past year with any diagnosis of cancer\n**    Patient prescribed opioid analgesic with ambulatory misuse potential and benzodiazepine medication concurrently\n**  Then\n**    Recommend to avoid prescribing opioid pain medication and benzodiazepine concurrently\n**      Will revise\n**      Benefits outweigh risks, snooze 3 months\n**      N/A - see comment, snooze 3 months\n**\n*/\n\n// META: Plan Definition: http://fhir.org/guides/cdc/opioid-cds-r4/PlanDefinition/opioid-cds-11\n\nparameter ContextPrescriptions List&lt;MedicationRequest&gt;\n\ncontext Patient\n\ndefine &quot;Opioid Analgesic with Ambulatory Misuse Potential Prescriptions&quot;:\n  Common.&quot;Is Opioid Analgesic with Ambulatory Misuse Potential?&quot;( ContextPrescriptions )\n\ndefine &quot;Benzodiazepine Prescriptions&quot;:\n  Common.&quot;Is Benzodiazepine?&quot;( ContextPrescriptions )\n\ndefine &quot;Patient Is Being Prescribed Opioid Analgesic with Ambulatory Misuse Potential&quot;:\n  exists( &quot;Opioid Analgesic with Ambulatory Misuse Potential Prescriptions&quot; )\n\ndefine &quot;Patient Is Being Prescribed Benzodiazepine&quot;:\n  exists( &quot;Benzodiazepine Prescriptions&quot; )\n\ndefine &quot;Is Recommendation Applicable?&quot;:\n  &quot;Inclusion Criteria&quot;\n    and not &quot;Exclusion Criteria&quot;\n\ndefine &quot;Inclusion Criteria&quot;:\n  (\n    (\n      &quot;Patient Is Being Prescribed Opioid Analgesic with Ambulatory Misuse Potential&quot;\n        and exists Common.&quot;Active Ambulatory Benzodiazepine Rx&quot;\n    )\n      or (\n        &quot;Patient Is Being Prescribed Benzodiazepine&quot;\n          and exists Common.&quot;Active Ambulatory Opioid Rx&quot;\n      )\n  )\n    and Routines.&quot;Is Opioid Review Useful?&quot;\n\ndefine &quot;Exclusion Criteria&quot;:\n  Common.&quot;End of Life Assessment&quot;\n\ndefine &quot;Get Indicator&quot;:\n  if &quot;Is Recommendation Applicable?&quot;\n    then 'warning'\n  else null\n\ndefine &quot;Get Summary&quot;:\n  if &quot;Is Recommendation Applicable?&quot;\n    then 'Avoid prescribing opioid pain medication and benzodiazepine concurrently whenever possible.'\n  else null\n\ndefine &quot;Get Detail&quot;:\n  if &quot;Is Recommendation Applicable?&quot;\n    then\n      if &quot;Patient Is Being Prescribed Benzodiazepine&quot;\n        then 'The benzodiazepine prescription request is concurrent with an active opioid prescription'\n      else 'The opioid prescription request is concurrent with an active benzodiazepine prescription'\n  else null\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSREC11",
  "version": "0.1.1",
  "name": "OpioidCDSREC11",
  "title": "Library - Recommendation #11 - Concurrent Use of Opioids and Benzodiazepines",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommon|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Library Config",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommonConfig|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Library Routines",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSRoutines|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Value set Opioid analgesics with ambulatory misuse potential",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/opioid-analgesics-with-ambulatory-misuse-potential"
  }, {
    "type": "depends-on",
    "display": "Value set Community",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/medicationrequest-category-community"
  }, {
    "type": "depends-on",
    "display": "Value set Benzodiazepine medications",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/benzodiazepine-medications"
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Diagnosis Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-encounter-diagnosis-category"
  }, {
    "type": "depends-on",
    "display": "Value set Problem List Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-problem-list-category"
  }, {
    "type": "depends-on",
    "display": "Value set US Core Health Concern Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-us-core-health-concern-category"
  }, {
    "type": "depends-on",
    "display": "Value set Limited life expectancy conditions",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/limited-life-expectancy-conditions"
  }, {
    "type": "depends-on",
    "display": "Value set Active Condition",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-clinical-status-active"
  }, {
    "type": "depends-on",
    "display": "Value set Therapies indicating end of life care",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/therapies-indicating-end-of-life-care"
  }, {
    "type": "depends-on",
    "display": "Value set Conditions likely terminal for opioid prescribing",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/conditions-likely-terminal-for-opioid-prescribing"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Procedure Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/hospice-procedure"
  } ],
  "parameter": [ {
    "name": "ContextPrescriptions",
    "use": "in",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Opioid Analgesic with Ambulatory Misuse Potential Prescriptions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Benzodiazepine Prescriptions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Patient Is Being Prescribed Opioid Analgesic with Ambulatory Misuse Potential",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Is Being Prescribed Benzodiazepine",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Age Less Than 18",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Exclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Is Recommendation Applicable?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Get Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Get Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Get Detail",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Medication",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Medication" ],
    "mustSupport": [ "id" ],
    "codeFilter": [ {
      "path": "id"
    } ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "authoredOn", "medication" ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "authoredOn", "medication" ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-encounter-diagnosis-category"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-problem-list-category"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-us-core-health-concern-category"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "status", "intent", "authoredOn", "code" ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "status", "status.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/hospice-procedure"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "code", "status", "status.value" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "period", "period.start", "status", "status.value" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBPcGlvaWRDRFNSRUMxMSB2ZXJzaW9uICcwLjEuMScKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMKaW5jbHVkZSBPcGlvaWRDRFNDb21tb24gdmVyc2lvbiAnMC4xLjEnIGNhbGxlZCBDb21tb24KaW5jbHVkZSBPcGlvaWRDRFNDb21tb25Db25maWcgdmVyc2lvbiAnMC4xLjEnIGNhbGxlZCBDb25maWcKaW5jbHVkZSBPcGlvaWRDRFNSb3V0aW5lcyB2ZXJzaW9uICcwLjEuMScgY2FsbGVkIFJvdXRpbmVzCgovKgoqKgoqKiAgUmVjb21tZW5kYXRpb24gIzExCioqICAgIENsaW5pY2lhbnMgc2hvdWxkIGF2b2lkIHByZXNjcmliaW5nIG9waW9pZCBwYWluIG1lZGljYXRpb24gYW5kIGJlbnpvZGlhemVwaW5lcwoqKiAgICBjb25jdXJyZW50bHkgd2hlbmV2ZXIgcG9zc2libGUgKHJlY29tbWVuZGF0aW9uIGNhdGVnb3J5OiBBLCBldmlkZW5jZSB0eXBlOiAzKQoqKgoqKiAgV2hlbgoqKiAgICBQcm92aWRlciBpcyBwcmVzY3JpYmluZyBhbiBvcGlvaWQgYW5hbGdlc2ljIHdpdGggYW1idWxhdG9yeSBtaXN1c2UgcG90ZW50aWFsIGluIHRoZSBvdXRwYXRpZW50IHNldHRpbmcKKiogICAgUHJvdmlkZXIgaXMgcHJlc2NyaWJpbmcgYSBiZW56b2RpYXplcGluZSBtZWRpY2F0aW9uCioqICAgIE9waW9pZCByZXZpZXcgaXMgdXNlZnVsIGZvciB0aGlzIHBhdGllbnQ6CioqICAgICAgUGF0aWVudCBpcyAxOCBvciBvdmVyCioqICAgICAgUGF0aWVudCBkb2VzIG5vdCBoYXZlIGZpbmRpbmdzIGluZGljYXRpbmcgbGltaXRlZCBsaWZlIGV4cGVjdGFuY3kKKiogICAgICBQYXRpZW50IGRvZXMgbm90IGhhdmUgb3JkZXJzIGZvciB0aGVyYXBpZXMgaW5kaWNhdGluZyBlbmQgb2YgbGlmZSBjYXJlCioqICAgICAgUGF0aWVudCBpcyBub3QgdW5kZXJnb2luZyBhY3RpdmUgY2FuY2VyIHRyZWF0bWVudDoKKiogICAgICAgIFBhdGllbnQgaGFzIGhhZCBhdCBsZWFzdCAyIGVuY291bnRlcnMgd2l0aGluIHRoZSBwYXN0IHllYXIgd2l0aCBhbnkgZGlhZ25vc2lzIG9mIGNhbmNlcgoqKiAgICBQYXRpZW50IHByZXNjcmliZWQgb3Bpb2lkIGFuYWxnZXNpYyB3aXRoIGFtYnVsYXRvcnkgbWlzdXNlIHBvdGVudGlhbCBhbmQgYmVuem9kaWF6ZXBpbmUgbWVkaWNhdGlvbiBjb25jdXJyZW50bHkKKiogIFRoZW4KKiogICAgUmVjb21tZW5kIHRvIGF2b2lkIHByZXNjcmliaW5nIG9waW9pZCBwYWluIG1lZGljYXRpb24gYW5kIGJlbnpvZGlhemVwaW5lIGNvbmN1cnJlbnRseQoqKiAgICAgIFdpbGwgcmV2aXNlCioqICAgICAgQmVuZWZpdHMgb3V0d2VpZ2ggcmlza3MsIHNub296ZSAzIG1vbnRocwoqKiAgICAgIE4vQSAtIHNlZSBjb21tZW50LCBzbm9vemUgMyBtb250aHMKKioKKi8KCi8vIE1FVEE6IFBsYW4gRGVmaW5pdGlvbjogaHR0cDovL2ZoaXIub3JnL2d1aWRlcy9jZGMvb3Bpb2lkLWNkcy1yNC9QbGFuRGVmaW5pdGlvbi9vcGlvaWQtY2RzLTExCgpwYXJhbWV0ZXIgQ29udGV4dFByZXNjcmlwdGlvbnMgTGlzdDxNZWRpY2F0aW9uUmVxdWVzdD4KCmNvbnRleHQgUGF0aWVudAoKZGVmaW5lICJPcGlvaWQgQW5hbGdlc2ljIHdpdGggQW1idWxhdG9yeSBNaXN1c2UgUG90ZW50aWFsIFByZXNjcmlwdGlvbnMiOgogIENvbW1vbi4iSXMgT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbD8iKCBDb250ZXh0UHJlc2NyaXB0aW9ucyApCgpkZWZpbmUgIkJlbnpvZGlhemVwaW5lIFByZXNjcmlwdGlvbnMiOgogIENvbW1vbi4iSXMgQmVuem9kaWF6ZXBpbmU/IiggQ29udGV4dFByZXNjcmlwdGlvbnMgKQoKZGVmaW5lICJQYXRpZW50IElzIEJlaW5nIFByZXNjcmliZWQgT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCI6CiAgZXhpc3RzKCAiT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCBQcmVzY3JpcHRpb25zIiApCgpkZWZpbmUgIlBhdGllbnQgSXMgQmVpbmcgUHJlc2NyaWJlZCBCZW56b2RpYXplcGluZSI6CiAgZXhpc3RzKCAiQmVuem9kaWF6ZXBpbmUgUHJlc2NyaXB0aW9ucyIgKQoKZGVmaW5lICJJcyBSZWNvbW1lbmRhdGlvbiBBcHBsaWNhYmxlPyI6CiAgIkluY2x1c2lvbiBDcml0ZXJpYSIKICAgIGFuZCBub3QgIkV4Y2x1c2lvbiBDcml0ZXJpYSIKCmRlZmluZSAiUGF0aWVudCBBZ2UgTGVzcyBUaGFuIDE4IjoKICBpZiAoQ29uZmlnLiJBZ2UgTGVzcyB0aGFuIDE4IFllYXJzIElzIEVuYWJsZWQiKSB0aGVuCiAgICBBZ2VJblllYXJzQXQoVG9kYXkoKSkgPCAxOAogIGVsc2UKICAgIGZhbHNlCgpkZWZpbmUgIkluY2x1c2lvbiBDcml0ZXJpYSI6CiAgKAogICAgKAogICAgICAiUGF0aWVudCBJcyBCZWluZyBQcmVzY3JpYmVkIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWwiCiAgICAgICAgYW5kIGV4aXN0cyBDb21tb24uIkFjdGl2ZSBBbWJ1bGF0b3J5IEJlbnpvZGlhemVwaW5lIFJ4IgogICAgKQogICAgICBvciAoCiAgICAgICAgIlBhdGllbnQgSXMgQmVpbmcgUHJlc2NyaWJlZCBCZW56b2RpYXplcGluZSIKICAgICAgICAgIGFuZCBleGlzdHMgQ29tbW9uLiJBY3RpdmUgQW1idWxhdG9yeSBPcGlvaWQgUngiCiAgICAgICkKICApCiAgICBhbmQgbm90ICJQYXRpZW50IEFnZSBMZXNzIFRoYW4gMTgiCiAgICBhbmQgUm91dGluZXMuIklzIE9waW9pZCBSZXZpZXcgVXNlZnVsPyIKCmRlZmluZSAiRXhjbHVzaW9uIENyaXRlcmlhIjoKICBDb21tb24uIkVuZCBvZiBMaWZlIEFzc2Vzc21lbnQiCgpkZWZpbmUgIkdldCBJbmRpY2F0b3IiOgogIGlmICJJcyBSZWNvbW1lbmRhdGlvbiBBcHBsaWNhYmxlPyIKICAgIHRoZW4gJ3dhcm5pbmcnCiAgZWxzZSBudWxsCgpkZWZpbmUgIkdldCBTdW1tYXJ5IjoKICBpZiAiSXMgUmVjb21tZW5kYXRpb24gQXBwbGljYWJsZT8iCiAgICB0aGVuICdBdm9pZCBwcmVzY3JpYmluZyBvcGlvaWQgcGFpbiBtZWRpY2F0aW9uIGFuZCBiZW56b2RpYXplcGluZSBjb25jdXJyZW50bHkgd2hlbmV2ZXIgcG9zc2libGUuJwogIGVsc2UgbnVsbAoKZGVmaW5lICJHZXQgRGV0YWlsIjoKICBpZiAiSXMgUmVjb21tZW5kYXRpb24gQXBwbGljYWJsZT8iCiAgICB0aGVuCiAgICAgIGlmICJQYXRpZW50IElzIEJlaW5nIFByZXNjcmliZWQgQmVuem9kaWF6ZXBpbmUiCiAgICAgICAgdGhlbiAnVGhlIGJlbnpvZGlhemVwaW5lIHByZXNjcmlwdGlvbiByZXF1ZXN0IGlzIGNvbmN1cnJlbnQgd2l0aCBhbiBhY3RpdmUgb3Bpb2lkIHByZXNjcmlwdGlvbicKICAgICAgZWxzZSAnVGhlIG9waW9pZCBwcmVzY3JpcHRpb24gcmVxdWVzdCBpcyBjb25jdXJyZW50IHdpdGggYW4gYWN0aXZlIGJlbnpvZGlhemVwaW5lIHByZXNjcmlwdGlvbicKICBlbHNlIG51bGwK"
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}
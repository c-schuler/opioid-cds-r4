{
  "resourceType": "Library",
  "id": "MMECalculator",
  "meta": {
    "profile": [ "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary" ]
  },
  "text": {
    "status": "extensions",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n    <table class=\"grid dict\">\n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">MMECalculator</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\">http://fhir.org/guides/cdc/opioid-cds/Library/MMECalculator</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">3.0.0</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Name: </b></th>\n            <td style=\"padding-left: 4px;\">MMECalculator</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">Morphine Milligram Equivalent (MME) Calculator for FHIR R4</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">active</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Experimental: </b></th>\n            <td style=\"padding-left: 4px;\">false</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span>http://terminology.hl7.org/CodeSystem/library-type</span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2021-11-25T15:15:41+11:00</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">Alphora</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\">This library contains logic to surface the MME calculation functionality provided by the OMTKLogic library by extracting appropriate information from FHIR R4 MedicationRequest resource.</td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Capability: </b></th>\n          <td style=\"padding-left: 4px;\">\n            shareable computable publishable executable \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Representation Level: </b></th>\n          <td style=\"padding-left: 4px;\">\n            structured\n          </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Use Context: </b></th>\n            <td style=\"padding-left: 4px;\">\n                <table class=\"grid-dict\">\n                    <tr><th><b>code</b></th><th><b>value</b></th><th><b>display</b></th></tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>182888003</td>\n                        <td>Medication requested (situation)</td>\n                      </tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>82423001</td>\n                        <td>Chronic pain (finding)</td>\n                      </tr>\n                    \n                </table>\n            </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Jurisdiction: </b></th>\n            <td style=\"padding-left: 4px;\">840</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Usage: </b></th>\n            <td style=\"padding-left: 4px;\">NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Copyright: </b></th>\n            <td style=\"padding-left: 4px;\">Copyright 2019+ Centers for Disease Control and Prevention (CDC)</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Last Review Date: </b></th>\n            <td style=\"padding-left: 4px;\">2020-09-26</td>\n        </tr>\n        \n        \n        \n        <tr>\n          <th scope=\"row\"><b>Related Artifacts: </b></th>\n          <td style=\"padding-left: 4px;\">\n            \n            <p><b>Documentation</b></p>\n            <ul>\n              \n                <li><a href=\"http://fhir.org/guides/cdc/opioid-cd/mme-calculator.html\">MME Calculator MME Calculator</a></li>\n              \n            </ul>\n            \n            \n            <p><b>References</b></p>\n            <ul>\n              \n                <li>Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)<br/><a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/\">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/</a></li>\n              \n                <li>Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org<br/><a href=\"http://unitsofmeasure.org\">http://unitsofmeasure.org</a></li>\n              \n                <li>Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1<br/><a href=\"http://dx.doi.org/10.15585/mmwr.rr6501e1\">http://dx.doi.org/10.15585/mmwr.rr6501e1</a></li>\n              \n                <li>National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020<br/><a href=\"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\">https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf</a></li>\n              \n            </ul>\n            \n            \n            <p><b>Dependencies</b></p>\n            <ul>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/Library/OMTKLogic|3.0.0</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/Library/OMTKData|3.0.0</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/Library/ConversionFactors|3.0.0</li>\n              \n                <li>http://terminology.hl7.org/CodeSystem/usage-context-type</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes</li>\n              \n            </ul>\n            \n            \n            \n            \n            \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>ErrorLevel</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>ConversionFactorSupplementName</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Data Requirements:</b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Type</b></th><th><b>Profile</b></th><th><b>MS</b></th><th><b>Code Filter</b></th></tr>\n              \n                <tr>\n                  <th>Patient</th>\n                  <th>http://hl7.org/fhir/StructureDefinition/Patient</th>\n                  <th/>\n                  <th>\n                    \n                  </th>\n                </tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">library MMECalculator version '3.0.0'\r\n\r\n/*\r\nThis library contains logic to surface the MME calculation functionality provided\r\nby the OMTKLogic library by extracting appropriate information from FHIR R4\r\nMedicationRequest resource.\r\n*/\r\n\r\nusing FHIR version '4.0.1'\r\n\r\ninclude FHIRHelpers version '4.0.1'\r\ninclude OMTKLogic version '3.0.0'\r\n\r\nparameter ErrorLevel String default 'Warning'\r\n\r\ncontext Patient\r\n\r\n/*\r\nHelper function to force the choice of the FHIR.Range value.\r\nThis avoids the need for the _is_ and _as_ operators on choices,\r\nwhich is not implemented in the JavaScript CQL engine.\r\n*/\r\ndefine function ToFHIRRange(range FHIR.Range):\r\n  range\r\n\r\n/*\r\nHelper function to force the choice of the FHIR.SimpleQuantity value.\r\nThis avoids the need for the _is_ and _as_ operators on choices,\r\nwhich is not implemented in the JavaScript CQL engine.\r\n*/\r\ndefine function ToFHIRQuantity(quantity FHIR.SimpleQuantity):\r\n  quantity\r\n\r\n/*\r\nHelper function to force the choice of the FHIR.CodeableConcept value.\r\nThis avoids the need for the _is_ and _as_ operators on choices,\r\nwhich is not implemented in the JavaScript CQL engine.\r\n*/\r\ndefine function ToFHIRCodeableConcept(codeableConcept FHIR.CodeableConcept):\r\n  codeableConcept\r\n\r\n/*\r\nFHIRHelpers ToQuantity logic incorrectly uses the unit element of the FHIR Quantity,\r\nwhen it should be using the code element as the actual coded unit.\r\nhttps://github.com/cqframework/clinical_quality_language/issues/557\r\n\r\nUntil the above issue is addressed, this function provides ToQuantity functionality for this library\r\n*/\r\ndefine function ToQuantity(quantity FHIR.SimpleQuantity):\r\n  case\r\n    when quantity is null then null\r\n    when quantity.value is null then null\r\n    when quantity.system is null or quantity.system = 'http://unitsofmeasure.org' then\r\n      System.Quantity {\r\n        value: quantity.value.value,\r\n        unit: quantity.code.value\r\n      }\r\n    else\r\n      Message(null, true, 'MMECalculator.ToQuantity.InvalidFHIRQuantity', ErrorLevel, 'Invalid FHIR Quantity code: ' &amp; quantity.code.value)\r\n  end\r\n\r\n/*\r\nExtracts the relevant information for prescription calculation from a list of\r\nFHIR MedicationRequest resources. This assumes a MedicationRequest that conforms\r\nto the MMEMedicationRequest profile, specifically:\r\n* 1 and only 1 dosageInstruction\r\n* 1 and only 1 doseAndRate\r\n* 1 timing with 1 repeat\r\n* frequency, frequencyMax, defaulting to 1\r\n* period, periodUnit, defaulting to 1 'd'\r\n* doseQuantity or doseRange\r\n* timeOfDay\r\n\r\nNote that if timeOfDay is specified in addition to frequency and period, it is ignored (i.e. assumed to be consistent with the specified frequency and period).\r\nTimeOfDay is only used to determine timesPerDay if frequency and period are not specified.\r\n*/\r\ndefine function Prescriptions(Orders List&lt;MedicationRequest&gt;):\r\n  Orders O\r\n    let\r\n      rxNormCode: OMTKLogic.GetMedicationCode(O.medication),\r\n      medicationName: OMTKLogic.GetMedicationName(rxNormCode),\r\n      // NOTE: Assuming a single dosage instruction element\r\n      dosageInstruction: singleton from O.dosageInstruction,\r\n      // NOTE: Assuming a single dose and rate element\r\n      doseAndRate: singleton from dosageInstruction.doseAndRate,\r\n      repeat: dosageInstruction.timing.repeat,\r\n      frequency: Coalesce(repeat.frequencyMax.value, repeat.frequency.value),\r\n      period: OMTKLogic.Quantity(repeat.period.value, repeat.periodUnit.value),\r\n      doseRange: ToFHIRRange(doseAndRate.dose),\r\n      doseQuantity: ToFHIRQuantity(doseAndRate.dose),\r\n      timesPerDay: Count(repeat.timeOfDay),\r\n      doseDescription:\r\n        Coalesce(\r\n          ToString(ToQuantity(doseQuantity)),\r\n          ToString(doseRange.low.value.value) + '-' + ToString(doseRange.high.value.value) + ' ' + doseRange.high.unit.value\r\n        ),\r\n      frequencyDescription:\r\n        ToString(dosageInstruction.timing.repeat.frequency.value) +\r\n          Coalesce(\r\n            '-' + ToString(dosageInstruction.timing.repeat.frequencyMax.value),\r\n            ''\r\n          )\r\n    return {\r\n      rxNormCode: rxNormCode,\r\n      isDraft: O.status.value = 'draft',\r\n      // NOTE: Assuming asNeeded is expressed as a boolean\r\n      isPRN: dosageInstruction.asNeeded,\r\n      prescription:\r\n        if dosageInstruction.text is not null then\r\n          medicationName + ' ' + dosageInstruction.text.value\r\n        else\r\n          // TODO: Shouldn't need the .value here on asNeededBoolean\r\n          medicationName + ' ' + doseDescription + ' q' + frequencyDescription + (if dosageInstruction.asNeeded then ' PRN' else ''),\r\n      dose: ToQuantity(Coalesce(doseQuantity, doseRange.high)),\r\n      dosesPerDay: Coalesce(OMTKLogic.ToDaily(frequency, period), timesPerDay, 1.0)\r\n    }\r\n\r\n/*\r\nCalculates Morphine Milligram Equivalent (MME) for each medication in the given\r\nlist. The calculation assumes the most aggresive dosing, and is performed for all\r\nmedications in the given list (i.e. no additional filtering for status is performed).\r\n*/\r\ndefine function MME(prescriptions List&lt;MedicationRequest&gt;):\r\n  (Prescriptions(prescriptions)) P\r\n    let mmePerIngredient: OMTKLogic.CalculateMMEs({ { rxNormCode: P.rxNormCode, doseQuantity: P.dose, dosesPerDay: P.dosesPerDay } })\r\n    return {\r\n      rxNormCode: P.rxNormCode,\r\n      isDraft: P.isDraft,\r\n      isPRN: P.isPRN,\r\n      prescription: P.prescription,\r\n      dailyDose: Combine(mmePerIngredient X return X.dailyDoseDescription, '\\r\\n'),\r\n      mme: Sum(mmePerIngredient X return X.mme)\r\n    }\r\n\r\n/*\r\nCalculates total Morphine Milligram Equivalent (MME) for the given list of medications.\r\nThe calculation assumes the most aggressive dosing, and is performed for all\r\nmedications in the given list (i.e. no additional filtering for status is performed).\r\n*/\r\ndefine function TotalMME(prescriptions List&lt;MedicationRequest&gt;):\r\n  OMTKLogic.Quantity(\r\n    Sum((MME(prescriptions)) M return M.mme.value),\r\n    '{MME}/d'\r\n  )\r\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (123452 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+json</th></tr>\n              <tr><td><pre><code>Encoded data (660424 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "shareable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "computable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "publishable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "executable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel",
    "valueCode": "structured"
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/MMECalculator",
  "version": "3.0.0",
  "name": "MMECalculator",
  "title": "Morphine Milligram Equivalent (MME) Calculator for FHIR R4",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2021-11-25T15:15:41+11:00",
  "publisher": "Alphora",
  "contact": [ {
    "telecom": [ {
      "system": "url",
      "value": "http://alphora.com"
    } ]
  } ],
  "description": "This library contains logic to surface the MME calculation functionality provided by the OMTKLogic library by extracting appropriate information from FHIR R4 MedicationRequest resource.",
  "useContext": [ {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "182888003",
        "display": "Medication requested (situation)"
      } ]
    }
  }, {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "82423001",
        "display": "Chronic pain (finding)"
      } ]
    }
  } ],
  "jurisdiction": [ {
    "coding": [ {
      "system": "http://unstats.un.org/unsd/methods/m49/m49.htm",
      "code": "840"
    } ]
  } ],
  "usage": "NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.",
  "copyright": "Copyright 2019+ Centers for Disease Control and Prevention (CDC)",
  "lastReviewDate": "2020-09-26",
  "topic": [ {
    "text": "Opioid Prescribing"
  }, {
    "text": "Morphine Milligram Equivalent (MME)"
  } ],
  "author": [ {
    "name": "Floyd Eisenberg, MD, MPH"
  }, {
    "name": "Kensaku Kawamoto, MD, PhD, MHS"
  }, {
    "name": "Robert McClure, MD"
  }, {
    "name": "Bryn Rhodes"
  } ],
  "relatedArtifact": [ {
    "type": "citation",
    "label": "RxNORM",
    "display": "This product uses publicly available data courtesy of the U.S. National Library of Medicine (NLM), National Institutes of Health, Department of Health and Human Services; NLM is not responsible for the product and does not endorse or recommend this or any other product.",
    "citation": "Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)",
    "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/",
    "document": {
      "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/"
    }
  }, {
    "type": "citation",
    "label": "UCUM",
    "display": "This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at http://unitsofmeasure.org<br/> The current complete UCUM table, UCUM Specification are available for download at http://unitsofmeasure.org<br/>The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.",
    "citation": "Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org",
    "url": "http://unitsofmeasure.org",
    "document": {
      "url": "http://unitsofmeasure.org"
    }
  }, {
    "type": "citation",
    "label": "CDC 2016 Opioid Prescribing Guideline",
    "display": "Centers For Disease Control and Prevention (CDC) Guideline for Prescribing Opioids for Chronic Pain — United States, 2016",
    "citation": "Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "document": {
      "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1"
    }
  }, {
    "type": "citation",
    "label": "Calculating total daily dose of opioids for safer dosage",
    "display": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.",
    "citation": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020",
    "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf",
    "document": {
      "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"
    }
  }, {
    "type": "documentation",
    "label": "MME Calculator",
    "display": "MME Calculator",
    "url": "http://fhir.org/guides/cdc/opioid-cds/mme-calculator.html",
    "document": {
      "url": "http://fhir.org/guides/cdc/opioid-cds/mme-calculator.html"
    }
  }, {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library OMTKLogic",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKLogic|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library OMTKData",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKData|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library ConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/ConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library CDCMMEClinicalConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/CDCMMEClinicalConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system Usage Context Type",
    "resource": "http://terminology.hl7.org/CodeSystem/usage-context-type"
  }, {
    "type": "depends-on",
    "display": "Code system CDC MME Usage Context Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes"
  } ],
  "parameter": [ {
    "name": "ErrorLevel",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "ConversionFactorSupplementName",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": "PD94bWwgdmVyc2lvbj0nMS4xJyBlbmNvZGluZz0nVVRGLTgnPz4KPExpYnJhcnkgdHlwZT0iTGlicmFyeSI+CiAgPHdzdHhuczE6aWRlbnRpZmllciB4bWxuczp3c3R4bnMxPSJ1cm46aGw3LW9yZzplbG06cjEiIHdzdHhuczE6dHlwZT0iVmVyc2lvbmVkSWRlbnRpZmllciIgaWQ9Ik1NRUNhbGN1bGF0b3IiIHN5c3RlbT0iaHR0cDovL2ZoaXIub3JnL2d1aWRlcy9jZGMvb3Bpb2lkLWNkcyIgdmVyc2lvbj0iMy4wLjAiLz4KICA8d3N0eG5zMjpzY2hlbWFJZGVudGlmaWVyIHhtbG5zOndzdHhuczI9InVybjpobDctb3JnOmVsbTpyMSIgd3N0eG5zMjp0eXBlPSJWZXJzaW9uZWRJZGVudGlmaWVyIiBpZD0idXJuOmhsNy1vcmc6ZWxtIiB2ZXJzaW9uPSJyMSIvPgogIDx3c3R4bnMzOnVzaW5ncyB4bWxuczp3c3R4bnMzPSJ1cm46aGw3LW9yZzplbG06cjEiIHdzdHhuczM6dHlwZT0iTGlicmFyeSRVc2luZ3MiPgogICAgPHdzdHhuczM6ZGVmPgogICAgICA8d3N0eG5zMzpkZWYgd3N0eG5zMzp0eXBlPSJVc2luZ0RlZiIgbG9jYWxJZGVudGlmaWVyPSJTeXN0ZW0iIHVyaT0idXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxIi8+CiAgICAgIDx3c3R4bnMzOmRlZiB3c3R4bnMzOnR5cGU9IlVzaW5nRGVmIiBsb2NhdG9yPSI5OjEtOToyNiIgbG9jYWxJZGVudGlmaWVyPSJGSElSIiB1cmk9Imh0dHA6Ly9obDcub3JnL2ZoaXIiIHZlcnNpb249IjQuMC4xIi8+CiAgICA8L3dzdHhuczM6ZGVmPgogIDwvd3N0eG5zMzp1c2luZ3M+CiAgPHdzdHhuczQ6aW5jbHVkZXMgeG1sbnM6d3N0eG5zND0idXJuOmhsNy1vcmc6ZWxtOnIxIiB3c3R4bnM0OnR5cGU9IkxpYnJhcnkkSW5jbHVkZXMiPgogICAgPHdzdHhuczQ6ZGVmPgogICAgICA8d3N0eG5zNDpkZWYgd3N0eG5zNDp0eXBlPSJJbmNsdWRlRGVmIiBsb2NhdG9yPSIxMToxLTExOjM1IiBsb2NhbElkZW50aWZpZXI9IkZISVJIZWxwZXJzIiBwYXRoPSJodHRwOi8vZmhpci5vcmcvZ3VpZGVzL2NkYy9vcGlvaWQtY2RzL0ZISVJIZWxwZXJzIiB2ZXJzaW9uPSI0LjAuMSIvPgogICAgICA8d3N0eG5zNDpkZWYgd3N0eG5zNDp0eXBlPSJJbmNsdWRlRGVmIiBsb2NhdG9yPSIxMjoxLTEyOjMzIiBsb2NhbElkZW50aWZpZXI9Ik9NVEtMb2dpYyIgcGF0aD0iaHR0cDovL2ZoaXIub3JnL2d1aWRlcy9jZGMvb3Bpb2lkLWNkcy9PTVRLTG9naWMiIHZlcnNpb249IjMuMC4wIi8+CiAgICA8L3dzdHhuczQ6ZGVmPgogIDwvd3N0eG5zNDppbmNsdWRlcz4KICA8d3N0eG5zNTpwYXJhbWV0ZXJzIHhtbG5zOndzdHhuczU9InVybjpobDctb3JnOmVsbTpyMSIgd3N0eG5zNTp0eXBlPSJMaWJyYXJ5JFBhcmFtZXRlcnMiPgogICAgPHdzdHhuczU6ZGVmPgogICAgICA8d3N0eG5zNTpkZWYgd3N0eG5zNTp0eXBlPSJQYXJhbWV0ZXJEZWYiIGxvY2F0b3I9IjE0OjEtMTQ6NDUiIG5hbWU9IkVycm9yTGV2ZWwiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgIDx3c3R4bnM1OmRlZmF1bHQgd3N0eG5zNTp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxNDozNy0xNDo0NSIgdmFsdWVUeXBlPSJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVN0cmluZyIgdmFsdWU9Ildhcm5pbmciLz4KICAgICAgICA8d3N0eG5zNTpwYXJhbWV0ZXJUeXBlU3BlY2lmaWVyIHdzdHhuczU6dHlwZT0iTmFtZWRUeXBlU3BlY2lmaWVyIiBsb2NhdG9yPSIxNDoyMi0xNDoyNyIgbmFtZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciLz4KICAgICAgPC93c3R4bnM1OmRlZj4KICAgIDwvd3N0eG5zNTpkZWY+CiAgPC93c3R4bnM1OnBhcmFtZXRlcnM+CiAgPHdzdHhuczY6Y29udGV4dHMgeG1sbnM6d3N0eG5zNj0idXJuOmhsNy1vcmc6ZWxtOnIxIiB3c3R4bnM2OnR5cGU9IkxpYnJhcnkkQ29udGV4dHMiPgogICAgPHdzdHhuczY6ZGVmPgogICAgICA8d3N0eG5zNjpkZWYgd3N0eG5zNjp0eXBlPSJDb250ZXh0RGVmIiBsb2NhdG9yPSIxNjoxLTE2OjE1IiBuYW1lPSJQYXRpZW50Ii8+CiAgICA8L3dzdHhuczY6ZGVmPgogIDwvd3N0eG5zNjpjb250ZXh0cz4KICA8d3N0eG5zNzpzdGF0ZW1lbnRzIHhtbG5zOndzdHhuczc9InVybjpobDctb3JnOmVsbTpyMSIgd3N0eG5zNzp0eXBlPSJMaWJyYXJ5JFN0YXRlbWVudHMiPgogICAgPHdzdHhuczc6ZGVmPgogICAgICA8d3N0eG5zNzpkZWYgd3N0eG5zNzp0eXBlPSJFeHByZXNzaW9uRGVmIiBsb2NhdG9yPSIxNjoxLTE2OjE1IiBuYW1lPSJQYXRpZW50IiBjb250ZXh0PSJQYXRpZW50Ij4KICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iU2luZ2xldG9uRnJvbSI+CiAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUmV0cmlldmUiIGxvY2F0b3I9IjE2OjEtMTY6MTUiIGRhdGFUeXBlPSJ7aHR0cDovL2hsNy5vcmcvZmhpcn1QYXRpZW50IiB0ZW1wbGF0ZUlkPSJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vUGF0aWVudCIvPgogICAgICAgIDwvd3N0eG5zNzpleHByZXNzaW9uPgogICAgICA8L3dzdHhuczc6ZGVmPgogICAgICA8d3N0eG5zNzpkZWYgd3N0eG5zNzp0eXBlPSJGdW5jdGlvbkRlZiIgbG9jYXRvcj0iMjM6MS0yNDo3IiBuYW1lPSJUb0ZISVJSYW5nZSIgY29udGV4dD0iUGF0aWVudCIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJPcGVyYW5kRGVmIiBuYW1lPSJyYW5nZSI+CiAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmRUeXBlU3BlY2lmaWVyIHdzdHhuczc6dHlwZT0iTmFtZWRUeXBlU3BlY2lmaWVyIiBsb2NhdG9yPSIyMzozNS0yMzo0NCIgbmFtZT0ie2h0dHA6Ly9obDcub3JnL2ZoaXJ9UmFuZ2UiLz4KICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgIDx3c3R4bnM3OmV4cHJlc3Npb24gd3N0eG5zNzp0eXBlPSJPcGVyYW5kUmVmIiBsb2NhdG9yPSIyNDozLTI0OjciIG5hbWU9InJhbmdlIi8+CiAgICAgIDwvd3N0eG5zNzpkZWY+CiAgICAgIDx3c3R4bnM3OmRlZiB3c3R4bnM3OnR5cGU9IkZ1bmN0aW9uRGVmIiBsb2NhdG9yPSIzMToxLTMyOjEwIiBuYW1lPSJUb0ZISVJRdWFudGl0eSIgY29udGV4dD0iUGF0aWVudCIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJPcGVyYW5kRGVmIiBuYW1lPSJxdWFudGl0eSI+CiAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmRUeXBlU3BlY2lmaWVyIHdzdHhuczc6dHlwZT0iTmFtZWRUeXBlU3BlY2lmaWVyIiBsb2NhdG9yPSIzMTo0MS0zMTo1OSIgbmFtZT0ie2h0dHA6Ly9obDcub3JnL2ZoaXJ9U2ltcGxlUXVhbnRpdHkiLz4KICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgIDx3c3R4bnM3OmV4cHJlc3Npb24gd3N0eG5zNzp0eXBlPSJPcGVyYW5kUmVmIiBsb2NhdG9yPSIzMjozLTMyOjEwIiBuYW1lPSJxdWFudGl0eSIvPgogICAgICA8L3dzdHhuczc6ZGVmPgogICAgICA8d3N0eG5zNzpkZWYgd3N0eG5zNzp0eXBlPSJGdW5jdGlvbkRlZiIgbG9jYXRvcj0iMzk6MS00MDoxNyIgbmFtZT0iVG9GSElSQ29kZWFibGVDb25jZXB0IiBjb250ZXh0PSJQYXRpZW50IiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9Ik9wZXJhbmREZWYiIG5hbWU9ImNvZGVhYmxlQ29uY2VwdCI+CiAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmRUeXBlU3BlY2lmaWVyIHdzdHhuczc6dHlwZT0iTmFtZWRUeXBlU3BlY2lmaWVyIiBsb2NhdG9yPSIzOTo1NS0zOTo3NCIgbmFtZT0ie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q29kZWFibGVDb25jZXB0Ii8+CiAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iT3BlcmFuZFJlZiIgbG9jYXRvcj0iNDA6My00MDoxNyIgbmFtZT0iY29kZWFibGVDb25jZXB0Ii8+CiAgICAgIDwvd3N0eG5zNzpkZWY+CiAgICAgIDx3c3R4bnM3OmRlZiB3c3R4bnM3OnR5cGU9IkZ1bmN0aW9uRGVmIiBsb2NhdG9yPSI0OToxLTYyOjMiIG5hbWU9IlRvUXVhbnRpdHkiIGNvbnRleHQ9IlBhdGllbnQiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iT3BlcmFuZERlZiIgbmFtZT0icXVhbnRpdHkiPgogICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kVHlwZVNwZWNpZmllciB3c3R4bnM3OnR5cGU9Ik5hbWVkVHlwZVNwZWNpZmllciIgbG9jYXRvcj0iNDk6MzctNDk6NTUiIG5hbWU9IntodHRwOi8vaGw3Lm9yZy9maGlyfVNpbXBsZVF1YW50aXR5Ii8+CiAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iQ2FzZSIgbG9jYXRvcj0iNTA6My02MjozIj4KICAgICAgICAgIDx3c3R4bnM3OmNhc2VJdGVtPgogICAgICAgICAgICA8d3N0eG5zNzpjYXNlSXRlbSB3c3R4bnM3OnR5cGU9IkNhc2VJdGVtIiBsb2NhdG9yPSI1MTo1LTUxOjM1Ij4KICAgICAgICAgICAgICA8d3N0eG5zNzp3aGVuIHdzdHhuczc6dHlwZT0iSXNOdWxsIiBsb2NhdG9yPSI1MToxMC01MToyNSI+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iT3BlcmFuZFJlZiIgbG9jYXRvcj0iNTE6MTAtNTE6MTciIG5hbWU9InF1YW50aXR5Ii8+CiAgICAgICAgICAgICAgPC93c3R4bnM3OndoZW4+CiAgICAgICAgICAgICAgPHdzdHhuczc6dGhlbiB3c3R4bnM3OnR5cGU9IkFzIiBhc1R5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9UXVhbnRpdHkiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9Ik51bGwiIGxvY2F0b3I9IjUxOjMyLTUxOjM1Ii8+CiAgICAgICAgICAgICAgPC93c3R4bnM3OnRoZW4+CiAgICAgICAgICAgIDwvd3N0eG5zNzpjYXNlSXRlbT4KICAgICAgICAgICAgPHdzdHhuczc6Y2FzZUl0ZW0gd3N0eG5zNzp0eXBlPSJDYXNlSXRlbSIgbG9jYXRvcj0iNTI6NS01Mjo0MSI+CiAgICAgICAgICAgICAgPHdzdHhuczc6d2hlbiB3c3R4bnM3OnR5cGU9IklzTnVsbCIgbG9jYXRvcj0iNTI6MTAtNTI6MzEiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI1MjoxMC01MjoyMyIgcGF0aD0idmFsdWUiPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJPcGVyYW5kUmVmIiBsb2NhdG9yPSI1MjoxMC01MjoxNyIgbmFtZT0icXVhbnRpdHkiLz4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgIDwvd3N0eG5zNzp3aGVuPgogICAgICAgICAgICAgIDx3c3R4bnM3OnRoZW4gd3N0eG5zNzp0eXBlPSJBcyIgYXNUeXBlPSJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVF1YW50aXR5Ij4KICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJOdWxsIiBsb2NhdG9yPSI1MjozOC01Mjo0MSIvPgogICAgICAgICAgICAgIDwvd3N0eG5zNzp0aGVuPgogICAgICAgICAgICA8L3dzdHhuczc6Y2FzZUl0ZW0+CiAgICAgICAgICAgIDx3c3R4bnM3OmNhc2VJdGVtIHdzdHhuczc6dHlwZT0iQ2FzZUl0ZW0iIGxvY2F0b3I9IjUzOjUtNTc6NyI+CiAgICAgICAgICAgICAgPHdzdHhuczc6d2hlbiB3c3R4bnM3OnR5cGU9Ik9yIiBsb2NhdG9yPSI1MzoxMC01Mzo4MSI+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iSXNOdWxsIiBsb2NhdG9yPSI1MzoxMC01MzozMiI+CiAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI1MzoxMC01MzoyNCIgcGF0aD0ic3lzdGVtIj4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9Ik9wZXJhbmRSZWYiIGxvY2F0b3I9IjUzOjEwLTUzOjE3IiBuYW1lPSJxdWFudGl0eSIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkVxdWFsIiBsb2NhdG9yPSI1MzozNy01Mzo4MSI+CiAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJGdW5jdGlvblJlZiIgbmFtZT0iVG9TdHJpbmciIGxpYnJhcnlOYW1lPSJGSElSSGVscGVycyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI1MzozNy01Mzo1MSIgcGF0aD0ic3lzdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9Ik9wZXJhbmRSZWYiIGxvY2F0b3I9IjUzOjM3LTUzOjQ0IiBuYW1lPSJxdWFudGl0eSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkxpdGVyYWwiIGxvY2F0b3I9IjUzOjU1LTUzOjgxIiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIiB2YWx1ZT0iaHR0cDovL3VuaXRzb2ZtZWFzdXJlLm9yZyIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgIDwvd3N0eG5zNzp3aGVuPgogICAgICAgICAgICAgIDx3c3R4bnM3OnRoZW4gd3N0eG5zNzp0eXBlPSJJbnN0YW5jZSIgbG9jYXRvcj0iNTQ6Ny01Nzo3IiBjbGFzc1R5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9UXVhbnRpdHkiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudCB3c3R4bnM3OnR5cGU9Ikluc3RhbmNlRWxlbWVudCIgbmFtZT0idmFsdWUiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjU1OjE2LTU1OjM1IiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iNTU6MTYtNTU6MjkiIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iT3BlcmFuZFJlZiIgbG9jYXRvcj0iNTU6MTYtNTU6MjMiIG5hbWU9InF1YW50aXR5Ii8+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzp2YWx1ZT4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsZW1lbnQgd3N0eG5zNzp0eXBlPSJJbnN0YW5jZUVsZW1lbnQiIG5hbWU9InVuaXQiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjU2OjE1LTU2OjMzIiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iNTY6MTUtNTY6MjciIHBhdGg9ImNvZGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJPcGVyYW5kUmVmIiBsb2NhdG9yPSI1NjoxNS01NjoyMiIgbmFtZT0icXVhbnRpdHkiLz4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnZhbHVlPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzplbGVtZW50PgogICAgICAgICAgICAgIDwvd3N0eG5zNzp0aGVuPgogICAgICAgICAgICA8L3dzdHhuczc6Y2FzZUl0ZW0+CiAgICAgICAgICAgIDx3c3R4bnM3OmNhc2VJdGVtIHdzdHhuczc6dHlwZT0iQ2FzZUl0ZW0iIGxvY2F0b3I9IjU4OjQtNTk6MTA4Ij4KICAgICAgICAgICAgICA8d3N0eG5zNzp3aGVuIHdzdHhuczc6dHlwZT0iRXF1YWwiIGxvY2F0b3I9IjU4OjktNTg6OTIiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI1ODo5LTU4OjI5IiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjU4OjktNTg6MjMiIHBhdGg9InN5c3RlbSI+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJPcGVyYW5kUmVmIiBsb2NhdG9yPSI1ODo5LTU4OjE2IiBuYW1lPSJxdWFudGl0eSIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iTGl0ZXJhbCIgbG9jYXRvcj0iNTg6MzMtNTg6OTIiIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLW9yZGVyYWJsZURydWdGb3JtIi8+CiAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICA8L3dzdHhuczc6d2hlbj4KICAgICAgICAgICAgICA8d3N0eG5zNzp0aGVuIHdzdHhuczc6dHlwZT0iSW5zdGFuY2UiIGxvY2F0b3I9IjU5OjUtNTk6MTA4IiBjbGFzc1R5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9UXVhbnRpdHkiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudCB3c3R4bnM3OnR5cGU9Ikluc3RhbmNlRWxlbWVudCIgbmFtZT0idmFsdWUiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjU5OjMwLTU5OjQ5IiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iNTk6MzAtNTk6NDMiIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iT3BlcmFuZFJlZiIgbG9jYXRvcj0iNTk6MzAtNTk6MzciIG5hbWU9InF1YW50aXR5Ii8+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzp2YWx1ZT4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsZW1lbnQgd3N0eG5zNzp0eXBlPSJJbnN0YW5jZUVsZW1lbnQiIG5hbWU9InVuaXQiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iQ29hbGVzY2UiIGxvY2F0b3I9IjU5OjU4LTU5OjEwNyI+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjU5OjY3LTU5Ojg1IiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjU5OjY3LTU5Ojc5IiBwYXRoPSJjb2RlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9Ik9wZXJhbmRSZWYiIGxvY2F0b3I9IjU5OjY3LTU5Ojc0IiBuYW1lPSJxdWFudGl0eSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjU5Ojg4LTU5OjEwNiIgcGF0aD0idmFsdWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI1OTo4OC01OToxMDAiIHBhdGg9InVuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iT3BlcmFuZFJlZiIgbG9jYXRvcj0iNTk6ODgtNTk6OTUiIG5hbWU9InF1YW50aXR5Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6dmFsdWU+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzplbGVtZW50PgogICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgPC93c3R4bnM3OnRoZW4+CiAgICAgICAgICAgIDwvd3N0eG5zNzpjYXNlSXRlbT4KICAgICAgICAgIDwvd3N0eG5zNzpjYXNlSXRlbT4KICAgICAgICAgIDx3c3R4bnM3OmVsc2Ugd3N0eG5zNzp0eXBlPSJBcyIgYXNUeXBlPSJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVF1YW50aXR5Ij4KICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9Ik1lc3NhZ2UiIGxvY2F0b3I9IjYxOjctNjE6MTM5Ij4KICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJOdWxsIiBsb2NhdG9yPSI2MToxNS02MToxOCIvPgogICAgICAgICAgICAgIDx3c3R4bnM3OmNvbmRpdGlvbiB3c3R4bnM3OnR5cGU9IkxpdGVyYWwiIGxvY2F0b3I9IjYxOjIxLTYxOjI0IiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9Qm9vbGVhbiIgdmFsdWU9InRydWUiLz4KICAgICAgICAgICAgICA8d3N0eG5zNzpjb2RlIHdzdHhuczc6dHlwZT0iTGl0ZXJhbCIgbG9jYXRvcj0iNjE6MjctNjE6NzIiIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSJNTUVDYWxjdWxhdG9yLlRvUXVhbnRpdHkuSW52YWxpZEZISVJRdWFudGl0eSIvPgogICAgICAgICAgICAgIDx3c3R4bnM3OnNldmVyaXR5IHdzdHhuczc6dHlwZT0iUGFyYW1ldGVyUmVmIiBsb2NhdG9yPSI2MTo3NS02MTo4NCIgbmFtZT0iRXJyb3JMZXZlbCIvPgogICAgICAgICAgICAgIDx3c3R4bnM3Om1lc3NhZ2Ugd3N0eG5zNzp0eXBlPSJDb25jYXRlbmF0ZSIgbG9jYXRvcj0iNjE6ODctNjE6MTM4Ij4KICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJDb2FsZXNjZSI+CiAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSI2MTo4Ny02MToxMTYiIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSJJbnZhbGlkIEZISVIgUXVhbnRpdHkgY29kZTogIi8+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iTGl0ZXJhbCIgdmFsdWVUeXBlPSJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVN0cmluZyIgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkNvYWxlc2NlIj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI2MToxMjAtNjE6MTM4IiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI2MToxMjAtNjE6MTMyIiBwYXRoPSJjb2RlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJPcGVyYW5kUmVmIiBsb2NhdG9yPSI2MToxMjAtNjE6MTI3IiBuYW1lPSJxdWFudGl0eSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iTGl0ZXJhbCIgdmFsdWVUeXBlPSJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVN0cmluZyIgdmFsdWU9IiIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgIDwvd3N0eG5zNzptZXNzYWdlPgogICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgIDwvd3N0eG5zNzplbHNlPgogICAgICAgIDwvd3N0eG5zNzpleHByZXNzaW9uPgogICAgICA8L3dzdHhuczc6ZGVmPgogICAgICA8d3N0eG5zNzpkZWYgd3N0eG5zNzp0eXBlPSJGdW5jdGlvbkRlZiIgbG9jYXRvcj0iNzk6MS0xMjU6NSIgbmFtZT0iUHJlc2NyaXB0aW9ucyIgY29udGV4dD0iUGF0aWVudCIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJPcGVyYW5kRGVmIiBuYW1lPSJPcmRlcnMiPgogICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kVHlwZVNwZWNpZmllciB3c3R4bnM3OnR5cGU9Ikxpc3RUeXBlU3BlY2lmaWVyIiBsb2NhdG9yPSI3OTozOC03OTo2MCI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudFR5cGUgd3N0eG5zNzp0eXBlPSJOYW1lZFR5cGVTcGVjaWZpZXIiIGxvY2F0b3I9Ijc5OjQzLTc5OjU5IiBuYW1lPSJ7aHR0cDovL2hsNy5vcmcvZmhpcn1NZWRpY2F0aW9uUmVxdWVzdCIvPgogICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZFR5cGVTcGVjaWZpZXI+CiAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iUXVlcnkiIGxvY2F0b3I9IjgwOjMtMTI1OjUiPgogICAgICAgICAgPHdzdHhuczc6c291cmNlPgogICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJBbGlhc2VkUXVlcnlTb3VyY2UiIGxvY2F0b3I9IjgwOjMtODA6MTAiIGFsaWFzPSJPIj4KICAgICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iT3BlcmFuZFJlZiIgbG9jYXRvcj0iODA6My04MDo4IiBuYW1lPSJPcmRlcnMiLz4KICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICA8d3N0eG5zNzpsZXQ+CiAgICAgICAgICAgIDx3c3R4bnM3OmxldCB3c3R4bnM3OnR5cGU9IkxldENsYXVzZSIgbG9jYXRvcj0iODI6Ny04Mjo1OSIgaWRlbnRpZmllcj0icnhOb3JtQ29kZSI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IkZ1bmN0aW9uUmVmIiBsb2NhdG9yPSI4MjoxOS04Mjo1OSIgbmFtZT0iR2V0TWVkaWNhdGlvbkNvZGUiIGxpYnJhcnlOYW1lPSJPTVRLTG9naWMiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkZ1bmN0aW9uUmVmIiBuYW1lPSJUb0NvbmNlcHQiIGxpYnJhcnlOYW1lPSJGSElSSGVscGVycyI+CiAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJBcyIgYXNUeXBlPSJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db2RlYWJsZUNvbmNlcHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjgyOjQ3LTgyOjU4IiBwYXRoPSJtZWRpY2F0aW9uIiBzY29wZT0iTyIvPgogICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICAgIDwvd3N0eG5zNzpsZXQ+CiAgICAgICAgICAgIDx3c3R4bnM3OmxldCB3c3R4bnM3OnR5cGU9IkxldENsYXVzZSIgbG9jYXRvcj0iODM6Ny04Mzo2MSIgaWRlbnRpZmllcj0ibWVkaWNhdGlvbk5hbWUiPgogICAgICAgICAgICAgIDx3c3R4bnM3OmV4cHJlc3Npb24gd3N0eG5zNzp0eXBlPSJGdW5jdGlvblJlZiIgbG9jYXRvcj0iODM6MjMtODM6NjEiIG5hbWU9IkdldE1lZGljYXRpb25OYW1lIiBsaWJyYXJ5TmFtZT0iT01US0xvZ2ljIj4KICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iODM6NTEtODM6NjAiIG5hbWU9InJ4Tm9ybUNvZGUiLz4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgIDwvd3N0eG5zNzpleHByZXNzaW9uPgogICAgICAgICAgICA8L3dzdHhuczc6bGV0PgogICAgICAgICAgICA8d3N0eG5zNzpsZXQgd3N0eG5zNzp0eXBlPSJMZXRDbGF1c2UiIGxvY2F0b3I9Ijg1OjctODU6NTkiIGlkZW50aWZpZXI9ImRvc2FnZUluc3RydWN0aW9uIj4KICAgICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iU2luZ2xldG9uRnJvbSIgbG9jYXRvcj0iODU6MjYtODU6NTkiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI4NTo0MS04NTo1OSIgcGF0aD0iZG9zYWdlSW5zdHJ1Y3Rpb24iIHNjb3BlPSJPIi8+CiAgICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICAgIDwvd3N0eG5zNzpsZXQ+CiAgICAgICAgICAgIDx3c3R4bnM3OmxldCB3c3R4bnM3OnR5cGU9IkxldENsYXVzZSIgbG9jYXRvcj0iODk6Ny04OToxMTgiIGlkZW50aWZpZXI9ImRvc2VBbmRSYXRlIj4KICAgICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iU2luZ2xldG9uRnJvbSIgbG9jYXRvcj0iODk6MjAtODk6MTE4Ij4KICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJRdWVyeSIgbG9jYXRvcj0iODk6MzUtODk6MTE4Ij4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IkFsaWFzZWRRdWVyeVNvdXJjZSIgbG9jYXRvcj0iODk6MzYtODk6NjciIGFsaWFzPSJEUiI+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9Ijg5OjM2LTg5OjY0IiBwYXRoPSJkb3NlQW5kUmF0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBuYW1lPSJkb3NhZ2VJbnN0cnVjdGlvbiIvPgogICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6cmVsYXRpb25zaGlwLz4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6d2hlcmUgd3N0eG5zNzp0eXBlPSJPciIgbG9jYXRvcj0iODk6NjktODk6MTE3Ij4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IklzTnVsbCIgbG9jYXRvcj0iODk6NzUtODk6ODkiPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9Ijg5Ojc1LTg5OjgxIiBwYXRoPSJ0eXBlIiBzY29wZT0iRFIiLz4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkVxdWFsIiBsb2NhdG9yPSI4OTo5NC04OToxMTciPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJGdW5jdGlvblJlZiIgbmFtZT0iVG9TdHJpbmciIGxpYnJhcnlOYW1lPSJGSElSSGVscGVycyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9Ijg5Ojk0LTg5OjEwNSIgcGF0aD0idGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9Ijg5Ojk0LTg5OjEwMCIgcGF0aD0idHlwZSIgc2NvcGU9IkRSIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkxpdGVyYWwiIGxvY2F0b3I9Ijg5OjEwOS04OToxMTciIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSJvcmRlcmVkIi8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzp3aGVyZT4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgIDwvd3N0eG5zNzpleHByZXNzaW9uPgogICAgICAgICAgICA8L3dzdHhuczc6bGV0PgogICAgICAgICAgICA8d3N0eG5zNzpsZXQgd3N0eG5zNzp0eXBlPSJMZXRDbGF1c2UiIGxvY2F0b3I9IjkwOjctOTA6NDUiIGlkZW50aWZpZXI9InJlcGVhdCI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI5MDoxNS05MDo0NSIgcGF0aD0icmVwZWF0Ij4KICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI5MDoxNS05MDozOCIgcGF0aD0idGltaW5nIj4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjkwOjE1LTkwOjMxIiBuYW1lPSJkb3NhZ2VJbnN0cnVjdGlvbiIvPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICA8L3dzdHhuczc6ZXhwcmVzc2lvbj4KICAgICAgICAgICAgPC93c3R4bnM3OmxldD4KICAgICAgICAgICAgPHdzdHhuczc6bGV0IHdzdHhuczc6dHlwZT0iTGV0Q2xhdXNlIiBsb2NhdG9yPSI5MTo3LTkxOjc2IiBpZGVudGlmaWVyPSJmcmVxdWVuY3kiPgogICAgICAgICAgICAgIDx3c3R4bnM3OmV4cHJlc3Npb24gd3N0eG5zNzp0eXBlPSJDb2FsZXNjZSIgbG9jYXRvcj0iOTE6MTgtOTE6NzYiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI5MToyNy05MTo1MSIgcGF0aD0idmFsdWUiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI5MToyNy05MTo0NSIgcGF0aD0iZnJlcXVlbmN5TWF4Ij4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSI5MToyNy05MTozMiIgbmFtZT0icmVwZWF0Ii8+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iOTE6NTQtOTE6NzUiIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iOTE6NTQtOTE6NjkiIHBhdGg9ImZyZXF1ZW5jeSI+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iOTE6NTQtOTE6NTkiIG5hbWU9InJlcGVhdCIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICAgIDwvd3N0eG5zNzpsZXQ+CiAgICAgICAgICAgIDx3c3R4bnM3OmxldCB3c3R4bnM3OnR5cGU9IkxldENsYXVzZSIgbG9jYXRvcj0iOTI6Ny05Mjo3OCIgaWRlbnRpZmllcj0icGVyaW9kIj4KICAgICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iRnVuY3Rpb25SZWYiIGxvY2F0b3I9IjkyOjE1LTkyOjc4IiBuYW1lPSJRdWFudGl0eSIgbGlicmFyeU5hbWU9Ik9NVEtMb2dpYyI+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjkyOjM0LTkyOjUyIiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjkyOjM0LTkyOjQ2IiBwYXRoPSJwZXJpb2QiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjkyOjM0LTkyOjM5IiBuYW1lPSJyZXBlYXQiLz4KICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI5Mjo1NS05Mjo3NyIgcGF0aD0idmFsdWUiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSI5Mjo1NS05Mjo3MSIgcGF0aD0icGVyaW9kVW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iOTI6NTUtOTI6NjAiIG5hbWU9InJlcGVhdCIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICAgIDwvd3N0eG5zNzpsZXQ+CiAgICAgICAgICAgIDx3c3R4bnM3OmxldCB3c3R4bnM3OnR5cGU9IkxldENsYXVzZSIgbG9jYXRvcj0iOTM6Ny05Mzo0NiIgaWRlbnRpZmllcj0iZG9zZVJhbmdlIj4KICAgICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iRnVuY3Rpb25SZWYiIGxvY2F0b3I9IjkzOjE4LTkzOjQ2IiBuYW1lPSJUb0ZISVJSYW5nZSI+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iQXMiIGFzVHlwZT0ie2h0dHA6Ly9obDcub3JnL2ZoaXJ9UmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iOTM6MzAtOTM6NDUiIHBhdGg9ImRvc2UiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjkzOjMwLTkzOjQwIiBuYW1lPSJkb3NlQW5kUmF0ZSIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgIDwvd3N0eG5zNzpleHByZXNzaW9uPgogICAgICAgICAgICA8L3dzdHhuczc6bGV0PgogICAgICAgICAgICA8d3N0eG5zNzpsZXQgd3N0eG5zNzp0eXBlPSJMZXRDbGF1c2UiIGxvY2F0b3I9Ijk0OjctOTQ6NTIiIGlkZW50aWZpZXI9ImRvc2VRdWFudGl0eSI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IkZ1bmN0aW9uUmVmIiBsb2NhdG9yPSI5NDoyMS05NDo1MiIgbmFtZT0iVG9GSElSUXVhbnRpdHkiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkFzIiBhc1R5cGU9IntodHRwOi8vaGw3Lm9yZy9maGlyfVNpbXBsZVF1YW50aXR5Ij4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9Ijk0OjM2LTk0OjUxIiBwYXRoPSJkb3NlIj4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSI5NDozNi05NDo0NiIgbmFtZT0iZG9zZUFuZFJhdGUiLz4KICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICA8L3dzdHhuczc6ZXhwcmVzc2lvbj4KICAgICAgICAgICAgPC93c3R4bnM3OmxldD4KICAgICAgICAgICAgPHdzdHhuczc6bGV0IHdzdHhuczc6dHlwZT0iTGV0Q2xhdXNlIiBsb2NhdG9yPSI5NTo3LTk1OjY1IiBpZGVudGlmaWVyPSJkb3NlSGlnaCI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IkZ1bmN0aW9uUmVmIiBsb2NhdG9yPSI5NToxNy05NTo2NSIgbmFtZT0iVG9RdWFudGl0eSI+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iQXMiIGxvY2F0b3I9Ijk1OjI4LTk1OjY0IiBzdHJpY3Q9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzphc1R5cGVTcGVjaWZpZXIgd3N0eG5zNzp0eXBlPSJOYW1lZFR5cGVTcGVjaWZpZXIiIGxvY2F0b3I9Ijk1OjQ2LTk1OjY0IiBuYW1lPSJ7aHR0cDovL2hsNy5vcmcvZmhpcn1TaW1wbGVRdWFudGl0eSIvPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iOTU6MjgtOTU6NDEiIHBhdGg9ImhpZ2giPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9Ijk1OjI4LTk1OjM2IiBuYW1lPSJkb3NlUmFuZ2UiLz4KICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICA8L3dzdHhuczc6ZXhwcmVzc2lvbj4KICAgICAgICAgICAgPC93c3R4bnM3OmxldD4KICAgICAgICAgICAgPHdzdHhuczc6bGV0IHdzdHhuczc6dHlwZT0iTGV0Q2xhdXNlIiBsb2NhdG9yPSI5Njo3LTk2OjQyIiBpZGVudGlmaWVyPSJ0aW1lc1BlckRheSI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IkNvdW50IiBsb2NhdG9yPSI5NjoyMC05Njo0MiI+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iOTY6MjYtOTY6NDEiIHBhdGg9InRpbWVPZkRheSI+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSI5NjoyNi05NjozMSIgbmFtZT0icmVwZWF0Ii8+CiAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgIDwvd3N0eG5zNzpleHByZXNzaW9uPgogICAgICAgICAgICA8L3dzdHhuczc6bGV0PgogICAgICAgICAgICA8d3N0eG5zNzpsZXQgd3N0eG5zNzp0eXBlPSJMZXRDbGF1c2UiIGxvY2F0b3I9Ijk3OjctMTAxOjkiIGlkZW50aWZpZXI9ImRvc2VEZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IkNvYWxlc2NlIiBsb2NhdG9yPSI5ODo5LTEwMTo5Ij4KICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJUb1N0cmluZyIgbG9jYXRvcj0iOTk6MTEtOTk6NDQiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJGdW5jdGlvblJlZiIgbG9jYXRvcj0iOTk6MjAtOTk6NDMiIG5hbWU9IlRvUXVhbnRpdHkiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSI5OTozMS05OTo0MiIgbmFtZT0iZG9zZVF1YW50aXR5Ii8+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJDb25jYXRlbmF0ZSIgbG9jYXRvcj0iMTAwOjExLTEwMDoxMjQiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iQ29uY2F0ZW5hdGUiIGxvY2F0b3I9IjEwMDoxMS0xMDA6OTYiPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJDb25jYXRlbmF0ZSIgbG9jYXRvcj0iMTAwOjExLTEwMDo5MCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iQ29uY2F0ZW5hdGUiIGxvY2F0b3I9IjEwMDoxMS0xMDA6NTEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iVG9TdHJpbmciIGxvY2F0b3I9IjEwMDoxMS0xMDA6NDUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwMDoyMC0xMDA6NDQiIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTAwOjIwLTEwMDozOCIgcGF0aD0idmFsdWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwMDoyMC0xMDA6MzIiIHBhdGg9ImxvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSIxMDA6MjAtMTAwOjI4IiBuYW1lPSJkb3NlUmFuZ2UiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxMDA6NDktMTAwOjUxIiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIiB2YWx1ZT0iLSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlRvU3RyaW5nIiBsb2NhdG9yPSIxMDA6NTUtMTAwOjkwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwMDo2NC0xMDA6ODkiIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMDA6NjQtMTAwOjgzIiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMDA6NjQtMTAwOjc3IiBwYXRoPSJoaWdoIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iMTAwOjY0LTEwMDo3MiIgbmFtZT0iZG9zZVJhbmdlIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxMDA6OTQtMTAwOjk2IiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIiB2YWx1ZT0iICIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMDA6MTAwLTEwMDoxMjQiIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwMDoxMDAtMTAwOjExOCIgcGF0aD0idW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwMDoxMDAtMTAwOjExMyIgcGF0aD0iaGlnaCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iMTAwOjEwMC0xMDA6MTA4IiBuYW1lPSJkb3NlUmFuZ2UiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICAgIDwvd3N0eG5zNzpsZXQ+CiAgICAgICAgICAgIDx3c3R4bnM3OmxldCB3c3R4bnM3OnR5cGU9IkxldENsYXVzZSIgbG9jYXRvcj0iMTAyOjctMTA3OjExIiBpZGVudGlmaWVyPSJmcmVxdWVuY3lEZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IkNvbmNhdGVuYXRlIiBsb2NhdG9yPSIxMDM6OS0xMDc6MTEiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlRvU3RyaW5nIiBsb2NhdG9yPSIxMDM6OS0xMDM6NjUiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTAzOjE4LTEwMzo2NCIgcGF0aD0idmFsdWUiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwMzoxOC0xMDM6NTgiIHBhdGg9ImZyZXF1ZW5jeSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMDM6MTgtMTAzOjQ4IiBwYXRoPSJyZXBlYXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMDM6MTgtMTAzOjQxIiBwYXRoPSJ0aW1pbmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjEwMzoxOC0xMDM6MzQiIG5hbWU9ImRvc2FnZUluc3RydWN0aW9uIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iQ29hbGVzY2UiIGxvY2F0b3I9IjEwNDoxMS0xMDc6MTEiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iQ29uY2F0ZW5hdGUiIGxvY2F0b3I9IjEwNToxMy0xMDU6NzgiPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxMDU6MTMtMTA1OjE1IiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIiB2YWx1ZT0iLSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJUb1N0cmluZyIgbG9jYXRvcj0iMTA1OjE5LTEwNTo3OCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwNToyOC0xMDU6NzciIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwNToyOC0xMDU6NzEiIHBhdGg9ImZyZXF1ZW5jeU1heCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEwNToyOC0xMDU6NTgiIHBhdGg9InJlcGVhdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTA1OjI4LTEwNTo1MSIgcGF0aD0idGltaW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjEwNToyOC0xMDU6NDQiIG5hbWU9ImRvc2FnZUluc3RydWN0aW9uIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxMDY6MTMtMTA2OjE0IiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIiB2YWx1ZT0iIi8+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICAgIDwvd3N0eG5zNzpsZXQ+CiAgICAgICAgICA8L3dzdHhuczc6bGV0PgogICAgICAgICAgPHdzdHhuczc6cmVsYXRpb25zaGlwLz4KICAgICAgICAgIDx3c3R4bnM3OnJldHVybiB3c3R4bnM3OnR5cGU9IlJldHVybkNsYXVzZSIgbG9jYXRvcj0iMTA4OjUtMTI1OjUiPgogICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iVHVwbGUiIGxvY2F0b3I9IjEwODoxMi0xMjU6NSI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsZW1lbnQgd3N0eG5zNzp0eXBlPSJUdXBsZUVsZW1lbnQiIG5hbWU9InJ4Tm9ybUNvZGUiPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzp2YWx1ZSB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSIxMDk6MTktMTA5OjI4IiBuYW1lPSJyeE5vcm1Db2RlIi8+CiAgICAgICAgICAgICAgICA8L3dzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsZW1lbnQgd3N0eG5zNzp0eXBlPSJUdXBsZUVsZW1lbnQiIG5hbWU9ImlzRHJhZnQiPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzp2YWx1ZSB3c3R4bnM3OnR5cGU9IkVxdWFsIiBsb2NhdG9yPSIxMTA6MTYtMTEwOjM5Ij4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMTA6MTYtMTEwOjI5IiBwYXRoPSJ2YWx1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMTA6MTYtMTEwOjIzIiBwYXRoPSJzdGF0dXMiIHNjb3BlPSJPIi8+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxMTA6MzMtMTEwOjM5IiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIiB2YWx1ZT0iZHJhZnQiLz4KICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnZhbHVlPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGVFbGVtZW50IiBuYW1lPSJpc1BSTiI+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjExMjoxNC0xMTI6MzkiIHBhdGg9ImFzTmVlZGVkIj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iMTEyOjE0LTExMjozMCIgbmFtZT0iZG9zYWdlSW5zdHJ1Y3Rpb24iLz4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnZhbHVlPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGVFbGVtZW50IiBuYW1lPSJwcmVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzp2YWx1ZSB3c3R4bnM3OnR5cGU9IklmIiBsb2NhdG9yPSIxMTQ6OS0xMTg6MTMyIj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpjb25kaXRpb24gd3N0eG5zNzp0eXBlPSJOb3QiIGxvY2F0b3I9IjExNDoxMi0xMTQ6NDUiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IklzTnVsbCIgbG9jYXRvcj0iMTE0OjEyLTExNDo0NSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTE0OjEyLTExNDozMyIgcGF0aD0idGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjExNDoxMi0xMTQ6MjgiIG5hbWU9ImRvc2FnZUluc3RydWN0aW9uIi8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmNvbmRpdGlvbj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzp0aGVuIHdzdHhuczc6dHlwZT0iQ29uY2F0ZW5hdGUiIGxvY2F0b3I9IjExNToxMS0xMTU6NjEiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkNvbmNhdGVuYXRlIiBsb2NhdG9yPSIxMTU6MTEtMTE1OjMwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSIxMTU6MTEtMTE1OjI0IiBuYW1lPSJtZWRpY2F0aW9uTmFtZSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkxpdGVyYWwiIGxvY2F0b3I9IjExNToyOC0xMTU6MzAiIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSIgIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjExNTozNC0xMTU6NjEiIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTE1OjM0LTExNTo1NSIgcGF0aD0idGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iMTE1OjM0LTExNTo1MCIgbmFtZT0iZG9zYWdlSW5zdHJ1Y3Rpb24iLz4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzp0aGVuPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsc2Ugd3N0eG5zNzp0eXBlPSJDb25jYXRlbmF0ZSIgbG9jYXRvcj0iMTE4OjExLTExODoxMzIiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkNvbmNhdGVuYXRlIiBsb2NhdG9yPSIxMTg6MTEtMTE4Ojc4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkNvbmNhdGVuYXRlIiBsb2NhdG9yPSIxMTg6MTEtMTE4OjU1Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iQ29uY2F0ZW5hdGUiIGxvY2F0b3I9IjExODoxMS0xMTg6NDgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkNvbmNhdGVuYXRlIiBsb2NhdG9yPSIxMTg6MTEtMTE4OjMwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSIxMTg6MTEtMTE4OjI0IiBuYW1lPSJtZWRpY2F0aW9uTmFtZSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkxpdGVyYWwiIGxvY2F0b3I9IjExODoyOC0xMTg6MzAiIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSIgIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjExODozNC0xMTg6NDgiIG5hbWU9ImRvc2VEZXNjcmlwdGlvbiIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IkxpdGVyYWwiIGxvY2F0b3I9IjExODo1Mi0xMTg6NTUiIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSIgcSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSIxMTg6NTktMTE4Ojc4IiBuYW1lPSJmcmVxdWVuY3lEZXNjcmlwdGlvbiIvPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IklmIiBsb2NhdG9yPSIxMTg6ODItMTE4OjEzMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6Y29uZGl0aW9uIHdzdHhuczc6dHlwZT0iRnVuY3Rpb25SZWYiIG5hbWU9IlRvQm9vbGVhbiIgbGlicmFyeU5hbWU9IkZISVJIZWxwZXJzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJBcyIgYXNUeXBlPSJ7aHR0cDovL2hsNy5vcmcvZmhpcn1ib29sZWFuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjExODo4Ni0xMTg6MTExIiBwYXRoPSJhc05lZWRlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iMTE4Ojg2LTExODoxMDIiIG5hbWU9ImRvc2FnZUluc3RydWN0aW9uIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmNvbmRpdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzp0aGVuIHdzdHhuczc6dHlwZT0iTGl0ZXJhbCIgbG9jYXRvcj0iMTE4OjExOC0xMTg6MTIzIiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIiB2YWx1ZT0iIFBSTiIvPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsc2Ugd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxMTg6MTMwLTExODoxMzEiIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSIiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6ZWxzZT4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnZhbHVlPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGVFbGVtZW50IiBuYW1lPSJkb3NlIj4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6dmFsdWUgd3N0eG5zNzp0eXBlPSJJZiIgbG9jYXRvcj0iMTIwOjktMTIzOjIwIj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpjb25kaXRpb24gd3N0eG5zNzp0eXBlPSJOb3QiIGxvY2F0b3I9IjEyMDoxMi0xMjA6MzkiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IklzTnVsbCIgbG9jYXRvcj0iMTIwOjEyLTEyMDozOSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTIwOjEyLTEyMDoyNyIgcGF0aD0iZG9zZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjEyMDoxMi0xMjA6MjIiIG5hbWU9ImRvc2VBbmRSYXRlIi8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmNvbmRpdGlvbj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzp0aGVuIHdzdHhuczc6dHlwZT0iRnVuY3Rpb25SZWYiIGxvY2F0b3I9IjEyMToxMy0xMjE6MzYiIG5hbWU9IlRvUXVhbnRpdHkiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSIxMjE6MjQtMTIxOjM1IiBuYW1lPSJkb3NlUXVhbnRpdHkiLz4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzp0aGVuPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsc2Ugd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iMTIzOjEzLTEyMzoyMCIgbmFtZT0iZG9zZUhpZ2giLz4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnZhbHVlPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGVFbGVtZW50IiBuYW1lPSJkb3Nlc1BlckRheSI+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iQ29hbGVzY2UiIGxvY2F0b3I9IjEyNDoyMC0xMjQ6ODMiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iRnVuY3Rpb25SZWYiIGxvY2F0b3I9IjEyNDoyOS0xMjQ6NjQiIG5hbWU9IlRvRGFpbHkiIGxpYnJhcnlOYW1lPSJPTVRLTG9naWMiPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJRdWVyeUxldFJlZiIgbG9jYXRvcj0iMTI0OjQ3LTEyNDo1NSIgbmFtZT0iZnJlcXVlbmN5Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSIxMjQ6NTgtMTI0OjYzIiBuYW1lPSJwZXJpb2QiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJUb0RlY2ltYWwiPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjEyNDo2Ny0xMjQ6NzciIG5hbWU9InRpbWVzUGVyRGF5Ii8+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxMjQ6ODAtMTI0OjgyIiB2YWx1ZVR5cGU9Int1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9RGVjaW1hbCIgdmFsdWU9IjEuMCIvPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6dmFsdWU+CiAgICAgICAgICAgICAgICA8L3dzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgICA8L3dzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICA8L3dzdHhuczc6cmV0dXJuPgogICAgICAgIDwvd3N0eG5zNzpleHByZXNzaW9uPgogICAgICA8L3dzdHhuczc6ZGVmPgogICAgICA8d3N0eG5zNzpkZWYgd3N0eG5zNzp0eXBlPSJGdW5jdGlvbkRlZiIgbG9jYXRvcj0iMTMyOjEtMTQyOjUiIG5hbWU9Ik1NRSIgY29udGV4dD0iUGF0aWVudCIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJPcGVyYW5kRGVmIiBuYW1lPSJwcmVzY3JpcHRpb25zIj4KICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZFR5cGVTcGVjaWZpZXIgd3N0eG5zNzp0eXBlPSJMaXN0VHlwZVNwZWNpZmllciIgbG9jYXRvcj0iMTMyOjM1LTEzMjo1NyI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudFR5cGUgd3N0eG5zNzp0eXBlPSJOYW1lZFR5cGVTcGVjaWZpZXIiIGxvY2F0b3I9IjEzMjo0MC0xMzI6NTYiIG5hbWU9IntodHRwOi8vaGw3Lm9yZy9maGlyfU1lZGljYXRpb25SZXF1ZXN0Ii8+CiAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kVHlwZVNwZWNpZmllcj4KICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgIDx3c3R4bnM3OmV4cHJlc3Npb24gd3N0eG5zNzp0eXBlPSJRdWVyeSIgbG9jYXRvcj0iMTMzOjMtMTQyOjUiPgogICAgICAgICAgPHdzdHhuczc6c291cmNlPgogICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJBbGlhc2VkUXVlcnlTb3VyY2UiIGxvY2F0b3I9IjEzMzozLTEzMzozNCIgYWxpYXM9IlAiPgogICAgICAgICAgICAgIDx3c3R4bnM3OmV4cHJlc3Npb24gd3N0eG5zNzp0eXBlPSJGdW5jdGlvblJlZiIgbG9jYXRvcj0iMTMzOjMtMTMzOjMyIiBuYW1lPSJQcmVzY3JpcHRpb25zIj4KICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJPcGVyYW5kUmVmIiBsb2NhdG9yPSIxMzM6MTgtMTMzOjMwIiBuYW1lPSJwcmVzY3JpcHRpb25zIi8+CiAgICAgICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICA8L3dzdHhuczc6ZXhwcmVzc2lvbj4KICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICA8d3N0eG5zNzpsZXQ+CiAgICAgICAgICAgIDx3c3R4bnM3OmxldCB3c3R4bnM3OnR5cGU9IkxldENsYXVzZSIgbG9jYXRvcj0iMTM0OjktMTM0OjEzMyIgaWRlbnRpZmllcj0ibW1lUGVySW5ncmVkaWVudCI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IkZ1bmN0aW9uUmVmIiBsb2NhdG9yPSIxMzQ6MjctMTM0OjEzMyIgbmFtZT0iQ2FsY3VsYXRlTU1FcyIgbGlicmFyeU5hbWU9Ik9NVEtMb2dpYyI+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iTGlzdCIgbG9jYXRvcj0iMTM0OjUxLTEzNDoxMzIiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGUiIGxvY2F0b3I9IjEzNDo1My0xMzQ6MTMwIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGVFbGVtZW50IiBuYW1lPSJyeE5vcm1Db2RlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEzNDo2Ny0xMzQ6NzgiIHBhdGg9InJ4Tm9ybUNvZGUiIHNjb3BlPSJQIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudCB3c3R4bnM3OnR5cGU9IlR1cGxlRWxlbWVudCIgbmFtZT0iZG9zZVF1YW50aXR5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEzNDo5NS0xMzQ6MTAwIiBwYXRoPSJkb3NlIiBzY29wZT0iUCIvPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzplbGVtZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsZW1lbnQgd3N0eG5zNzp0eXBlPSJUdXBsZUVsZW1lbnQiIG5hbWU9ImRvc2VzUGVyRGF5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnZhbHVlIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjEzNDoxMTYtMTM0OjEyOCIgcGF0aD0iZG9zZXNQZXJEYXkiIHNjb3BlPSJQIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzplbGVtZW50PgogICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgICAgICAgIDwvd3N0eG5zNzpsZXQ+CiAgICAgICAgICA8L3dzdHhuczc6bGV0PgogICAgICAgICAgPHdzdHhuczc6cmVsYXRpb25zaGlwLz4KICAgICAgICAgIDx3c3R4bnM3OnJldHVybiB3c3R4bnM3OnR5cGU9IlJldHVybkNsYXVzZSIgbG9jYXRvcj0iMTM1OjUtMTQyOjUiPgogICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iVHVwbGUiIGxvY2F0b3I9IjEzNToxMi0xNDI6NSI+CiAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudD4KICAgICAgICAgICAgICAgIDx3c3R4bnM3OmVsZW1lbnQgd3N0eG5zNzp0eXBlPSJUdXBsZUVsZW1lbnQiIG5hbWU9InJ4Tm9ybUNvZGUiPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzp2YWx1ZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMzY6MTktMTM2OjMwIiBwYXRoPSJyeE5vcm1Db2RlIiBzY29wZT0iUCIvPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGVFbGVtZW50IiBuYW1lPSJpc0RyYWZ0Ij4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6dmFsdWUgd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTM3OjE2LTEzNzoyNCIgcGF0aD0iaXNEcmFmdCIgc2NvcGU9IlAiLz4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzplbGVtZW50PgogICAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudCB3c3R4bnM3OnR5cGU9IlR1cGxlRWxlbWVudCIgbmFtZT0iaXNQUk4iPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzp2YWx1ZSB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxMzg6MTQtMTM4OjIwIiBwYXRoPSJpc1BSTiIgc2NvcGU9IlAiLz4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzplbGVtZW50PgogICAgICAgICAgICAgICAgPHdzdHhuczc6ZWxlbWVudCB3c3R4bnM3OnR5cGU9IlR1cGxlRWxlbWVudCIgbmFtZT0icHJlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgICAgPHdzdHhuczc6dmFsdWUgd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTM5OjIxLTEzOTozNCIgcGF0aD0icHJlc2NyaXB0aW9uIiBzY29wZT0iUCIvPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGVFbGVtZW50IiBuYW1lPSJkYWlseURvc2UiPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzp2YWx1ZSB3c3R4bnM3OnR5cGU9IkNvbWJpbmUiIGxvY2F0b3I9IjE0MDoxOC0xNDA6ODIiPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlF1ZXJ5IiBsb2NhdG9yPSIxNDA6MjYtMTQwOjczIj4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iQWxpYXNlZFF1ZXJ5U291cmNlIiBsb2NhdG9yPSIxNDA6MjYtMTQwOjQzIiBhbGlhcz0iWCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IlF1ZXJ5TGV0UmVmIiBsb2NhdG9yPSIxNDA6MjYtMTQwOjQxIiBuYW1lPSJtbWVQZXJJbmdyZWRpZW50Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6cmVsYXRpb25zaGlwLz4KICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OnJldHVybiB3c3R4bnM3OnR5cGU9IlJldHVybkNsYXVzZSIgbG9jYXRvcj0iMTQwOjQ1LTE0MDo3MyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmV4cHJlc3Npb24gd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTQwOjUyLTE0MDo3MyIgcGF0aD0iZGFpbHlEb3NlRGVzY3JpcHRpb24iIHNjb3BlPSJYIi8+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6cmV0dXJuPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c2VwYXJhdG9yIHdzdHhuczc6dHlwZT0iTGl0ZXJhbCIgbG9jYXRvcj0iMTQwOjc2LTE0MDo4MSIgdmFsdWVUeXBlPSJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVN0cmluZyIgdmFsdWU9IiYjeGQ7JiN4YTsiLz4KICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnZhbHVlPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OmVsZW1lbnQ+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzplbGVtZW50IHdzdHhuczc6dHlwZT0iVHVwbGVFbGVtZW50IiBuYW1lPSJtbWUiPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzp2YWx1ZSB3c3R4bnM3OnR5cGU9IlN1bSIgbG9jYXRvcj0iMTQxOjEyLTE0MTo0NyI+CiAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlIHdzdHhuczc6dHlwZT0iUXVlcnkiIGxvY2F0b3I9IjE0MToxNi0xNDE6NDYiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJBbGlhc2VkUXVlcnlTb3VyY2UiIGxvY2F0b3I9IjE0MToxNi0xNDE6MzMiIGFsaWFzPSJYIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iUXVlcnlMZXRSZWYiIGxvY2F0b3I9IjE0MToxNi0xNDE6MzEiIG5hbWU9Im1tZVBlckluZ3JlZGllbnQiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpyZWxhdGlvbnNoaXAvPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6cmV0dXJuIHdzdHhuczc6dHlwZT0iUmV0dXJuQ2xhdXNlIiBsb2NhdG9yPSIxNDE6MzUtMTQxOjQ2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6ZXhwcmVzc2lvbiB3c3R4bnM3OnR5cGU9IlByb3BlcnR5IiBsb2NhdG9yPSIxNDE6NDItMTQxOjQ2IiBwYXRoPSJtbWUiIHNjb3BlPSJYIi8+CiAgICAgICAgICAgICAgICAgICAgICA8L3dzdHhuczc6cmV0dXJuPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpzb3VyY2U+CiAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzp2YWx1ZT4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzplbGVtZW50PgogICAgICAgICAgICAgIDwvd3N0eG5zNzplbGVtZW50PgogICAgICAgICAgICA8L3dzdHhuczc6ZXhwcmVzc2lvbj4KICAgICAgICAgIDwvd3N0eG5zNzpyZXR1cm4+CiAgICAgICAgPC93c3R4bnM3OmV4cHJlc3Npb24+CiAgICAgIDwvd3N0eG5zNzpkZWY+CiAgICAgIDx3c3R4bnM3OmRlZiB3c3R4bnM3OnR5cGU9IkZ1bmN0aW9uRGVmIiBsb2NhdG9yPSIxNDk6MS0xNTM6MyIgbmFtZT0iVG90YWxNTUUiIGNvbnRleHQ9IlBhdGllbnQiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgIDx3c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iT3BlcmFuZERlZiIgbmFtZT0icHJlc2NyaXB0aW9ucyI+CiAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmRUeXBlU3BlY2lmaWVyIHdzdHhuczc6dHlwZT0iTGlzdFR5cGVTcGVjaWZpZXIiIGxvY2F0b3I9IjE0OTo0MC0xNDk6NjIiPgogICAgICAgICAgICAgIDx3c3R4bnM3OmVsZW1lbnRUeXBlIHdzdHhuczc6dHlwZT0iTmFtZWRUeXBlU3BlY2lmaWVyIiBsb2NhdG9yPSIxNDk6NDUtMTQ5OjYxIiBuYW1lPSJ7aHR0cDovL2hsNy5vcmcvZmhpcn1NZWRpY2F0aW9uUmVxdWVzdCIvPgogICAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZFR5cGVTcGVjaWZpZXI+CiAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iRnVuY3Rpb25SZWYiIGxvY2F0b3I9IjE1MDozLTE1MzozIiBuYW1lPSJRdWFudGl0eSIgbGlicmFyeU5hbWU9Ik9NVEtMb2dpYyI+CiAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICA8d3N0eG5zNzpvcGVyYW5kIHdzdHhuczc6dHlwZT0iU3VtIiBsb2NhdG9yPSIxNTE6NS0xNTE6NTAiPgogICAgICAgICAgICAgIDx3c3R4bnM3OnNvdXJjZSB3c3R4bnM3OnR5cGU9IlF1ZXJ5IiBsb2NhdG9yPSIxNTE6OS0xNTE6NDkiPgogICAgICAgICAgICAgICAgPHdzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJBbGlhc2VkUXVlcnlTb3VyY2UiIGxvY2F0b3I9IjE1MTo5LTE1MTozMCIgYWxpYXM9Ik0iPgogICAgICAgICAgICAgICAgICAgIDx3c3R4bnM3OmV4cHJlc3Npb24gd3N0eG5zNzp0eXBlPSJGdW5jdGlvblJlZiIgbG9jYXRvcj0iMTUxOjktMTUxOjI4IiBuYW1lPSJNTUUiPgogICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHdzdHhuczc6b3BlcmFuZCB3c3R4bnM3OnR5cGU9Ik9wZXJhbmRSZWYiIGxvY2F0b3I9IjE1MToxNC0xNTE6MjYiIG5hbWU9InByZXNjcmlwdGlvbnMiLz4KICAgICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpvcGVyYW5kPgogICAgICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpleHByZXNzaW9uPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6c291cmNlPgogICAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgICAgIDx3c3R4bnM3OnJlbGF0aW9uc2hpcC8+CiAgICAgICAgICAgICAgICA8d3N0eG5zNzpyZXR1cm4gd3N0eG5zNzp0eXBlPSJSZXR1cm5DbGF1c2UiIGxvY2F0b3I9IjE1MTozMi0xNTE6NDkiPgogICAgICAgICAgICAgICAgICA8d3N0eG5zNzpleHByZXNzaW9uIHdzdHhuczc6dHlwZT0iUHJvcGVydHkiIGxvY2F0b3I9IjE1MTozOS0xNTE6NDkiIHBhdGg9InZhbHVlIj4KICAgICAgICAgICAgICAgICAgICA8d3N0eG5zNzpzb3VyY2Ugd3N0eG5zNzp0eXBlPSJQcm9wZXJ0eSIgbG9jYXRvcj0iMTUxOjM5LTE1MTo0MyIgcGF0aD0ibW1lIiBzY29wZT0iTSIvPgogICAgICAgICAgICAgICAgICA8L3dzdHhuczc6ZXhwcmVzc2lvbj4KICAgICAgICAgICAgICAgIDwvd3N0eG5zNzpyZXR1cm4+CiAgICAgICAgICAgICAgPC93c3R4bnM3OnNvdXJjZT4KICAgICAgICAgICAgPC93c3R4bnM3Om9wZXJhbmQ+CiAgICAgICAgICAgIDx3c3R4bnM3Om9wZXJhbmQgd3N0eG5zNzp0eXBlPSJMaXRlcmFsIiBsb2NhdG9yPSIxNTI6NS0xNTI6MTMiIHZhbHVlVHlwZT0ie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciIHZhbHVlPSJ7TU1FfS9kIi8+CiAgICAgICAgICA8L3dzdHhuczc6b3BlcmFuZD4KICAgICAgICA8L3dzdHhuczc6ZXhwcmVzc2lvbj4KICAgICAgPC93c3R4bnM3OmRlZj4KICAgIDwvd3N0eG5zNzpkZWY+CiAgPC93c3R4bnM3OnN0YXRlbWVudHM+CiAgPHdzdHhuczg6YW5ub3RhdGlvbiB4bWxuczp3c3R4bnM4PSJ1cm46aGw3LW9yZzplbG06cjEiPgogICAgPHdzdHhuczg6YW5ub3RhdGlvbiB3c3R4bnM4OnR5cGU9IkNxbFRvRWxtSW5mbyIgdHJhbnNsYXRvclZlcnNpb249IjIuMS4wIiB0cmFuc2xhdG9yT3B0aW9ucz0iRW5hYmxlTG9jYXRvcnMsRGlzYWJsZUxpc3REZW1vdGlvbixEaXNhYmxlTGlzdFByb21vdGlvbiIvPgogIDwvd3N0eG5zODphbm5vdGF0aW9uPgo8L0xpYnJhcnk+Cg=="
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}
{
  "resourceType": "Library",
  "id": "MMECalculator",
  "meta": {
    "profile": [ "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary" ]
  },
  "text": {
    "status": "extensions",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n    <table class=\"grid dict\">\n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">MMECalculator</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\">http://fhir.org/guides/cdc/opioid-cds/Library/MMECalculator</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">3.0.0</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Name: </b></th>\n            <td style=\"padding-left: 4px;\">MMECalculator</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">Morphine Milligram Equivalent (MME) Calculator for FHIR R4</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">active</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Experimental: </b></th>\n            <td style=\"padding-left: 4px;\">false</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span>http://terminology.hl7.org/CodeSystem/library-type</span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2021-11-25T15:15:41+11:00</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">Alphora</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\">This library contains logic to surface the MME calculation functionality provided by the OMTKLogic library by extracting appropriate information from FHIR R4 MedicationRequest resource.</td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Capability: </b></th>\n          <td style=\"padding-left: 4px;\">\n            shareable computable publishable executable \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Representation Level: </b></th>\n          <td style=\"padding-left: 4px;\">\n            structured\n          </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Use Context: </b></th>\n            <td style=\"padding-left: 4px;\">\n                <table class=\"grid-dict\">\n                    <tr><th><b>code</b></th><th><b>value</b></th><th><b>display</b></th></tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>182888003</td>\n                        <td>Medication requested (situation)</td>\n                      </tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>82423001</td>\n                        <td>Chronic pain (finding)</td>\n                      </tr>\n                    \n                </table>\n            </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Jurisdiction: </b></th>\n            <td style=\"padding-left: 4px;\">840</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Usage: </b></th>\n            <td style=\"padding-left: 4px;\">NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Copyright: </b></th>\n            <td style=\"padding-left: 4px;\">Copyright 2019+ Centers for Disease Control and Prevention (CDC)</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Last Review Date: </b></th>\n            <td style=\"padding-left: 4px;\">2020-09-26</td>\n        </tr>\n        \n        \n        \n        <tr>\n          <th scope=\"row\"><b>Related Artifacts: </b></th>\n          <td style=\"padding-left: 4px;\">\n            \n            <p><b>Documentation</b></p>\n            <ul>\n              \n                <li><a href=\"http://fhir.org/guides/cdc/opioid-cd/mme-calculator.html\">MME Calculator MME Calculator</a></li>\n              \n            </ul>\n            \n            \n            <p><b>References</b></p>\n            <ul>\n              \n                <li>Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)<br/><a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/\">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/</a></li>\n              \n                <li>Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org<br/><a href=\"http://unitsofmeasure.org\">http://unitsofmeasure.org</a></li>\n              \n                <li>Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1<br/><a href=\"http://dx.doi.org/10.15585/mmwr.rr6501e1\">http://dx.doi.org/10.15585/mmwr.rr6501e1</a></li>\n              \n                <li>National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020<br/><a href=\"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\">https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf</a></li>\n              \n            </ul>\n            \n            \n            <p><b>Dependencies</b></p>\n            <ul>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/Library/OMTKLogic|3.0.0</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/Library/OMTKData|3.0.0</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/Library/ConversionFactors|3.0.0</li>\n              \n                <li>http://terminology.hl7.org/CodeSystem/usage-context-type</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes</li>\n              \n            </ul>\n            \n            \n            \n            \n            \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>ErrorLevel</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>ConversionFactorSupplementName</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>Patient</th><th>Patient</th><th>0</th><th>1</th><th>out</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Data Requirements:</b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Type</b></th><th><b>Profile</b></th><th><b>MS</b></th><th><b>Code Filter</b></th></tr>\n              \n                <tr>\n                  <th>Patient</th>\n                  <th>http://hl7.org/fhir/StructureDefinition/Patient</th>\n                  <th/>\n                  <th>\n                    \n                  </th>\n                </tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">library MMECalculator version '3.0.0'\r\n\r\n/*\r\nThis library contains logic to surface the MME calculation functionality provided\r\nby the OMTKLogic library by extracting appropriate information from FHIR R4\r\nMedicationRequest resource.\r\n*/\r\n\r\nusing FHIR version '4.0.1'\r\n\r\ninclude FHIRHelpers version '4.0.1'\r\ninclude OMTKLogic version '3.0.0'\r\n\r\nparameter ErrorLevel String default 'Warning'\r\n\r\ncontext Patient\r\n\r\n/*\r\nHelper function to force the choice of the FHIR.Range value.\r\nThis avoids the need for the _is_ and _as_ operators on choices,\r\nwhich is not implemented in the JavaScript CQL engine.\r\n*/\r\ndefine function ToFHIRRange(range FHIR.Range):\r\n  range\r\n\r\n/*\r\nHelper function to force the choice of the FHIR.SimpleQuantity value.\r\nThis avoids the need for the _is_ and _as_ operators on choices,\r\nwhich is not implemented in the JavaScript CQL engine.\r\n*/\r\ndefine function ToFHIRQuantity(quantity FHIR.SimpleQuantity):\r\n  quantity\r\n\r\n/*\r\nHelper function to force the choice of the FHIR.CodeableConcept value.\r\nThis avoids the need for the _is_ and _as_ operators on choices,\r\nwhich is not implemented in the JavaScript CQL engine.\r\n*/\r\ndefine function ToFHIRCodeableConcept(codeableConcept FHIR.CodeableConcept):\r\n  codeableConcept\r\n\r\n/*\r\nFHIRHelpers ToQuantity logic incorrectly uses the unit element of the FHIR Quantity,\r\nwhen it should be using the code element as the actual coded unit.\r\nhttps://github.com/cqframework/clinical_quality_language/issues/557\r\n\r\nUntil the above issue is addressed, this function provides ToQuantity functionality for this library\r\n*/\r\ndefine function ToQuantity(quantity FHIR.SimpleQuantity):\r\n  case\r\n    when quantity is null then null\r\n    when quantity.value is null then null\r\n    when quantity.system is null or quantity.system = 'http://unitsofmeasure.org' then\r\n      System.Quantity {\r\n        value: quantity.value.value,\r\n        unit: quantity.code.value\r\n      }\r\n    else\r\n      Message(null, true, 'MMECalculator.ToQuantity.InvalidFHIRQuantity', ErrorLevel, 'Invalid FHIR Quantity code: ' &amp; quantity.code.value)\r\n  end\r\n\r\n/*\r\nExtracts the relevant information for prescription calculation from a list of\r\nFHIR MedicationRequest resources. This assumes a MedicationRequest that conforms\r\nto the MMEMedicationRequest profile, specifically:\r\n* 1 and only 1 dosageInstruction\r\n* 1 and only 1 doseAndRate\r\n* 1 timing with 1 repeat\r\n* frequency, frequencyMax, defaulting to 1\r\n* period, periodUnit, defaulting to 1 'd'\r\n* doseQuantity or doseRange\r\n* timeOfDay\r\n\r\nNote that if timeOfDay is specified in addition to frequency and period, it is ignored (i.e. assumed to be consistent with the specified frequency and period).\r\nTimeOfDay is only used to determine timesPerDay if frequency and period are not specified.\r\n*/\r\ndefine function Prescriptions(Orders List&lt;MedicationRequest&gt;):\r\n  Orders O\r\n    let\r\n      rxNormCode: OMTKLogic.GetMedicationCode(O.medication),\r\n      medicationName: OMTKLogic.GetMedicationName(rxNormCode),\r\n      // NOTE: Assuming a single dosage instruction element\r\n      dosageInstruction: singleton from O.dosageInstruction,\r\n      // NOTE: Assuming a single dose and rate element\r\n      doseAndRate: singleton from dosageInstruction.doseAndRate,\r\n      repeat: dosageInstruction.timing.repeat,\r\n      frequency: Coalesce(repeat.frequencyMax.value, repeat.frequency.value),\r\n      period: OMTKLogic.Quantity(repeat.period.value, repeat.periodUnit.value),\r\n      doseRange: ToFHIRRange(doseAndRate.dose),\r\n      doseQuantity: ToFHIRQuantity(doseAndRate.dose),\r\n      timesPerDay: Count(repeat.timeOfDay),\r\n      doseDescription:\r\n        Coalesce(\r\n          ToString(ToQuantity(doseQuantity)),\r\n          ToString(doseRange.low.value.value) + '-' + ToString(doseRange.high.value.value) + ' ' + doseRange.high.unit.value\r\n        ),\r\n      frequencyDescription:\r\n        ToString(dosageInstruction.timing.repeat.frequency.value) +\r\n          Coalesce(\r\n            '-' + ToString(dosageInstruction.timing.repeat.frequencyMax.value),\r\n            ''\r\n          )\r\n    return {\r\n      rxNormCode: rxNormCode,\r\n      isDraft: O.status.value = 'draft',\r\n      // NOTE: Assuming asNeeded is expressed as a boolean\r\n      isPRN: dosageInstruction.asNeeded,\r\n      prescription:\r\n        if dosageInstruction.text is not null then\r\n          medicationName + ' ' + dosageInstruction.text.value\r\n        else\r\n          // TODO: Shouldn't need the .value here on asNeededBoolean\r\n          medicationName + ' ' + doseDescription + ' q' + frequencyDescription + (if dosageInstruction.asNeeded then ' PRN' else ''),\r\n      dose: ToQuantity(Coalesce(doseQuantity, doseRange.high)),\r\n      dosesPerDay: Coalesce(OMTKLogic.ToDaily(frequency, period), timesPerDay, 1.0)\r\n    }\r\n\r\n/*\r\nCalculates Morphine Milligram Equivalent (MME) for each medication in the given\r\nlist. The calculation assumes the most aggresive dosing, and is performed for all\r\nmedications in the given list (i.e. no additional filtering for status is performed).\r\n*/\r\ndefine function MME(prescriptions List&lt;MedicationRequest&gt;):\r\n  (Prescriptions(prescriptions)) P\r\n    let mmePerIngredient: OMTKLogic.CalculateMMEs({ { rxNormCode: P.rxNormCode, doseQuantity: P.dose, dosesPerDay: P.dosesPerDay } })\r\n    return {\r\n      rxNormCode: P.rxNormCode,\r\n      isDraft: P.isDraft,\r\n      isPRN: P.isPRN,\r\n      prescription: P.prescription,\r\n      dailyDose: Combine(mmePerIngredient X return X.dailyDoseDescription, '\\r\\n'),\r\n      mme: Sum(mmePerIngredient X return X.mme)\r\n    }\r\n\r\n/*\r\nCalculates total Morphine Milligram Equivalent (MME) for the given list of medications.\r\nThe calculation assumes the most aggressive dosing, and is performed for all\r\nmedications in the given list (i.e. no additional filtering for status is performed).\r\n*/\r\ndefine function TotalMME(prescriptions List&lt;MedicationRequest&gt;):\r\n  OMTKLogic.Quantity(\r\n    Sum((MME(prescriptions)) M return M.mme.value),\r\n    '{MME}/d'\r\n  )\r\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (123452 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+json</th></tr>\n              <tr><td><pre><code>Encoded data (660424 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "shareable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "computable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "publishable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "executable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel",
    "valueCode": "structured"
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/MMECalculator",
  "version": "3.0.0",
  "name": "MMECalculator",
  "title": "Morphine Milligram Equivalent (MME) Calculator for FHIR R4",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2021-11-25T15:15:41+11:00",
  "publisher": "Alphora",
  "contact": [ {
    "telecom": [ {
      "system": "url",
      "value": "http://alphora.com"
    } ]
  } ],
  "description": "This library contains logic to surface the MME calculation functionality provided by the OMTKLogic library by extracting appropriate information from FHIR R4 MedicationRequest resource.",
  "useContext": [ {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "182888003",
        "display": "Medication requested (situation)"
      } ]
    }
  }, {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "82423001",
        "display": "Chronic pain (finding)"
      } ]
    }
  } ],
  "jurisdiction": [ {
    "coding": [ {
      "system": "http://unstats.un.org/unsd/methods/m49/m49.htm",
      "code": "840"
    } ]
  } ],
  "usage": "NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.",
  "copyright": "Copyright 2019+ Centers for Disease Control and Prevention (CDC)",
  "lastReviewDate": "2020-09-26",
  "topic": [ {
    "text": "Opioid Prescribing"
  }, {
    "text": "Morphine Milligram Equivalent (MME)"
  } ],
  "author": [ {
    "name": "Floyd Eisenberg, MD, MPH"
  }, {
    "name": "Kensaku Kawamoto, MD, PhD, MHS"
  }, {
    "name": "Robert McClure, MD"
  }, {
    "name": "Bryn Rhodes"
  } ],
  "relatedArtifact": [ {
    "type": "citation",
    "label": "RxNORM",
    "display": "This product uses publicly available data courtesy of the U.S. National Library of Medicine (NLM), National Institutes of Health, Department of Health and Human Services; NLM is not responsible for the product and does not endorse or recommend this or any other product.",
    "citation": "Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)",
    "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/"
  }, {
    "type": "citation",
    "label": "UCUM",
    "display": "This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at http://unitsofmeasure.org<br/> The current complete UCUM table, UCUM Specification are available for download at http://unitsofmeasure.org<br/>The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.",
    "citation": "Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org",
    "url": "http://unitsofmeasure.org"
  }, {
    "type": "citation",
    "label": "CDC 2016 Opioid Prescribing Guideline",
    "display": "Centers For Disease Control and Prevention (CDC) Guideline for Prescribing Opioids for Chronic Pain — United States, 2016",
    "citation": "Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1"
  }, {
    "type": "citation",
    "label": "Calculating total daily dose of opioids for safer dosage",
    "display": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.",
    "citation": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020",
    "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"
  }, {
    "type": "documentation",
    "label": "MME Calculator",
    "display": "MME Calculator",
    "url": "http://fhir.org/guides/cdc/opioid-cds/mme-calculator.html"
  }, {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library OMTKLogic",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKLogic|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library OMTKData",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKData|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library ConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/ConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library CDCMMEClinicalConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/CDCMMEClinicalConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system Usage Context Type",
    "resource": "http://terminology.hl7.org/CodeSystem/usage-context-type"
  }, {
    "type": "depends-on",
    "display": "Code system CDC MME Usage Context Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes"
  } ],
  "parameter": [ {
    "name": "ErrorLevel",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "ConversionFactorSupplementName",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}
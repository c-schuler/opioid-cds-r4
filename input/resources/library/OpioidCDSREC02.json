{
  "resourceType": "Library",
  "id": "OpioidCDSREC02",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-OpioidCDSREC02</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> logic-library </td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">0.1.1</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"4\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers</span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommon</span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommonConfig</span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSRoutines</span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"2\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>CarePlan</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>category</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://fhir.org/guides/cdc/opioid-cds/ValueSet/pain-treatment-plan</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://fhir.org/guides/cdc/opioid-cds/ValueSet/pain-management-procedure</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library OpioidCDSREC02 version '0.1.1'\n\nusing FHIR version '4.0.1'\n\ninclude FHIRHelpers version '4.0.1' called FHIRHelpers\ninclude OpioidCDSCommon version '0.1.1' called Common\ninclude OpioidCDSCommonConfig version '0.1.1' called Config\ninclude OpioidCDSRoutines version '0.1.1' called Routines\n\n/*\n**\n**  Recommendation #2\n**    Before starting opioid therapy for chronic pain, clinicians should establish\n**    treatment goals with all patients, including realistic goals for pain and\n**    function, and should consider how opioid therapy will be discontinued if\n**    benefits do not outweigh risks. Clinicians should continue opioid therapy\n**    only if there is clinically meaningful improvement in pain and function\n**    that outweighs risks to patient safety\n**    (recommendation category: A, evidence type: 4).\n**\n**  When\n**    Provider is prescribing an opioid with ambulatory misuse potential in the outpatient setting\n**    Prescription is for treating chronic pain.\n**    Opioid review is useful for this patient:\n**      Patient is 18 or over\n**      Patient does not have findings indicating limited life expectancy\n**      Patient does not have orders for therapies indicating end of life care\n**      Patient is not undergoing active cancer treatment:\n**        Patient has had at least 2 encounters within the past year with any diagnosis of cancer\n**    Patient is opioid naive:\n**      No indication of opioid use in the past 90 days from a prescription, self report, or a dispensing event\n**    Patient does not have an opioid treatment plan that was created, edited, or reviewed by the prescribing physician in the past 90 days\n**  Then\n**    Recommend creation, review or update of an opioid treatment plan. Potential actions include:\n**      Create treatment plan with goals for opioid use\n**      Update patient’s opioid treatment plan\n**      Review patient’s opioid treatment plan\n**      N/A - see comment, snooze 3 months\n**      Taper / Discontinue opioid\n**\n*/\n\n// META: PlanDefinition: http://fhir.org/guides/cdc/opioid-cds-r4/PlanDefinition/opioid-cds-02\n\nparameter ContextPrescriptions List&lt;MedicationRequest&gt;\n\ncontext Patient\n\ndefine &quot;Treatment Plan Lookback Period&quot;:\n  Interval[Today() - 90 days, Today()]\n\ndefine &quot;Chronic Pain Opioid Analgesic with Ambulatory Misuse Potential Prescriptions&quot;:\n  ( Common.&quot;Is Opioid Analgesic with Ambulatory Misuse Potential?&quot;( ContextPrescriptions ) ) AmbulatoryOpioidPrescription\n    where Routines.&quot;Is Chronic Pain Prescription?&quot;( AmbulatoryOpioidPrescription )\n\ndefine &quot;Patient Is Being Prescribed Opioid Analgesic with Ambulatory Misuse Potential&quot;:\n  exists( &quot;Chronic Pain Opioid Analgesic with Ambulatory Misuse Potential Prescriptions&quot; )\n\ndefine &quot;Is Recommendation Applicable?&quot;:\n  &quot;Inclusion Criteria&quot;\n\ndefine &quot;Inclusion Criteria&quot;:\n  &quot;Patient Is Being Prescribed Opioid Analgesic with Ambulatory Misuse Potential&quot;\n    and Routines.&quot;Is Opioid Naive?&quot;\n    and Routines.&quot;Is Opioid Review Useful?&quot;\n    and &quot;No Opioid Treatment Plan Created, was Edited or Reviewed in Past 90 Days?&quot;\n\ndefine &quot;No Opioid Treatment Plan Created, was Edited or Reviewed in Past 90 Days?&quot;:\n  Config.&quot;Opioid Treatment Plan Verification Enabled&quot;\n    and not (\n      exists ( &quot;Opioid Treatment Plan Creation or Update in Past 90 Days&quot; )\n        or &quot;Had Opioid Treatment Plan Reviewed in Past 90 Days&quot;\n    )\n\ndefine &quot;Opioid Treatment Plan Creation or Update in Past 90 Days&quot;:\n  [CarePlan: category in Common.&quot;Pain treatment plan&quot;] PainTreatmentPlan\n    where PainTreatmentPlan.status in { 'active', 'completed' }\n      and (\n        FHIRHelpers.ToDateTime( PainTreatmentPlan.created ) during day of &quot;Treatment Plan Lookback Period&quot;\n          or PainTreatmentPlan.meta.lastUpdated during day of &quot;Treatment Plan Lookback Period&quot;\n      )\n      and exists(\n        &quot;Chronic Pain Opioid Analgesic with Ambulatory Misuse Potential Prescriptions&quot;.recorder Recorder\n          where Recorder ~ PainTreatmentPlan.author\n      )\n\ndefine &quot;Had Opioid Treatment Plan Reviewed in Past 90 Days&quot;:\n  exists (\n    [Procedure: Common.&quot;Pain management procedure&quot;] PainManagementProcedure\n      where PainManagementProcedure.performed during day of &quot;Treatment Plan Lookback Period&quot;\n        and exists (\n          PainManagementProcedure.performer Performer\n            with &quot;Chronic Pain Opioid Analgesic with Ambulatory Misuse Potential Prescriptions&quot; ChronicPainScript\n            such that Performer.actor ~ ChronicPainScript.recorder\n        )\n  )\n\ndefine &quot;Get Indicator&quot;:\n  if &quot;Is Recommendation Applicable?&quot;\n    then 'warning'\n  else null\n\ndefine &quot;Get Summary&quot;:\n  if &quot;Is Recommendation Applicable?&quot;\n    then 'Recommend creation, review or update of opioid treatment plan'\n  else null\n\ndefine &quot;Get Detail&quot;:\n  if &quot;Is Recommendation Applicable?&quot;\n    then 'Medication requests(s): ' + Combine( flatten( Common.GetMedicationNames( &quot;Chronic Pain Opioid Analgesic with Ambulatory Misuse Potential Prescriptions&quot; ) ), ', ' )\n  else null\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSREC02",
  "version": "0.1.1",
  "name": "OpioidCDSREC02",
  "title": "Library - Recommendation #2 - Opioid Therapy Goals Discussion",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommon|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Library Config",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommonConfig|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Library Routines",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSRoutines|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Value set Opioid analgesics with ambulatory misuse potential",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/opioid-analgesics-with-ambulatory-misuse-potential"
  }, {
    "type": "depends-on",
    "display": "Value set Community",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/medicationrequest-category-community"
  }, {
    "type": "depends-on",
    "display": "Value set Pain treatment plan",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/pain-treatment-plan"
  }, {
    "type": "depends-on",
    "display": "Value set Pain management procedure",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/pain-management-procedure"
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Diagnosis Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-encounter-diagnosis-category"
  }, {
    "type": "depends-on",
    "display": "Value set Problem List Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-problem-list-category"
  }, {
    "type": "depends-on",
    "display": "Value set US Core Health Concern Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-us-core-health-concern-category"
  }, {
    "type": "depends-on",
    "display": "Value set Limited life expectancy conditions",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/limited-life-expectancy-conditions"
  }, {
    "type": "depends-on",
    "display": "Value set Active Condition",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-clinical-status-active"
  }, {
    "type": "depends-on",
    "display": "Value set Therapies indicating end of life care",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/therapies-indicating-end-of-life-care"
  } ],
  "parameter": [ {
    "name": "ContextPrescriptions",
    "use": "in",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Treatment Plan Lookback Period",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Chronic Pain Opioid Analgesic with Ambulatory Misuse Potential Prescriptions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Patient Is Being Prescribed Opioid Analgesic with Ambulatory Misuse Potential",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Age Less Than 18",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Opioid Treatment Plan Creation or Update in Past 90 Days",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "CarePlan"
  }, {
    "name": "Had Opioid Treatment Plan Reviewed in Past 90 Days",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "No Opioid Treatment Plan Created, was Edited or Reviewed in Past 90 Days?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Is Recommendation Applicable?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Get Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Get Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Get Detail",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Medication",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Medication" ],
    "mustSupport": [ "id" ],
    "codeFilter": [ {
      "path": "id"
    } ]
  }, {
    "type": "CarePlan",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/CarePlan" ],
    "mustSupport": [ "category", "status", "created", "meta", "meta.lastUpdated", "author" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/pain-treatment-plan"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "performed", "performer" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/pain-management-procedure"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-encounter-diagnosis-category"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-problem-list-category"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-us-core-health-concern-category"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "status", "intent", "authoredOn", "code" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBPcGlvaWRDRFNSRUMwMiB2ZXJzaW9uICcwLjEuMScKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMKaW5jbHVkZSBPcGlvaWRDRFNDb21tb24gdmVyc2lvbiAnMC4xLjEnIGNhbGxlZCBDb21tb24KaW5jbHVkZSBPcGlvaWRDRFNDb21tb25Db25maWcgdmVyc2lvbiAnMC4xLjEnIGNhbGxlZCBDb25maWcKaW5jbHVkZSBPcGlvaWRDRFNSb3V0aW5lcyB2ZXJzaW9uICcwLjEuMScgY2FsbGVkIFJvdXRpbmVzCgovKgoqKgoqKiAgUmVjb21tZW5kYXRpb24gIzIKKiogICAgQmVmb3JlIHN0YXJ0aW5nIG9waW9pZCB0aGVyYXB5IGZvciBjaHJvbmljIHBhaW4sIGNsaW5pY2lhbnMgc2hvdWxkIGVzdGFibGlzaAoqKiAgICB0cmVhdG1lbnQgZ29hbHMgd2l0aCBhbGwgcGF0aWVudHMsIGluY2x1ZGluZyByZWFsaXN0aWMgZ29hbHMgZm9yIHBhaW4gYW5kCioqICAgIGZ1bmN0aW9uLCBhbmQgc2hvdWxkIGNvbnNpZGVyIGhvdyBvcGlvaWQgdGhlcmFweSB3aWxsIGJlIGRpc2NvbnRpbnVlZCBpZgoqKiAgICBiZW5lZml0cyBkbyBub3Qgb3V0d2VpZ2ggcmlza3MuIENsaW5pY2lhbnMgc2hvdWxkIGNvbnRpbnVlIG9waW9pZCB0aGVyYXB5CioqICAgIG9ubHkgaWYgdGhlcmUgaXMgY2xpbmljYWxseSBtZWFuaW5nZnVsIGltcHJvdmVtZW50IGluIHBhaW4gYW5kIGZ1bmN0aW9uCioqICAgIHRoYXQgb3V0d2VpZ2hzIHJpc2tzIHRvIHBhdGllbnQgc2FmZXR5CioqICAgIChyZWNvbW1lbmRhdGlvbiBjYXRlZ29yeTogQSwgZXZpZGVuY2UgdHlwZTogNCkuCioqCioqICBXaGVuCioqICAgIFByb3ZpZGVyIGlzIHByZXNjcmliaW5nIGFuIG9waW9pZCB3aXRoIGFtYnVsYXRvcnkgbWlzdXNlIHBvdGVudGlhbCBpbiB0aGUgb3V0cGF0aWVudCBzZXR0aW5nCioqICAgIFByZXNjcmlwdGlvbiBpcyBmb3IgdHJlYXRpbmcgY2hyb25pYyBwYWluLgoqKiAgICBPcGlvaWQgcmV2aWV3IGlzIHVzZWZ1bCBmb3IgdGhpcyBwYXRpZW50OgoqKiAgICAgIFBhdGllbnQgaXMgMTggb3Igb3ZlcgoqKiAgICAgIFBhdGllbnQgZG9lcyBub3QgaGF2ZSBmaW5kaW5ncyBpbmRpY2F0aW5nIGxpbWl0ZWQgbGlmZSBleHBlY3RhbmN5CioqICAgICAgUGF0aWVudCBkb2VzIG5vdCBoYXZlIG9yZGVycyBmb3IgdGhlcmFwaWVzIGluZGljYXRpbmcgZW5kIG9mIGxpZmUgY2FyZQoqKiAgICAgIFBhdGllbnQgaXMgbm90IHVuZGVyZ29pbmcgYWN0aXZlIGNhbmNlciB0cmVhdG1lbnQ6CioqICAgICAgICBQYXRpZW50IGhhcyBoYWQgYXQgbGVhc3QgMiBlbmNvdW50ZXJzIHdpdGhpbiB0aGUgcGFzdCB5ZWFyIHdpdGggYW55IGRpYWdub3NpcyBvZiBjYW5jZXIKKiogICAgUGF0aWVudCBpcyBvcGlvaWQgbmFpdmU6CioqICAgICAgTm8gaW5kaWNhdGlvbiBvZiBvcGlvaWQgdXNlIGluIHRoZSBwYXN0IDkwIGRheXMgZnJvbSBhIHByZXNjcmlwdGlvbiwgc2VsZiByZXBvcnQsIG9yIGEgZGlzcGVuc2luZyBldmVudAoqKiAgICBQYXRpZW50IGRvZXMgbm90IGhhdmUgYW4gb3Bpb2lkIHRyZWF0bWVudCBwbGFuIHRoYXQgd2FzIGNyZWF0ZWQsIGVkaXRlZCwgb3IgcmV2aWV3ZWQgYnkgdGhlIHByZXNjcmliaW5nIHBoeXNpY2lhbiBpbiB0aGUgcGFzdCA5MCBkYXlzCioqICBUaGVuCioqICAgIFJlY29tbWVuZCBjcmVhdGlvbiwgcmV2aWV3IG9yIHVwZGF0ZSBvZiBhbiBvcGlvaWQgdHJlYXRtZW50IHBsYW4uIFBvdGVudGlhbCBhY3Rpb25zIGluY2x1ZGU6CioqICAgICAgQ3JlYXRlIHRyZWF0bWVudCBwbGFuIHdpdGggZ29hbHMgZm9yIG9waW9pZCB1c2UKKiogICAgICBVcGRhdGUgcGF0aWVudOKAmXMgb3Bpb2lkIHRyZWF0bWVudCBwbGFuCioqICAgICAgUmV2aWV3IHBhdGllbnTigJlzIG9waW9pZCB0cmVhdG1lbnQgcGxhbgoqKiAgICAgIE4vQSAtIHNlZSBjb21tZW50LCBzbm9vemUgMyBtb250aHMKKiogICAgICBUYXBlciAvIERpc2NvbnRpbnVlIG9waW9pZAoqKgoqLwoKLy8gTUVUQTogUGxhbkRlZmluaXRpb246IGh0dHA6Ly9maGlyLm9yZy9ndWlkZXMvY2RjL29waW9pZC1jZHMtcjQvUGxhbkRlZmluaXRpb24vb3Bpb2lkLWNkcy0wMgoKcGFyYW1ldGVyIENvbnRleHRQcmVzY3JpcHRpb25zIExpc3Q8TWVkaWNhdGlvblJlcXVlc3Q+Cgpjb250ZXh0IFBhdGllbnQKCmRlZmluZSAiVHJlYXRtZW50IFBsYW4gTG9va2JhY2sgUGVyaW9kIjoKICBJbnRlcnZhbFtUb2RheSgpIC0gOTAgZGF5cywgVG9kYXkoKV0KCmRlZmluZSAiQ2hyb25pYyBQYWluIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWwgUHJlc2NyaXB0aW9ucyI6CiAgKCBDb21tb24uIklzIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWw/IiggQ29udGV4dFByZXNjcmlwdGlvbnMgKSApIEFtYnVsYXRvcnlPcGlvaWRQcmVzY3JpcHRpb24KICAgIHdoZXJlIFJvdXRpbmVzLiJJcyBDaHJvbmljIFBhaW4gUHJlc2NyaXB0aW9uPyIoIEFtYnVsYXRvcnlPcGlvaWRQcmVzY3JpcHRpb24gKQoKZGVmaW5lICJQYXRpZW50IElzIEJlaW5nIFByZXNjcmliZWQgT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCI6CiAgZXhpc3RzKCAiQ2hyb25pYyBQYWluIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWwgUHJlc2NyaXB0aW9ucyIgKQoKZGVmaW5lICJJcyBSZWNvbW1lbmRhdGlvbiBBcHBsaWNhYmxlPyI6CiAgIkluY2x1c2lvbiBDcml0ZXJpYSIKCmRlZmluZSAiUGF0aWVudCBBZ2UgTGVzcyBUaGFuIDE4IjoKICBpZiAoQ29uZmlnLiJBZ2UgTGVzcyB0aGFuIDE4IFllYXJzIElzIEVuYWJsZWQiKSB0aGVuCiAgICBBZ2VJblllYXJzQXQoVG9kYXkoKSkgPCAxOAogIGVsc2UKICAgIGZhbHNlCgpkZWZpbmUgIkluY2x1c2lvbiBDcml0ZXJpYSI6CiAgIlBhdGllbnQgSXMgQmVpbmcgUHJlc2NyaWJlZCBPcGlvaWQgQW5hbGdlc2ljIHdpdGggQW1idWxhdG9yeSBNaXN1c2UgUG90ZW50aWFsIgogICAgYW5kIFJvdXRpbmVzLiJJcyBPcGlvaWQgTmFpdmU/IgogICAgYW5kIG5vdCAiUGF0aWVudCBBZ2UgTGVzcyBUaGFuIDE4IgogICAgYW5kIFJvdXRpbmVzLiJJcyBPcGlvaWQgUmV2aWV3IFVzZWZ1bD8iCiAgICBhbmQgIk5vIE9waW9pZCBUcmVhdG1lbnQgUGxhbiBDcmVhdGVkLCB3YXMgRWRpdGVkIG9yIFJldmlld2VkIGluIFBhc3QgOTAgRGF5cz8iCgpkZWZpbmUgIk5vIE9waW9pZCBUcmVhdG1lbnQgUGxhbiBDcmVhdGVkLCB3YXMgRWRpdGVkIG9yIFJldmlld2VkIGluIFBhc3QgOTAgRGF5cz8iOgogIENvbmZpZy4iT3Bpb2lkIFRyZWF0bWVudCBQbGFuIFZlcmlmaWNhdGlvbiBFbmFibGVkIgogICAgYW5kIG5vdCAoCiAgICAgIGV4aXN0cyAoICJPcGlvaWQgVHJlYXRtZW50IFBsYW4gQ3JlYXRpb24gb3IgVXBkYXRlIGluIFBhc3QgOTAgRGF5cyIgKQogICAgICAgIG9yICJIYWQgT3Bpb2lkIFRyZWF0bWVudCBQbGFuIFJldmlld2VkIGluIFBhc3QgOTAgRGF5cyIKICAgICkKCmRlZmluZSAiT3Bpb2lkIFRyZWF0bWVudCBQbGFuIENyZWF0aW9uIG9yIFVwZGF0ZSBpbiBQYXN0IDkwIERheXMiOgogIFtDYXJlUGxhbjogY2F0ZWdvcnkgaW4gQ29tbW9uLiJQYWluIHRyZWF0bWVudCBwbGFuIl0gUGFpblRyZWF0bWVudFBsYW4KICAgIHdoZXJlIFBhaW5UcmVhdG1lbnRQbGFuLnN0YXR1cyBpbiB7ICdhY3RpdmUnLCAnY29tcGxldGVkJyB9CiAgICAgIGFuZCAoCiAgICAgICAgRkhJUkhlbHBlcnMuVG9EYXRlVGltZSggUGFpblRyZWF0bWVudFBsYW4uY3JlYXRlZCApIGR1cmluZyBkYXkgb2YgIlRyZWF0bWVudCBQbGFuIExvb2tiYWNrIFBlcmlvZCIKICAgICAgICAgIG9yIFBhaW5UcmVhdG1lbnRQbGFuLm1ldGEubGFzdFVwZGF0ZWQgZHVyaW5nIGRheSBvZiAiVHJlYXRtZW50IFBsYW4gTG9va2JhY2sgUGVyaW9kIgogICAgICApCiAgICAgIGFuZCBleGlzdHMoCiAgICAgICAgIkNocm9uaWMgUGFpbiBPcGlvaWQgQW5hbGdlc2ljIHdpdGggQW1idWxhdG9yeSBNaXN1c2UgUG90ZW50aWFsIFByZXNjcmlwdGlvbnMiLnJlY29yZGVyIFJlY29yZGVyCiAgICAgICAgICB3aGVyZSBSZWNvcmRlciB+IFBhaW5UcmVhdG1lbnRQbGFuLmF1dGhvcgogICAgICApCgpkZWZpbmUgIkhhZCBPcGlvaWQgVHJlYXRtZW50IFBsYW4gUmV2aWV3ZWQgaW4gUGFzdCA5MCBEYXlzIjoKICBleGlzdHMgKAogICAgW1Byb2NlZHVyZTogQ29tbW9uLiJQYWluIG1hbmFnZW1lbnQgcHJvY2VkdXJlIl0gUGFpbk1hbmFnZW1lbnRQcm9jZWR1cmUKICAgICAgd2hlcmUgUGFpbk1hbmFnZW1lbnRQcm9jZWR1cmUucGVyZm9ybWVkIGR1cmluZyBkYXkgb2YgIlRyZWF0bWVudCBQbGFuIExvb2tiYWNrIFBlcmlvZCIKICAgICAgICBhbmQgZXhpc3RzICgKICAgICAgICAgIFBhaW5NYW5hZ2VtZW50UHJvY2VkdXJlLnBlcmZvcm1lciBQZXJmb3JtZXIKICAgICAgICAgICAgd2l0aCAiQ2hyb25pYyBQYWluIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWwgUHJlc2NyaXB0aW9ucyIgQ2hyb25pY1BhaW5TY3JpcHQKICAgICAgICAgICAgc3VjaCB0aGF0IFBlcmZvcm1lci5hY3RvciB+IENocm9uaWNQYWluU2NyaXB0LnJlY29yZGVyCiAgICAgICAgKQogICkKCmRlZmluZSAiR2V0IEluZGljYXRvciI6CiAgaWYgIklzIFJlY29tbWVuZGF0aW9uIEFwcGxpY2FibGU/IgogICAgdGhlbiAnd2FybmluZycKICBlbHNlIG51bGwKCmRlZmluZSAiR2V0IFN1bW1hcnkiOgogIGlmICJJcyBSZWNvbW1lbmRhdGlvbiBBcHBsaWNhYmxlPyIKICAgIHRoZW4gJ1JlY29tbWVuZCBjcmVhdGlvbiwgcmV2aWV3IG9yIHVwZGF0ZSBvZiBvcGlvaWQgdHJlYXRtZW50IHBsYW4nCiAgZWxzZSBudWxsCgpkZWZpbmUgIkdldCBEZXRhaWwiOgogIGlmICJJcyBSZWNvbW1lbmRhdGlvbiBBcHBsaWNhYmxlPyIKICAgIHRoZW4gJ01lZGljYXRpb24gcmVxdWVzdHMocyk6ICcKICAgICAgKyBDb21iaW5lKCgiQ2hyb25pYyBQYWluIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWwgUHJlc2NyaXB0aW9ucyIgTQogICAgICAgICAgIHJldHVybiBDb2FsZXNjZShNLm1lZGljYXRpb24udGV4dCwgJzxVbmFibGUgdG8gZGV0ZXJtaW5lIG1lZGljYXRpb24gbmFtZT4nKSksICcsICcpCiAgZWxzZSBudWxsCg=="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": "ewogICJsaWJyYXJ5IiA6IHsKICAgICJ0eXBlIiA6ICJMaWJyYXJ5IiwKICAgICJpZGVudGlmaWVyIiA6IHsKICAgICAgInR5cGUiIDogIlZlcnNpb25lZElkZW50aWZpZXIiLAogICAgICAiaWQiIDogIk9waW9pZENEU1JFQzAyIiwKICAgICAgInN5c3RlbSIgOiAiaHR0cDovL2ZoaXIub3JnL2d1aWRlcy9jZGMvb3Bpb2lkLWNkcyIsCiAgICAgICJ2ZXJzaW9uIiA6ICIwLjEuMSIKICAgIH0sCiAgICAic2NoZW1hSWRlbnRpZmllciIgOiB7CiAgICAgICJ0eXBlIiA6ICJWZXJzaW9uZWRJZGVudGlmaWVyIiwKICAgICAgImlkIiA6ICJ1cm46aGw3LW9yZzplbG0iLAogICAgICAidmVyc2lvbiIgOiAicjEiCiAgICB9LAogICAgInVzaW5ncyIgOiB7CiAgICAgICJ0eXBlIiA6ICJMaWJyYXJ5JFVzaW5ncyIsCiAgICAgICJkZWYiIDogWyB7CiAgICAgICAgInR5cGUiIDogIlVzaW5nRGVmIiwKICAgICAgICAibG9jYWxJZGVudGlmaWVyIiA6ICJTeXN0ZW0iLAogICAgICAgICJ1cmkiIDogInVybjpobDctb3JnOmVsbS10eXBlczpyMSIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJVc2luZ0RlZiIsCiAgICAgICAgImxvY2F0b3IiIDogIjM6MS0zOjI2IiwKICAgICAgICAibG9jYWxJZGVudGlmaWVyIiA6ICJGSElSIiwKICAgICAgICAidXJpIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyIiwKICAgICAgICAidmVyc2lvbiIgOiAiNC4wLjEiCiAgICAgIH0gXQogICAgfSwKICAgICJpbmNsdWRlcyIgOiB7CiAgICAgICJ0eXBlIiA6ICJMaWJyYXJ5JEluY2x1ZGVzIiwKICAgICAgImRlZiIgOiBbIHsKICAgICAgICAidHlwZSIgOiAiSW5jbHVkZURlZiIsCiAgICAgICAgImxvY2F0b3IiIDogIjU6MS01OjU0IiwKICAgICAgICAibG9jYWxJZGVudGlmaWVyIiA6ICJGSElSSGVscGVycyIsCiAgICAgICAgInBhdGgiIDogImh0dHA6Ly9maGlyLm9yZy9ndWlkZXMvY2RjL29waW9pZC1jZHMvRkhJUkhlbHBlcnMiLAogICAgICAgICJ2ZXJzaW9uIiA6ICI0LjAuMSIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJJbmNsdWRlRGVmIiwKICAgICAgICAibG9jYXRvciIgOiAiNjoxLTY6NTMiLAogICAgICAgICJsb2NhbElkZW50aWZpZXIiIDogIkNvbW1vbiIsCiAgICAgICAgInBhdGgiIDogImh0dHA6Ly9maGlyLm9yZy9ndWlkZXMvY2RjL29waW9pZC1jZHMvT3Bpb2lkQ0RTQ29tbW9uIiwKICAgICAgICAidmVyc2lvbiIgOiAiMC4xLjEiCiAgICAgIH0sIHsKICAgICAgICAidHlwZSIgOiAiSW5jbHVkZURlZiIsCiAgICAgICAgImxvY2F0b3IiIDogIjc6MS03OjU5IiwKICAgICAgICAibG9jYWxJZGVudGlmaWVyIiA6ICJDb25maWciLAogICAgICAgICJwYXRoIiA6ICJodHRwOi8vZmhpci5vcmcvZ3VpZGVzL2NkYy9vcGlvaWQtY2RzL09waW9pZENEU0NvbW1vbkNvbmZpZyIsCiAgICAgICAgInZlcnNpb24iIDogIjAuMS4xIgogICAgICB9LCB7CiAgICAgICAgInR5cGUiIDogIkluY2x1ZGVEZWYiLAogICAgICAgICJsb2NhdG9yIiA6ICI4OjEtODo1NyIsCiAgICAgICAgImxvY2FsSWRlbnRpZmllciIgOiAiUm91dGluZXMiLAogICAgICAgICJwYXRoIiA6ICJodHRwOi8vZmhpci5vcmcvZ3VpZGVzL2NkYy9vcGlvaWQtY2RzL09waW9pZENEU1JvdXRpbmVzIiwKICAgICAgICAidmVyc2lvbiIgOiAiMC4xLjEiCiAgICAgIH0gXQogICAgfSwKICAgICJwYXJhbWV0ZXJzIiA6IHsKICAgICAgInR5cGUiIDogIkxpYnJhcnkkUGFyYW1ldGVycyIsCiAgICAgICJkZWYiIDogWyB7CiAgICAgICAgInR5cGUiIDogIlBhcmFtZXRlckRlZiIsCiAgICAgICAgInBhcmFtZXRlclR5cGVTcGVjaWZpZXIiIDogewogICAgICAgICAgInR5cGUiIDogIkxpc3RUeXBlU3BlY2lmaWVyIiwKICAgICAgICAgICJlbGVtZW50VHlwZSIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJOYW1lZFR5cGVTcGVjaWZpZXIiLAogICAgICAgICAgICAibG9jYXRvciIgOiAiNDU6MzctNDU6NTMiLAogICAgICAgICAgICAibmFtZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9TWVkaWNhdGlvblJlcXVlc3QiCiAgICAgICAgICB9LAogICAgICAgICAgImxvY2F0b3IiIDogIjQ1OjMyLTQ1OjU0IgogICAgICAgIH0sCiAgICAgICAgImxvY2F0b3IiIDogIjQ1OjEtNDU6NTQiLAogICAgICAgICJuYW1lIiA6ICJDb250ZXh0UHJlc2NyaXB0aW9ucyIsCiAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiCiAgICAgIH0gXQogICAgfSwKICAgICJjb250ZXh0cyIgOiB7CiAgICAgICJ0eXBlIiA6ICJMaWJyYXJ5JENvbnRleHRzIiwKICAgICAgImRlZiIgOiBbIHsKICAgICAgICAidHlwZSIgOiAiQ29udGV4dERlZiIsCiAgICAgICAgImxvY2F0b3IiIDogIjQ3OjEtNDc6MTUiLAogICAgICAgICJuYW1lIiA6ICJQYXRpZW50IgogICAgICB9IF0KICAgIH0sCiAgICAic3RhdGVtZW50cyIgOiB7CiAgICAgICJ0eXBlIiA6ICJMaWJyYXJ5JFN0YXRlbWVudHMiLAogICAgICAiZGVmIiA6IFsgewogICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uRGVmIiwKICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiU2luZ2xldG9uRnJvbSIsCiAgICAgICAgICAib3BlcmFuZCIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICI0NzoxLTQ3OjE1IiwKICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1QYXRpZW50IiwKICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9QYXRpZW50IgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImxvY2F0b3IiIDogIjQ3OjEtNDc6MTUiLAogICAgICAgICJuYW1lIiA6ICJQYXRpZW50IiwKICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uRGVmIiwKICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiSW50ZXJ2YWwiLAogICAgICAgICAgImxvdyIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJTdWJ0cmFjdCIsCiAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICJ0eXBlIiA6ICJUb2RheSIsCiAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjUwOjEyLTUwOjE4IgogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgInR5cGUiIDogIlF1YW50aXR5IiwKICAgICAgICAgICAgICAibG9jYXRvciIgOiAiNTA6MjItNTA6MjgiLAogICAgICAgICAgICAgICJ2YWx1ZSIgOiA5MCwKICAgICAgICAgICAgICAidW5pdCIgOiAiZGF5cyIKICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAibG9jYXRvciIgOiAiNTA6MTItNTA6MjgiCiAgICAgICAgICB9LAogICAgICAgICAgImhpZ2giIDogewogICAgICAgICAgICAidHlwZSIgOiAiVG9kYXkiLAogICAgICAgICAgICAibG9jYXRvciIgOiAiNTA6MzEtNTA6MzciCiAgICAgICAgICB9LAogICAgICAgICAgImxvY2F0b3IiIDogIjUwOjMtNTA6MzgiLAogICAgICAgICAgImxvd0Nsb3NlZCIgOiB0cnVlLAogICAgICAgICAgImhpZ2hDbG9zZWQiIDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgImxvY2F0b3IiIDogIjQ5OjEtNTA6MzgiLAogICAgICAgICJuYW1lIiA6ICJUcmVhdG1lbnQgUGxhbiBMb29rYmFjayBQZXJpb2QiLAogICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwKICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uRGVmIiwKICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiUXVlcnkiLAogICAgICAgICAgInNvdXJjZSIgOiBbIHsKICAgICAgICAgICAgInR5cGUiIDogIkFsaWFzZWRRdWVyeVNvdXJjZSIsCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsKICAgICAgICAgICAgICAidHlwZSIgOiAiRnVuY3Rpb25SZWYiLAogICAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICAgInR5cGUiIDogIlBhcmFtZXRlclJlZiIsCiAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiNTM6NjktNTM6ODgiLAogICAgICAgICAgICAgICAgIm5hbWUiIDogIkNvbnRleHRQcmVzY3JpcHRpb25zIgogICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAibG9jYXRvciIgOiAiNTM6My01Mzo5MiIsCiAgICAgICAgICAgICAgIm5hbWUiIDogIklzIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWw/IiwKICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkNvbW1vbiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjUzOjMtNTM6MTIxIiwKICAgICAgICAgICAgImFsaWFzIiA6ICJBbWJ1bGF0b3J5T3Bpb2lkUHJlc2NyaXB0aW9uIgogICAgICAgICAgfSBdLAogICAgICAgICAgInJlbGF0aW9uc2hpcCIgOiBbIF0sCiAgICAgICAgICAid2hlcmUiIDogewogICAgICAgICAgICAidHlwZSIgOiAiRnVuY3Rpb25SZWYiLAogICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAidHlwZSIgOiAiQWxpYXNSZWYiLAogICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI1NDo1My01NDo4MCIsCiAgICAgICAgICAgICAgIm5hbWUiIDogIkFtYnVsYXRvcnlPcGlvaWRQcmVzY3JpcHRpb24iCiAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjU0OjUtNTQ6ODIiLAogICAgICAgICAgICAibmFtZSIgOiAiSXMgQ2hyb25pYyBQYWluIFByZXNjcmlwdGlvbj8iLAogICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIlJvdXRpbmVzIgogICAgICAgICAgfSwKICAgICAgICAgICJsb2NhdG9yIiA6ICI1MzozLTU0OjgyIgogICAgICAgIH0sCiAgICAgICAgImxvY2F0b3IiIDogIjUyOjEtNTQ6ODIiLAogICAgICAgICJuYW1lIiA6ICJDaHJvbmljIFBhaW4gT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCBQcmVzY3JpcHRpb25zIiwKICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsCiAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiCiAgICAgIH0sIHsKICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvbkRlZiIsCiAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgInR5cGUiIDogIkV4aXN0cyIsCiAgICAgICAgICAib3BlcmFuZCIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjU3OjktNTc6OTAiLAogICAgICAgICAgICAibmFtZSIgOiAiQ2hyb25pYyBQYWluIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWwgUHJlc2NyaXB0aW9ucyIKICAgICAgICAgIH0sCiAgICAgICAgICAibG9jYXRvciIgOiAiNTc6My01Nzo5MCIKICAgICAgICB9LAogICAgICAgICJsb2NhdG9yIiA6ICI1NjoxLTU3OjkwIiwKICAgICAgICAibmFtZSIgOiAiUGF0aWVudCBJcyBCZWluZyBQcmVzY3JpYmVkIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWwiLAogICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwKICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uRGVmIiwKICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiSWYiLAogICAgICAgICAgImNvbmRpdGlvbiIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjYzOjYtNjM6NDkiLAogICAgICAgICAgICAibmFtZSIgOiAiQWdlIExlc3MgdGhhbiAxOCBZZWFycyBJcyBFbmFibGVkIiwKICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDb25maWciCiAgICAgICAgICB9LAogICAgICAgICAgInRoZW4iIDogewogICAgICAgICAgICAidHlwZSIgOiAiTGVzcyIsCiAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICJ0eXBlIiA6ICJDYWxjdWxhdGVBZ2VBdCIsCiAgICAgICAgICAgICAgIm9wZXJhbmQiIDogWyB7CiAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgInNvdXJjZSIgOiB7CiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlBhdGllbnQiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgInBhdGgiIDogImJpcnRoRGF0ZS52YWx1ZSIKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAidHlwZSIgOiAiVG9kYXkiLAogICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjY0OjE4LTY0OjI0IgogICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAibG9jYXRvciIgOiAiNjQ6NS02NDoyNSIsCiAgICAgICAgICAgICAgInByZWNpc2lvbiIgOiAiWWVhciIKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICJ0eXBlIiA6ICJMaXRlcmFsIiwKICAgICAgICAgICAgICAibG9jYXRvciIgOiAiNjQ6MjktNjQ6MzAiLAogICAgICAgICAgICAgICJ2YWx1ZVR5cGUiIDogInt1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9SW50ZWdlciIsCiAgICAgICAgICAgICAgInZhbHVlIiA6ICIxOCIKICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAibG9jYXRvciIgOiAiNjQ6NS02NDozMCIKICAgICAgICAgIH0sCiAgICAgICAgICAiZWxzZSIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJMaXRlcmFsIiwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjY2OjUtNjY6OSIsCiAgICAgICAgICAgICJ2YWx1ZVR5cGUiIDogInt1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9Qm9vbGVhbiIsCiAgICAgICAgICAgICJ2YWx1ZSIgOiAiZmFsc2UiCiAgICAgICAgICB9LAogICAgICAgICAgImxvY2F0b3IiIDogIjYzOjMtNjY6OSIKICAgICAgICB9LAogICAgICAgICJsb2NhdG9yIiA6ICI2MjoxLTY2OjkiLAogICAgICAgICJuYW1lIiA6ICJQYXRpZW50IEFnZSBMZXNzIFRoYW4gMTgiLAogICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwKICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uRGVmIiwKICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiUXVlcnkiLAogICAgICAgICAgInNvdXJjZSIgOiBbIHsKICAgICAgICAgICAgInR5cGUiIDogIkFsaWFzZWRRdWVyeVNvdXJjZSIsCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsKICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLAogICAgICAgICAgICAgICJjb2RlcyIgOiB7CiAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiLAogICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjgzOjI2LTgzOjUzIiwKICAgICAgICAgICAgICAgICJuYW1lIiA6ICJQYWluIHRyZWF0bWVudCBwbGFuIiwKICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ29tbW9uIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjgzOjMtODM6NTQiLAogICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q2FyZVBsYW4iLAogICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ2FyZVBsYW4iLAogICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNhdGVnb3J5IiwKICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIgogICAgICAgICAgICB9LAogICAgICAgICAgICAibG9jYXRvciIgOiAiODM6My04Mzo3MiIsCiAgICAgICAgICAgICJhbGlhcyIgOiAiUGFpblRyZWF0bWVudFBsYW4iCiAgICAgICAgICB9IF0sCiAgICAgICAgICAicmVsYXRpb25zaGlwIiA6IFsgXSwKICAgICAgICAgICJ3aGVyZSIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJBbmQiLAogICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAidHlwZSIgOiAiQW5kIiwKICAgICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJJbiIsCiAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkZ1bmN0aW9uUmVmIiwKICAgICAgICAgICAgICAgICAgIm9wZXJhbmQiIDogWyB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiODQ6MTEtODQ6MzQiLAogICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJzdGF0dXMiLAogICAgICAgICAgICAgICAgICAgICJzY29wZSIgOiAiUGFpblRyZWF0bWVudFBsYW4iCiAgICAgICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlRvU3RyaW5nIiwKICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJGSElSSGVscGVycyIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkxpc3QiLAogICAgICAgICAgICAgICAgICAiZWxlbWVudCIgOiBbIHsKICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiTGl0ZXJhbCIsCiAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg0OjQxLTg0OjQ4IiwKICAgICAgICAgICAgICAgICAgICAidmFsdWVUeXBlIiA6ICJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVN0cmluZyIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJhY3RpdmUiCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiTGl0ZXJhbCIsCiAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg0OjUxLTg0OjYxIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWVUeXBlIiA6ICJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVN0cmluZyIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJjb21wbGV0ZWQiCiAgICAgICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg0OjM5LTg0OjYzIgogICAgICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg0OjExLTg0OjYzIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJPciIsCiAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkluIiwKICAgICAgICAgICAgICAgICAgIm9wZXJhbmQiIDogWyB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkZ1bmN0aW9uUmVmIiwKICAgICAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJQcm9wZXJ0eSIsCiAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiODY6MzMtODY6NTciLAogICAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogImNyZWF0ZWQiLAogICAgICAgICAgICAgICAgICAgICAgInNjb3BlIiA6ICJQYWluVHJlYXRtZW50UGxhbiIKICAgICAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg2OjktODY6NTkiLAogICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUb0RhdGVUaW1lIiwKICAgICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkZISVJIZWxwZXJzIgogICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkludGVydmFsIiwKICAgICAgICAgICAgICAgICAgICAibG93IiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJUb0RhdGVUaW1lIiwKICAgICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAgICAgInNvdXJjZSIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI4Njo3NS04NjoxMDYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUcmVhdG1lbnQgUGxhbiBMb29rYmFjayBQZXJpb2QiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJsb3ciCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAibG93Q2xvc2VkRXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgICAgICAgInNvdXJjZSIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg2Ojc1LTg2OjEwNiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUcmVhdG1lbnQgUGxhbiBMb29rYmFjayBQZXJpb2QiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogImxvd0Nsb3NlZCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJoaWdoIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJUb0RhdGVUaW1lIiwKICAgICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAgICAgInNvdXJjZSIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI4Njo3NS04NjoxMDYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUcmVhdG1lbnQgUGxhbiBMb29rYmFjayBQZXJpb2QiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJoaWdoIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgImhpZ2hDbG9zZWRFeHByZXNzaW9uIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJQcm9wZXJ0eSIsCiAgICAgICAgICAgICAgICAgICAgICAic291cmNlIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiODY6NzUtODY6MTA2IiwKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlRyZWF0bWVudCBQbGFuIExvb2tiYWNrIFBlcmlvZCIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAicGF0aCIgOiAiaGlnaENsb3NlZCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg2OjktODY6MTA2IiwKICAgICAgICAgICAgICAgICAgInByZWNpc2lvbiIgOiAiRGF5IgogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiSW4iLAogICAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRnVuY3Rpb25SZWYiLAogICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAgICJzb3VyY2UiIDogewogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiODc6MTQtODc6MzUiLAogICAgICAgICAgICAgICAgICAgICAgICAicGF0aCIgOiAibWV0YSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJzY29wZSIgOiAiUGFpblRyZWF0bWVudFBsYW4iCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg3OjE0LTg3OjQ3IiwKICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJsYXN0VXBkYXRlZCIKICAgICAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlRvRGF0ZVRpbWUiLAogICAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiRkhJUkhlbHBlcnMiCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiSW50ZXJ2YWwiLAogICAgICAgICAgICAgICAgICAgICJsb3ciIDogewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlRvRGF0ZVRpbWUiLAogICAgICAgICAgICAgICAgICAgICAgIm9wZXJhbmQiIDogewogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgICAgICAgICAic291cmNlIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvblJlZiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg3OjYzLTg3Ojk0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgOiAiVHJlYXRtZW50IFBsYW4gTG9va2JhY2sgUGVyaW9kIgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAicGF0aCIgOiAibG93IgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgImxvd0Nsb3NlZEV4cHJlc3Npb24iIDogewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAgICJzb3VyY2UiIDogewogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvblJlZiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI4Nzo2My04Nzo5NCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUcmVhdG1lbnQgUGxhbiBMb29rYmFjayBQZXJpb2QiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogImxvd0Nsb3NlZCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJoaWdoIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJUb0RhdGVUaW1lIiwKICAgICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAgICAgInNvdXJjZSIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI4Nzo2My04Nzo5NCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlRyZWF0bWVudCBQbGFuIExvb2tiYWNrIFBlcmlvZCIKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogImhpZ2giCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAiaGlnaENsb3NlZEV4cHJlc3Npb24iIDogewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAgICJzb3VyY2UiIDogewogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvblJlZiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI4Nzo2My04Nzo5NCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUcmVhdG1lbnQgUGxhbiBMb29rYmFjayBQZXJpb2QiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogImhpZ2hDbG9zZWQiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI4NzoxNC04Nzo5NCIsCiAgICAgICAgICAgICAgICAgICJwcmVjaXNpb24iIDogIkRheSIKICAgICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI4NToxMS04ODo3IgogICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAibG9jYXRvciIgOiAiODQ6MTEtODg6NyIKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICJ0eXBlIiA6ICJFeGlzdHMiLAogICAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJRdWVyeSIsCiAgICAgICAgICAgICAgICAic291cmNlIiA6IFsgewogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiQWxpYXNlZFF1ZXJ5U291cmNlIiwKICAgICAgICAgICAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJRdWVyeSIsCiAgICAgICAgICAgICAgICAgICAgInNvdXJjZSIgOiBbIHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbGlhc2VkUXVlcnlTb3VyY2UiLAogICAgICAgICAgICAgICAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvblJlZiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJDaHJvbmljIFBhaW4gT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCBQcmVzY3JpcHRpb25zIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICJhbGlhcyIgOiAiJHRoaXMiCiAgICAgICAgICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAgICAgICAgICJ3aGVyZSIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiTm90IiwKICAgICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIklzTnVsbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJzb3VyY2UiIDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkFsaWFzUmVmIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICIkdGhpcyIKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJyZWNvcmRlciIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgInJldHVybiIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0dXJuQ2xhdXNlIiwKICAgICAgICAgICAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAgICAgInNvdXJjZSIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkFsaWFzUmVmIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgOiAiJHRoaXMiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJyZWNvcmRlciIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAiZGlzdGluY3QiIDogZmFsc2UKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5MDo5LTkwOjk1IgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiOTA6OS05MDoxMDQiLAogICAgICAgICAgICAgICAgICAiYWxpYXMiIDogIlJlY29yZGVyIgogICAgICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAgICAgInJlbGF0aW9uc2hpcCIgOiBbIF0sCiAgICAgICAgICAgICAgICAid2hlcmUiIDogewogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRXF1aXZhbGVudCIsCiAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbGlhc1JlZiIsCiAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjkxOjE3LTkxOjI0IiwKICAgICAgICAgICAgICAgICAgICAibmFtZSIgOiAiUmVjb3JkZXIiCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5MToyOC05MTo1MSIsCiAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogImF1dGhvciIsCiAgICAgICAgICAgICAgICAgICAgInNjb3BlIiA6ICJQYWluVHJlYXRtZW50UGxhbiIKICAgICAgICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiOTE6MTEtOTE6NTEiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg5OjE3LTkyOjciCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAibG9jYXRvciIgOiAiODk6MTEtOTI6NyIKICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAibG9jYXRvciIgOiAiODQ6NS05Mjo3IgogICAgICAgICAgfSwKICAgICAgICAgICJsb2NhdG9yIiA6ICI4MzozLTkyOjciCiAgICAgICAgfSwKICAgICAgICAibG9jYXRvciIgOiAiODI6MS05Mjo3IiwKICAgICAgICAibmFtZSIgOiAiT3Bpb2lkIFRyZWF0bWVudCBQbGFuIENyZWF0aW9uIG9yIFVwZGF0ZSBpbiBQYXN0IDkwIERheXMiLAogICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwKICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uRGVmIiwKICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiRXhpc3RzIiwKICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgInR5cGUiIDogIlF1ZXJ5IiwKICAgICAgICAgICAgInNvdXJjZSIgOiBbIHsKICAgICAgICAgICAgICAidHlwZSIgOiAiQWxpYXNlZFF1ZXJ5U291cmNlIiwKICAgICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLAogICAgICAgICAgICAgICAgImNvZGVzIiA6IHsKICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIiwKICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjk2OjE3LTk2OjUwIiwKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlBhaW4gbWFuYWdlbWVudCBwcm9jZWR1cmUiLAogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkNvbW1vbiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiOTY6NS05Njo1MSIsCiAgICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfVByb2NlZHVyZSIsCiAgICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL1Byb2NlZHVyZSIsCiAgICAgICAgICAgICAgICAiY29kZVByb3BlcnR5IiA6ICJjb2RlIiwKICAgICAgICAgICAgICAgICJjb2RlQ29tcGFyYXRvciIgOiAiaW4iCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAibG9jYXRvciIgOiAiOTY6NS05Njo3NSIsCiAgICAgICAgICAgICAgImFsaWFzIiA6ICJQYWluTWFuYWdlbWVudFByb2NlZHVyZSIKICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAicmVsYXRpb25zaGlwIiA6IFsgXSwKICAgICAgICAgICAgIndoZXJlIiA6IHsKICAgICAgICAgICAgICAidHlwZSIgOiAiQW5kIiwKICAgICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJJbmNsdWRlZEluIiwKICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRnVuY3Rpb25SZWYiLAogICAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiQXMiLAogICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJQcm9wZXJ0eSIsCiAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiOTc6MTMtOTc6NDUiLAogICAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogInBlcmZvcm1lZCIsCiAgICAgICAgICAgICAgICAgICAgICAic2NvcGUiIDogIlBhaW5NYW5hZ2VtZW50UHJvY2VkdXJlIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgImFzVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9UGVyaW9kIgogICAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUb0ludGVydmFsIiwKICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJGSElSSGVscGVycyIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkludGVydmFsIiwKICAgICAgICAgICAgICAgICAgImxvdyIgOiB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlRvRGF0ZVRpbWUiLAogICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJQcm9wZXJ0eSIsCiAgICAgICAgICAgICAgICAgICAgICAic291cmNlIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiOTc6NjEtOTc6OTIiLAogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgOiAiVHJlYXRtZW50IFBsYW4gTG9va2JhY2sgUGVyaW9kIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJsb3ciCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAibG93Q2xvc2VkRXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAic291cmNlIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5Nzo2MS05Nzo5MiIsCiAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgOiAiVHJlYXRtZW50IFBsYW4gTG9va2JhY2sgUGVyaW9kIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogImxvd0Nsb3NlZCIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgImhpZ2giIDogewogICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJUb0RhdGVUaW1lIiwKICAgICAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgICAgICAgInNvdXJjZSIgOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjk3OjYxLTk3OjkyIiwKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlRyZWF0bWVudCBQbGFuIExvb2tiYWNrIFBlcmlvZCIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAicGF0aCIgOiAiaGlnaCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJoaWdoQ2xvc2VkRXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAic291cmNlIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5Nzo2MS05Nzo5MiIsCiAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgOiAiVHJlYXRtZW50IFBsYW4gTG9va2JhY2sgUGVyaW9kIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogImhpZ2hDbG9zZWQiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5NzoxMy05Nzo5MiIsCiAgICAgICAgICAgICAgICAicHJlY2lzaW9uIiA6ICJEYXkiCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgInR5cGUiIDogIkV4aXN0cyIsCiAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiB7CiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJRdWVyeSIsCiAgICAgICAgICAgICAgICAgICJzb3VyY2UiIDogWyB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkFsaWFzZWRRdWVyeVNvdXJjZSIsCiAgICAgICAgICAgICAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlByb3BlcnR5IiwKICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5OToxMS05OTo0MyIsCiAgICAgICAgICAgICAgICAgICAgICAicGF0aCIgOiAicGVyZm9ybWVyIiwKICAgICAgICAgICAgICAgICAgICAgICJzY29wZSIgOiAiUGFpbk1hbmFnZW1lbnRQcm9jZWR1cmUiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiOTk6MTEtOTk6NTMiLAogICAgICAgICAgICAgICAgICAgICJhbGlhcyIgOiAiUGVyZm9ybWVyIgogICAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAgICJyZWxhdGlvbnNoaXAiIDogWyB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIldpdGgiLAogICAgICAgICAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMDA6MTgtMTAwOjk1IiwKICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJDaHJvbmljIFBhaW4gT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCBQcmVzY3JpcHRpb25zIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgInN1Y2hUaGF0IiA6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFcXVpdmFsZW50IiwKICAgICAgICAgICAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTAxOjIzLTEwMTozNyIsCiAgICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJhY3RvciIsCiAgICAgICAgICAgICAgICAgICAgICAgICJzY29wZSIgOiAiUGVyZm9ybWVyIgogICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUHJvcGVydHkiLAogICAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTAxOjQxLTEwMTo2NiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJyZWNvcmRlciIsCiAgICAgICAgICAgICAgICAgICAgICAgICJzY29wZSIgOiAiQ2hyb25pY1BhaW5TY3JpcHQiCiAgICAgICAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTAxOjIzLTEwMTo2NiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMDA6MTMtMTAxOjY2IiwKICAgICAgICAgICAgICAgICAgICAiYWxpYXMiIDogIkNocm9uaWNQYWluU2NyaXB0IgogICAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5ODoyMC0xMDI6OSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiOTg6MTMtMTAyOjkiCiAgICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5Nzo3LTEwMjo5IgogICAgICAgICAgICB9LAogICAgICAgICAgICAibG9jYXRvciIgOiAiOTU6MTAtMTAzOjMiCiAgICAgICAgICB9LAogICAgICAgICAgImxvY2F0b3IiIDogIjk1OjMtMTAzOjMiCiAgICAgICAgfSwKICAgICAgICAibG9jYXRvciIgOiAiOTQ6MS0xMDM6MyIsCiAgICAgICAgIm5hbWUiIDogIkhhZCBPcGlvaWQgVHJlYXRtZW50IFBsYW4gUmV2aWV3ZWQgaW4gUGFzdCA5MCBEYXlzIiwKICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsCiAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiCiAgICAgIH0sIHsKICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvbkRlZiIsCiAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgInR5cGUiIDogIkFuZCIsCiAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAibG9jYXRvciIgOiAiNzY6My03Njo1MyIsCiAgICAgICAgICAgICJuYW1lIiA6ICJPcGlvaWQgVHJlYXRtZW50IFBsYW4gVmVyaWZpY2F0aW9uIEVuYWJsZWQiLAogICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkNvbmZpZyIKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgInR5cGUiIDogIk5vdCIsCiAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAidHlwZSIgOiAiT3IiLAogICAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICAgInR5cGUiIDogIkV4aXN0cyIsCiAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiB7CiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjc4OjE0LTc4Ojc1IiwKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIk9waW9pZCBUcmVhdG1lbnQgUGxhbiBDcmVhdGlvbiBvciBVcGRhdGUgaW4gUGFzdCA5MCBEYXlzIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI3ODo3LTc4Ojc1IgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI3OToxMi03OTo2MyIsCiAgICAgICAgICAgICAgICAibmFtZSIgOiAiSGFkIE9waW9pZCBUcmVhdG1lbnQgUGxhbiBSZXZpZXdlZCBpbiBQYXN0IDkwIERheXMiCiAgICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI3NzoxMy04MDo1IgogICAgICAgICAgICB9LAogICAgICAgICAgICAibG9jYXRvciIgOiAiNzc6OS04MDo1IgogICAgICAgICAgfSBdLAogICAgICAgICAgImxvY2F0b3IiIDogIjc2OjMtODA6NSIKICAgICAgICB9LAogICAgICAgICJsb2NhdG9yIiA6ICI3NToxLTgwOjUiLAogICAgICAgICJuYW1lIiA6ICJObyBPcGlvaWQgVHJlYXRtZW50IFBsYW4gQ3JlYXRlZCwgd2FzIEVkaXRlZCBvciBSZXZpZXdlZCBpbiBQYXN0IDkwIERheXM/IiwKICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsCiAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiCiAgICAgIH0sIHsKICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvbkRlZiIsCiAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgInR5cGUiIDogIkFuZCIsCiAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgInR5cGUiIDogIkFuZCIsCiAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICJ0eXBlIiA6ICJBbmQiLAogICAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICAgInR5cGUiIDogIkFuZCIsCiAgICAgICAgICAgICAgICAib3BlcmFuZCIgOiBbIHsKICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiNjk6My02OTo4MSIsCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJQYXRpZW50IElzIEJlaW5nIFByZXNjcmliZWQgT3Bpb2lkIEFuYWxnZXNpYyB3aXRoIEFtYnVsYXRvcnkgTWlzdXNlIFBvdGVudGlhbCIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiNzA6OS03MDozNSIsCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJJcyBPcGlvaWQgTmFpdmU/IiwKICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJSb3V0aW5lcyIKICAgICAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI2OTozLTcwOjM1IgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJOb3QiLAogICAgICAgICAgICAgICAgIm9wZXJhbmQiIDogewogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvblJlZiIsCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI3MToxMy03MTozOCIsCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJQYXRpZW50IEFnZSBMZXNzIFRoYW4gMTgiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjcxOjktNzE6MzgiCiAgICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI2OTozLTcxOjM4IgogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI3Mjo5LTcyOjQzIiwKICAgICAgICAgICAgICAibmFtZSIgOiAiSXMgT3Bpb2lkIFJldmlldyBVc2VmdWw/IiwKICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIlJvdXRpbmVzIgogICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICI2OTozLTcyOjQzIgogICAgICAgICAgfSwgewogICAgICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvblJlZiIsCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICI3Mzo5LTczOjgzIiwKICAgICAgICAgICAgIm5hbWUiIDogIk5vIE9waW9pZCBUcmVhdG1lbnQgUGxhbiBDcmVhdGVkLCB3YXMgRWRpdGVkIG9yIFJldmlld2VkIGluIFBhc3QgOTAgRGF5cz8iCiAgICAgICAgICB9IF0sCiAgICAgICAgICAibG9jYXRvciIgOiAiNjk6My03Mzo4MyIKICAgICAgICB9LAogICAgICAgICJsb2NhdG9yIiA6ICI2ODoxLTczOjgzIiwKICAgICAgICAibmFtZSIgOiAiSW5jbHVzaW9uIENyaXRlcmlhIiwKICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsCiAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiCiAgICAgIH0sIHsKICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvbkRlZiIsCiAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgImxvY2F0b3IiIDogIjYwOjMtNjA6MjIiLAogICAgICAgICAgIm5hbWUiIDogIkluY2x1c2lvbiBDcml0ZXJpYSIKICAgICAgICB9LAogICAgICAgICJsb2NhdG9yIiA6ICI1OToxLTYwOjIyIiwKICAgICAgICAibmFtZSIgOiAiSXMgUmVjb21tZW5kYXRpb24gQXBwbGljYWJsZT8iLAogICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwKICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uRGVmIiwKICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiSWYiLAogICAgICAgICAgImNvbmRpdGlvbiIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjEwNjo2LTEwNjozNiIsCiAgICAgICAgICAgICJuYW1lIiA6ICJJcyBSZWNvbW1lbmRhdGlvbiBBcHBsaWNhYmxlPyIKICAgICAgICAgIH0sCiAgICAgICAgICAidGhlbiIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJMaXRlcmFsIiwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjEwNzoxMC0xMDc6MTgiLAogICAgICAgICAgICAidmFsdWVUeXBlIiA6ICJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVN0cmluZyIsCiAgICAgICAgICAgICJ2YWx1ZSIgOiAid2FybmluZyIKICAgICAgICAgIH0sCiAgICAgICAgICAiZWxzZSIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJBcyIsCiAgICAgICAgICAgICJvcGVyYW5kIiA6IHsKICAgICAgICAgICAgICAidHlwZSIgOiAiTnVsbCIsCiAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjEwODo4LTEwODoxMSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImFzVHlwZSIgOiAie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciCiAgICAgICAgICB9LAogICAgICAgICAgImxvY2F0b3IiIDogIjEwNjozLTEwODoxMSIKICAgICAgICB9LAogICAgICAgICJsb2NhdG9yIiA6ICIxMDU6MS0xMDg6MTEiLAogICAgICAgICJuYW1lIiA6ICJHZXQgSW5kaWNhdG9yIiwKICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsCiAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiCiAgICAgIH0sIHsKICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvbkRlZiIsCiAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgInR5cGUiIDogIklmIiwKICAgICAgICAgICJjb25kaXRpb24iIDogewogICAgICAgICAgICAidHlwZSIgOiAiRXhwcmVzc2lvblJlZiIsCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTE6Ni0xMTE6MzYiLAogICAgICAgICAgICAibmFtZSIgOiAiSXMgUmVjb21tZW5kYXRpb24gQXBwbGljYWJsZT8iCiAgICAgICAgICB9LAogICAgICAgICAgInRoZW4iIDogewogICAgICAgICAgICAidHlwZSIgOiAiTGl0ZXJhbCIsCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTI6MTAtMTEyOjcyIiwKICAgICAgICAgICAgInZhbHVlVHlwZSIgOiAie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciLAogICAgICAgICAgICAidmFsdWUiIDogIlJlY29tbWVuZCBjcmVhdGlvbiwgcmV2aWV3IG9yIHVwZGF0ZSBvZiBvcGlvaWQgdHJlYXRtZW50IHBsYW4iCiAgICAgICAgICB9LAogICAgICAgICAgImVsc2UiIDogewogICAgICAgICAgICAidHlwZSIgOiAiQXMiLAogICAgICAgICAgICAib3BlcmFuZCIgOiB7CiAgICAgICAgICAgICAgInR5cGUiIDogIk51bGwiLAogICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTM6OC0xMTM6MTEiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhc1R5cGUiIDogInt1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIgogICAgICAgICAgfSwKICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTE6My0xMTM6MTEiCiAgICAgICAgfSwKICAgICAgICAibG9jYXRvciIgOiAiMTEwOjEtMTEzOjExIiwKICAgICAgICAibmFtZSIgOiAiR2V0IFN1bW1hcnkiLAogICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwKICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIKICAgICAgfSwgewogICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uRGVmIiwKICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiSWYiLAogICAgICAgICAgImNvbmRpdGlvbiIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJFeHByZXNzaW9uUmVmIiwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjExNjo2LTExNjozNiIsCiAgICAgICAgICAgICJuYW1lIiA6ICJJcyBSZWNvbW1lbmRhdGlvbiBBcHBsaWNhYmxlPyIKICAgICAgICAgIH0sCiAgICAgICAgICAidGhlbiIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJDb25jYXRlbmF0ZSIsCiAgICAgICAgICAgICJvcGVyYW5kIiA6IFsgewogICAgICAgICAgICAgICJ0eXBlIiA6ICJMaXRlcmFsIiwKICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTE3OjEwLTExNzozNSIsCiAgICAgICAgICAgICAgInZhbHVlVHlwZSIgOiAie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciLAogICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTWVkaWNhdGlvbiByZXF1ZXN0cyhzKTogIgogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgInR5cGUiIDogIkNvbWJpbmUiLAogICAgICAgICAgICAgICJzb3VyY2UiIDogewogICAgICAgICAgICAgICAgInR5cGUiIDogIlF1ZXJ5IiwKICAgICAgICAgICAgICAgICJzb3VyY2UiIDogWyB7CiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbGlhc2VkUXVlcnlTb3VyY2UiLAogICAgICAgICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiIDogIkV4cHJlc3Npb25SZWYiLAogICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTg6MTgtMTE4Ojk1IiwKICAgICAgICAgICAgICAgICAgICAibmFtZSIgOiAiQ2hyb25pYyBQYWluIE9waW9pZCBBbmFsZ2VzaWMgd2l0aCBBbWJ1bGF0b3J5IE1pc3VzZSBQb3RlbnRpYWwgUHJlc2NyaXB0aW9ucyIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjExODoxOC0xMTg6OTciLAogICAgICAgICAgICAgICAgICAiYWxpYXMiIDogIk0iCiAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAicmVsYXRpb25zaGlwIiA6IFsgXSwKICAgICAgICAgICAgICAgICJyZXR1cm4iIDogewogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0dXJuQ2xhdXNlIiwKICAgICAgICAgICAgICAgICAgImV4cHJlc3Npb24iIDogewogICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJDb2FsZXNjZSIsCiAgICAgICAgICAgICAgICAgICAgIm9wZXJhbmQiIDogWyB7CiAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiRnVuY3Rpb25SZWYiLAogICAgICAgICAgICAgICAgICAgICAgIm9wZXJhbmQiIDogWyB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJQcm9wZXJ0eSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJzb3VyY2UiIDogewogICAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJQcm9wZXJ0eSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjExOToyOC0xMTk6MzkiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJwYXRoIiA6ICJtZWRpY2F0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAic2NvcGUiIDogIk0iCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTk6MjgtMTE5OjQ0IiwKICAgICAgICAgICAgICAgICAgICAgICAgInBhdGgiIDogInRleHQiCiAgICAgICAgICAgICAgICAgICAgICB9IF0sCiAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgOiAiVG9TdHJpbmciLAogICAgICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJGSElSSGVscGVycyIKICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAidHlwZSIgOiAiTGl0ZXJhbCIsCiAgICAgICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTE5OjQ3LTExOTo4NSIsCiAgICAgICAgICAgICAgICAgICAgICAidmFsdWVUeXBlIiA6ICJ7dXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxfVN0cmluZyIsCiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiIDogIjxVbmFibGUgdG8gZGV0ZXJtaW5lIG1lZGljYXRpb24gbmFtZT4iCiAgICAgICAgICAgICAgICAgICAgfSBdLAogICAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTk6MTktMTE5Ojg2IgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTE5OjEyLTExOTo4NiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTE4OjE3LTExOTo4NyIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJzZXBhcmF0b3IiIDogewogICAgICAgICAgICAgICAgInR5cGUiIDogIkxpdGVyYWwiLAogICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjExOTo5MC0xMTk6OTMiLAogICAgICAgICAgICAgICAgInZhbHVlVHlwZSIgOiAie3VybjpobDctb3JnOmVsbS10eXBlczpyMX1TdHJpbmciLAogICAgICAgICAgICAgICAgInZhbHVlIiA6ICIsICIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTg6OS0xMTk6OTQiCiAgICAgICAgICAgIH0gXSwKICAgICAgICAgICAgImxvY2F0b3IiIDogIjExNzoxMC0xMTk6OTQiCiAgICAgICAgICB9LAogICAgICAgICAgImVsc2UiIDogewogICAgICAgICAgICAidHlwZSIgOiAiQXMiLAogICAgICAgICAgICAib3BlcmFuZCIgOiB7CiAgICAgICAgICAgICAgInR5cGUiIDogIk51bGwiLAogICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMjA6OC0xMjA6MTEiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhc1R5cGUiIDogInt1cm46aGw3LW9yZzplbG0tdHlwZXM6cjF9U3RyaW5nIgogICAgICAgICAgfSwKICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTY6My0xMjA6MTEiCiAgICAgICAgfSwKICAgICAgICAibG9jYXRvciIgOiAiMTE1OjEtMTIwOjExIiwKICAgICAgICAibmFtZSIgOiAiR2V0IERldGFpbCIsCiAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLAogICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIgogICAgICB9IF0KICAgIH0sCiAgICAiYW5ub3RhdGlvbiIgOiBbIHsKICAgICAgInR5cGUiIDogIkNxbFRvRWxtSW5mbyIsCiAgICAgICJ0cmFuc2xhdG9yVmVyc2lvbiIgOiAiMi4xLjAiLAogICAgICAidHJhbnNsYXRvck9wdGlvbnMiIDogIkVuYWJsZUxvY2F0b3JzLERpc2FibGVMaXN0RGVtb3Rpb24sRGlzYWJsZUxpc3RQcm9tb3Rpb24iCiAgICB9IF0KICB9Cn0="
  } ]
}
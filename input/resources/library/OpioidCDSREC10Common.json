{
  "resourceType": "Library",
  "id": "OpioidCDSREC10Common",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSREC10Common",
  "version": "0.1.1",
  "name": "OpioidCDSREC10Common",
  "status": "draft",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library Common",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommon|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Library Routines",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSRoutines|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Library Config",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OpioidCDSCommonConfig|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Value set Observation Category Laboratory",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
  }, {
    "type": "depends-on",
    "display": "Value set Cocaine Urine Tests",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/cocaine-urine-drug-screening-tests"
  }, {
    "type": "depends-on",
    "display": "Value set PCP Urine Tests",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/phencyclidine-urine-drug-screening-tests"
  }, {
    "type": "depends-on",
    "display": "Value set Opioid drug urine screening",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/opioid-drug-urine-screening"
  }, {
    "type": "depends-on",
    "display": "Value set Non-opioid drug urine screening",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/non-opioid-drug-urine-screening"
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Diagnosis Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-encounter-diagnosis-category"
  }, {
    "type": "depends-on",
    "display": "Value set Problem List Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-problem-list-category"
  }, {
    "type": "depends-on",
    "display": "Value set US Core Health Concern Condition Category",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-us-core-health-concern-category"
  }, {
    "type": "depends-on",
    "display": "Value set Limited life expectancy conditions",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/limited-life-expectancy-conditions"
  }, {
    "type": "depends-on",
    "display": "Value set Active Condition",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-clinical-status-active"
  }, {
    "type": "depends-on",
    "display": "Value set Therapies indicating end of life care",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/therapies-indicating-end-of-life-care"
  }, {
    "type": "depends-on",
    "display": "Value set Conditions likely terminal for opioid prescribing",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/conditions-likely-terminal-for-opioid-prescribing"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Procedure Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/hospice-procedure"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Lookback Year",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient Age Less Than 18",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Laboratory Observations",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Cocaine Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Has Positive Screening for Cocaine in Last 12 Months",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "PCP Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Has Positive Screening for PCP in Last 12 Months",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Opiate Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Has Positive Screening for Opiates in Last 12 Months",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Applicable Because of Positive Cocaine or PCP or Opiates",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Non-opioid Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient had Urine Screening in Last 12 Months",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Exclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Positive Opiate Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Negative Opiate Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Positive PCP Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Negative PCP Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Positive Cocaine Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Negative Cocaine Screenings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Negative PCP Screenings Count Since Last Positive Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Negative Opiate Screenings Count Since Last Positive Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Negative Cocaine Screenings Count Since Last Positive Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Positive Opiate Dates in Lookback Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "string"
  }, {
    "name": "Positive Cocaine Dates in Lookback Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "string"
  }, {
    "name": "Positive PCP Dates in Lookback Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "string"
  }, {
    "name": "Cocaine Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Cocaine Detail",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Opiates Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Opiates Detail",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "PCP Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "PCP Detail",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Urine Drug Screening ProcedureRequest Category",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "CodeableConcept"
  }, {
    "name": "Cocaine And PCP Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-encounter-diagnosis-category"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-problem-list-category"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "category" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/condition-us-core-health-concern-category"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "status", "intent", "authoredOn", "code" ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "status", "status.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/hospice-procedure"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "code", "status", "status.value" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "period", "period.start", "status", "status.value" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code", "value", "effective" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "category", "code" ],
    "codeFilter": [ {
      "path": "category",
      "valueSet": "http://fhir.org/guides/cdc/opioid-cds/ValueSet/observation-category-laboratory"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBPcGlvaWRDRFNSRUMxMENvbW1vbiB2ZXJzaW9uICcwLjEuMScKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMKaW5jbHVkZSBPcGlvaWRDRFNDb21tb24gdmVyc2lvbiAnMC4xLjEnIGNhbGxlZCBDb21tb24KaW5jbHVkZSBPcGlvaWRDRFNSb3V0aW5lcyB2ZXJzaW9uICcwLjEuMScgY2FsbGVkIFJvdXRpbmVzCmluY2x1ZGUgT3Bpb2lkQ0RTQ29tbW9uQ29uZmlnIHZlcnNpb24gJzAuMS4xJyBjYWxsZWQgQ29uZmlnCgovKgoqKiAgUmVjb21tZW5kYXRpb24gIzEwCioqICAgIFdoZW4gcHJlc2NyaWJpbmcgb3Bpb2lkcyBmb3IgY2hyb25pYyBwYWluLCBwcm92aWRlcnMgc2hvdWxkIHVzZSB1cmluZSBkcnVnCioqICAgIHRlc3RpbmcgYmVmb3JlIHN0YXJ0aW5nIG9waW9pZCB0aGVyYXB5IGFuZCBjb25zaWRlciB1cmluZSBkcnVnIHRlc3RpbmcgYXQKKiogICAgbGVhc3QgYW5udWFsbHkgdG8gYXNzZXNzIGZvciBwcmVzY3JpYmVkIG1lZGljYXRpb25zIGFzIHdlbGwgYXMgb3RoZXIgY29udHJvbGxlZAoqKiAgICBwcmVzY3JpcHRpb24gZHJ1Z3MgYW5kIGlsbGljaXQgZHJ1Z3MgKHJlY29tbWVuZGF0aW9uIGNhdGVnb3J5OiBCLCBldmlkZW5jZSB0eXBlOiA0KQoqKgoqKiAgV2hlbgoqKiAgICBQcm92aWRlciBpcyBwcmVzY3JpYmluZyBhbiBvcGlvaWQgYW5hbGdlc2ljIHdpdGggYW1idWxhdG9yeSBtaXN1c2UgcG90ZW50aWFsIGluIHRoZSBvdXRwYXRpZW50IHNldHRpbmcKKiogICAgUHJlc2NyaXB0aW9uIGlzIGZvciB0cmVhdGluZyBjaHJvbmljIHBhaW4uCioqICAgIE9waW9pZCByZXZpZXcgaXMgdXNlZnVsIGZvciB0aGlzIHBhdGllbnQ6CioqICAgICAgUGF0aWVudCBpcyAxOCBvciBvdmVyCioqICAgICAgUGF0aWVudCBkb2VzIG5vdCBoYXZlIGZpbmRpbmdzIGluZGljYXRpbmcgbGltaXRlZCBsaWZlIGV4cGVjdGFuY3kKKiogICAgICBQYXRpZW50IGRvZXMgbm90IGhhdmUgb3JkZXJzIGZvciB0aGVyYXBpZXMgaW5kaWNhdGluZyBlbmQgb2YgbGlmZSBjYXJlCioqICAgICAgUGF0aWVudCBpcyBub3QgdW5kZXJnb2luZyBhY3RpdmUgY2FuY2VyIHRyZWF0bWVudDoKKiogICAgICAgIFBhdGllbnQgaGFzIGhhZCBhdCBsZWFzdCAyIGVuY291bnRlcnMgd2l0aGluIHRoZSBwYXN0IHllYXIgd2l0aCBhbnkgZGlhZ25vc2lzIG9mIGNhbmNlcgoqKiAgICBVcmluZSBkcnVnIHNjcmVlbmluZyBoYXMgbm90IGJlZW4gcGVyZm9ybWVkIGluIGxhc3QgMTIgbW9udGhzCioqICBUaGVuCioqICAgIFJlY29tbWVuZCB1cmluZSBkcnVnIHNjcmVlbmluZwoqKiAgICAgIFdpbGwgcGVyZm9ybSB1cmluZSBzY3JlZW5pbmcKKiogICAgICBOb3QgZm9yIGNocm9uaWMgcGFpbiBtYW5hZ2VtZW50LCBzbm9vemUgMyBtb250aHMKKiogICAgICBOL0EgLSBzZWUgY29tbWVudCwgc25vb3plIDMgbW9udGhzCioqCiovCgovLyBNRVRBOiBQbGFuIERlZmluaXRpb246IGh0dHA6Ly9maGlyLm9yZy9ndWlkZXMvY2RjL29waW9pZC1jZHMvUGxhbkRlZmluaXRpb24vb3Bpb2lkLWNkcy0xMC1wYXRpZW50LXZpZXcKCmNvbnRleHQgUGF0aWVudAoKZGVmaW5lICJMb29rYmFjayBZZWFyIjoKICBJbnRlcnZhbFtUb2RheSgpIC0gMTIgbW9udGhzIC0gMSBkYXlzLCBUb2RheSgpIC0gMSBkYXldCgpkZWZpbmUgIlBhdGllbnQgQWdlIExlc3MgVGhhbiAxOCI6CiAgaWYgKENvbmZpZy4iQWdlIExlc3MgdGhhbiAxOCBZZWFycyBJcyBFbmFibGVkIikgdGhlbgogICAgQWdlSW5ZZWFyc0F0KFRvZGF5KCkpIDwgMTgKICBlbHNlCiAgICBmYWxzZQoKZGVmaW5lICJBcHBsaWNhYmxlIEJlY2F1c2Ugb2YgUG9zaXRpdmUgQ29jYWluZSBvciBQQ1Agb3IgT3BpYXRlcyI6CiAgaWYgZXhpc3RzIChDb21tb24uIk9waW9pZCBPdGhlciBUaGFuIFN5bnRoZXRpYyBPcmRlcmVkIEluIExhc3QgMTIgTW9udGhzIikgdGhlbgogICAgIkhhcyBQb3NpdGl2ZSBTY3JlZW5pbmcgZm9yIENvY2FpbmUgaW4gTGFzdCAxMiBNb250aHMiCiAgICBvciAiSGFzIFBvc2l0aXZlIFNjcmVlbmluZyBmb3IgUENQIGluIExhc3QgMTIgTW9udGhzIgogIGVsc2UKICAgICJIYXMgUG9zaXRpdmUgU2NyZWVuaW5nIGZvciBDb2NhaW5lIGluIExhc3QgMTIgTW9udGhzIgogICAgICBvciAiSGFzIFBvc2l0aXZlIFNjcmVlbmluZyBmb3IgUENQIGluIExhc3QgMTIgTW9udGhzIgogICAgICBvcgogICAgICAgIGlmIENvbmZpZy4iT3BpYXRlIFVyaW5lIFNjcmVlbmluZyBDaGVjayBFbmFibGVkIiB0aGVuCiAgICAgICAgICAiSGFzIFBvc2l0aXZlIFNjcmVlbmluZyBmb3IgT3BpYXRlcyBpbiBMYXN0IDEyIE1vbnRocyIKICAgICAgICBlbHNlIGZhbHNlCgpkZWZpbmUgIkluY2x1c2lvbiBDcml0ZXJpYSI6CiAgbm90ICJQYXRpZW50IEFnZSBMZXNzIFRoYW4gMTgiCiAgICBhbmQgUm91dGluZXMuIklzIE9waW9pZCBSZXZpZXcgVXNlZnVsPyIKICAgIGFuZCAobm90ICJQYXRpZW50IGhhZCBVcmluZSBTY3JlZW5pbmcgaW4gTGFzdCAxMiBNb250aHMiKQoKZGVmaW5lICJFeGNsdXNpb24gQ3JpdGVyaWEiOgogIENvbW1vbi4iRW5kIG9mIExpZmUgQXNzZXNzbWVudCIKCmRlZmluZSAiUGF0aWVudCBoYWQgVXJpbmUgU2NyZWVuaW5nIGluIExhc3QgMTIgTW9udGhzIjoKICAoCiAgICBleGlzdHMgKCJOb24tb3Bpb2lkIFNjcmVlbmluZ3MiKQogICAgb3IgZXhpc3RzICgiQ29jYWluZSBTY3JlZW5pbmdzIikKICAgIG9yIGV4aXN0cyAoIlBDUCBTY3JlZW5pbmdzIikKICApCiAgYW5kCiAgICBpZiBDb25maWcuIk9waWF0ZSBVcmluZSBTY3JlZW5pbmcgQ2hlY2sgRW5hYmxlZCIgdGhlbgogICAgICBleGlzdHMgKCJPcGlhdGUgU2NyZWVuaW5ncyIpCiAgICBlbHNlCiAgICAgIHRydWUKCmRlZmluZSAiTGFib3JhdG9yeSBPYnNlcnZhdGlvbnMiOgogIFtPYnNlcnZhdGlvbjogImNhdGVnb3J5IiBpbiBDb21tb24uIk9ic2VydmF0aW9uIENhdGVnb3J5IExhYm9yYXRvcnkiXQoKZGVmaW5lICJOb24tb3Bpb2lkIFNjcmVlbmluZ3MiOgogIEdldFJlbGV2YW50U2NyZWVuaW5ncygiTGFib3JhdG9yeSBPYnNlcnZhdGlvbnMiIExhYk9ic2VydmF0aW9ucwogICAgd2hlcmUgKExhYk9ic2VydmF0aW9ucy5jb2RlIGluIENvbW1vbi4iTm9uLW9waW9pZCBkcnVnIHVyaW5lIHNjcmVlbmluZyIpCiAgKQoKZGVmaW5lICJPcGlhdGUgU2NyZWVuaW5ncyI6CiAgR2V0UmVsZXZhbnRTY3JlZW5pbmdzKCJMYWJvcmF0b3J5IE9ic2VydmF0aW9ucyIgTGFiT2JzZXJ2YXRpb25zCiAgICB3aGVyZSAoTGFiT2JzZXJ2YXRpb25zLmNvZGUgaW4gQ29tbW9uLiJPcGlvaWQgZHJ1ZyB1cmluZSBzY3JlZW5pbmciKQogICkKCmRlZmluZSAiQ29jYWluZSBTY3JlZW5pbmdzIjoKICBHZXRSZWxldmFudFNjcmVlbmluZ3MoIkxhYm9yYXRvcnkgT2JzZXJ2YXRpb25zIiBMYWJPYnNlcnZhdGlvbnMKICAgIHdoZXJlIChMYWJPYnNlcnZhdGlvbnMuY29kZSBpbiBDb21tb24uIkNvY2FpbmUgVXJpbmUgVGVzdHMiKQogICkKCmRlZmluZSAiUENQIFNjcmVlbmluZ3MiOgogIEdldFJlbGV2YW50U2NyZWVuaW5ncygiTGFib3JhdG9yeSBPYnNlcnZhdGlvbnMiIExhYk9ic2VydmF0aW9ucwogICAgd2hlcmUgKExhYk9ic2VydmF0aW9ucy5jb2RlIGluIENvbW1vbi4iUENQIFVyaW5lIFRlc3RzIikKICApCgpkZWZpbmUgZnVuY3Rpb24gIkdldFJlbGV2YW50U2NyZWVuaW5ncyIgKG9ic0xpc3QgTGlzdDxPYnNlcnZhdGlvbj4pOgogIG9ic0xpc3QgTGFiT2JzZXJ2YXRpb25zCiAgICAgd2hlcmUgZGF0ZSBmcm9tIExhYk9ic2VydmF0aW9ucy5lZmZlY3RpdmUgaW4gZGF5IG9mICJMb29rYmFjayBZZWFyIgogICAgICAgYW5kIG5vdCAoTGFiT2JzZXJ2YXRpb25zLnN0YXR1cy52YWx1ZSBpbiB7ICd1bmtub3duJywgJ2VudGVyZWQtaW4tZXJyb3InLCAnY2FuY2VsbGVkJyB9KQoKLy8gUmV0dXJucyBhIHRleHQgcmVwcmVzZW50YXRpb24gb2YgYSBkYXRlVGltZSB1c2luZyB0aGUgQ1FMIGBUb1N0cmluZ2AgZnVuY3Rpb24uCi8vIEBwYXJhbSBkIC0gYSBGSElSIGRhdGVUaW1lIHRvIGdldCB0ZXh0IGZvcgovLyBAcmV0dXJucyB7U3lzdGVtLlN0cmluZ30gdGhlIHRleHQgcmVwcmVzZW50YXRpb24gb2YgdGhlIGRhdGVUaW1lCmRlZmluZSBmdW5jdGlvbiAiRGF0ZVRpbWVUZXh0IiAoZCBGSElSLmRhdGVUaW1lKToKICBUb1N0cmluZyhkLnZhbHVlKQoKZGVmaW5lICJQb3NpdGl2ZSBPcGlhdGUgU2NyZWVuaW5ncyI6CiAgIk9waWF0ZSBTY3JlZW5pbmdzIiBPcGlhdGUgd2hlcmUgU3RhcnRzV2l0aChMb3dlcihPcGlhdGUudmFsdWUgYXMgRkhJUi5zdHJpbmcpLCAncG9zJykKCmRlZmluZSAiTmVnYXRpdmUgT3BpYXRlIFNjcmVlbmluZ3MiOgogICJPcGlhdGUgU2NyZWVuaW5ncyIgT3BpYXRlIHdoZXJlIFN0YXJ0c1dpdGgoTG93ZXIoT3BpYXRlLnZhbHVlIGFzIEZISVIuc3RyaW5nKSwgJ25lZycpCgpkZWZpbmUgIlBvc2l0aXZlIFBDUCBTY3JlZW5pbmdzIjoKICAiUENQIFNjcmVlbmluZ3MiIFBDUCB3aGVyZSBTdGFydHNXaXRoKExvd2VyKFBDUC52YWx1ZSBhcyBGSElSLnN0cmluZyksICdwb3MnKQoKZGVmaW5lICJOZWdhdGl2ZSBQQ1AgU2NyZWVuaW5ncyI6CiAgIlBDUCBTY3JlZW5pbmdzIiBQQ1Agd2hlcmUgU3RhcnRzV2l0aChMb3dlcihQQ1AudmFsdWUgYXMgRkhJUi5zdHJpbmcpLCAnbmVnJykKCmRlZmluZSAiUG9zaXRpdmUgQ29jYWluZSBTY3JlZW5pbmdzIjoKICAiQ29jYWluZSBTY3JlZW5pbmdzIiBDb2NhaW5lIHdoZXJlIFN0YXJ0c1dpdGgoTG93ZXIoQ29jYWluZS52YWx1ZSBhcyBGSElSLnN0cmluZyksICdwb3MnKQoKZGVmaW5lICJOZWdhdGl2ZSBDb2NhaW5lIFNjcmVlbmluZ3MiOgogICJDb2NhaW5lIFNjcmVlbmluZ3MiIENvY2FpbmUgd2hlcmUgU3RhcnRzV2l0aChMb3dlcihDb2NhaW5lLnZhbHVlIGFzIEZISVIuc3RyaW5nKSwgJ25lZycpCgovKgogIGJvcnJvd2VkIGZyb20gQ0RTNENQTSBDRFNfQ29ubmVjdF9Db21tb25zX2Zvcl9GSElSdjQwMAogIFNob3VsZCB0aGlzIGdvIGludG8gT3Bpb2lkQ0RTQ29tbW9uPwoqLwpkZWZpbmUgZnVuY3Rpb24gIk1vc3RSZWNlbnQiIChPYnNMaXN0IExpc3Q8T2JzZXJ2YXRpb24+KToKICBMYXN0KE9ic0xpc3QgTyBzb3J0IGJ5IENvYWxlc2NlKAogICAgKGVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSwKICAgIChlZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpLiJlbmQiLnZhbHVlLAogICAgKGVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuInN0YXJ0Ii52YWx1ZSwKICAgIGlzc3VlZC52YWx1ZSkKICApCgpkZWZpbmUgIk5lZ2F0aXZlIFBDUCBTY3JlZW5pbmdzIENvdW50IFNpbmNlIExhc3QgUG9zaXRpdmUgU2NyZWVuaW5nIjoKICBDb3VudCgKICAgICJOZWdhdGl2ZSBQQ1AgU2NyZWVuaW5ncyIgTgogICAgICB3aGVyZSBEYXRlVGltZVRleHQoTi5lZmZlY3RpdmUpID4gRGF0ZVRpbWVUZXh0KCJNb3N0UmVjZW50IigiUG9zaXRpdmUgUENQIFNjcmVlbmluZ3MiKS5lZmZlY3RpdmUpCiAgKQoKZGVmaW5lICJOZWdhdGl2ZSBPcGlhdGUgU2NyZWVuaW5ncyBDb3VudCBTaW5jZSBMYXN0IFBvc2l0aXZlIFNjcmVlbmluZyI6CiAgQ291bnQoCiAgICAiTmVnYXRpdmUgT3BpYXRlIFNjcmVlbmluZ3MiIE4KICAgICAgd2hlcmUgRGF0ZVRpbWVUZXh0KE4uZWZmZWN0aXZlKSA+IERhdGVUaW1lVGV4dCgiTW9zdFJlY2VudCIoIlBvc2l0aXZlIE9waWF0ZSBTY3JlZW5pbmdzIikuZWZmZWN0aXZlKQogICkKCmRlZmluZSAiTmVnYXRpdmUgQ29jYWluZSBTY3JlZW5pbmdzIENvdW50IFNpbmNlIExhc3QgUG9zaXRpdmUgU2NyZWVuaW5nIjoKICBDb3VudCgKICAgICJOZWdhdGl2ZSBDb2NhaW5lIFNjcmVlbmluZ3MiIE4KICAgICAgd2hlcmUgRGF0ZVRpbWVUZXh0KE4uZWZmZWN0aXZlKSA+IERhdGVUaW1lVGV4dCgiTW9zdFJlY2VudCIoIlBvc2l0aXZlIENvY2FpbmUgU2NyZWVuaW5ncyIpLmVmZmVjdGl2ZSkKICApCgpkZWZpbmUgIlBvc2l0aXZlIE9waWF0ZSBEYXRlcyBpbiBMb29rYmFjayBQZXJpb2QiOgogICJQb3NpdGl2ZSBPcGlhdGUgU2NyZWVuaW5ncyIgT3BpYXRlCiAgICByZXR1cm4gRGF0ZVRpbWVUZXh0KE9waWF0ZS5lZmZlY3RpdmUpCgpkZWZpbmUgIlBvc2l0aXZlIENvY2FpbmUgRGF0ZXMgaW4gTG9va2JhY2sgUGVyaW9kIjoKICAiUG9zaXRpdmUgQ29jYWluZSBTY3JlZW5pbmdzIiBDUwogICAgcmV0dXJuIERhdGVUaW1lVGV4dChDUy5lZmZlY3RpdmUpCgpkZWZpbmUgIlBvc2l0aXZlIFBDUCBEYXRlcyBpbiBMb29rYmFjayBQZXJpb2QiOgogICJQb3NpdGl2ZSBQQ1AgU2NyZWVuaW5ncyIgUFMKICAgIHJldHVybiBEYXRlVGltZVRleHQoUFMuZWZmZWN0aXZlKQoKZGVmaW5lICJIYXMgUG9zaXRpdmUgU2NyZWVuaW5nIGZvciBDb2NhaW5lIGluIExhc3QgMTIgTW9udGhzIjoKICBleGlzdHMgKCJDb2NhaW5lIFNjcmVlbmluZ3MiIENTIHdoZXJlIFN0YXJ0c1dpdGgoTG93ZXIoQ1MudmFsdWUgYXMgRkhJUi5zdHJpbmcpLCAncG9zJykpCgpkZWZpbmUgIkhhcyBQb3NpdGl2ZSBTY3JlZW5pbmcgZm9yIFBDUCBpbiBMYXN0IDEyIE1vbnRocyI6CiAgZXhpc3RzICgiUENQIFNjcmVlbmluZ3MiIFBDUCB3aGVyZSBTdGFydHNXaXRoKExvd2VyKFBDUC52YWx1ZSBhcyBGSElSLnN0cmluZyksICdwb3MnKSkKCmRlZmluZSAiSGFzIFBvc2l0aXZlIFNjcmVlbmluZyBmb3IgT3BpYXRlcyBpbiBMYXN0IDEyIE1vbnRocyI6CiAgaWYgQ29uZmlnLiJPcGlhdGUgVXJpbmUgU2NyZWVuaW5nIENoZWNrIEVuYWJsZWQiIHRoZW4KICAgIGV4aXN0cyAoIk9waWF0ZSBTY3JlZW5pbmdzIiBPcGlvaWQgd2hlcmUgU3RhcnRzV2l0aChMb3dlcihPcGlvaWQudmFsdWUgYXMgRkhJUi5zdHJpbmcpLCAncG9zJykpCiAgZWxzZSBmYWxzZQoKZGVmaW5lICJDb2NhaW5lIERldGFpbCI6CiAgaWYgIkhhcyBQb3NpdGl2ZSBTY3JlZW5pbmcgZm9yIENvY2FpbmUgaW4gTGFzdCAxMiBNb250aHMiIHRoZW4KICAgICJDb2NhaW5lIFN1bW1hcnkiCiAgZWxzZSBudWxsCgpkZWZpbmUgIk9waWF0ZXMgRGV0YWlsIjoKICBpZiAiSGFzIFBvc2l0aXZlIFNjcmVlbmluZyBmb3IgT3BpYXRlcyBpbiBMYXN0IDEyIE1vbnRocyIgdGhlbgogICAgIk9waWF0ZXMgU3VtbWFyeSIKICBlbHNlIG51bGwKCmRlZmluZSAiUENQIERldGFpbCI6CiAgaWYgIkhhcyBQb3NpdGl2ZSBTY3JlZW5pbmcgZm9yIFBDUCBpbiBMYXN0IDEyIE1vbnRocyIgdGhlbgogICAgIlBDUCBTdW1tYXJ5IgogIGVsc2UgbnVsbAoKZGVmaW5lIGZ1bmN0aW9uICJHZXQgRGV0YWlsIiAoaXNTY3JlZW5pbmdSZWNvbW1lbmRlZCBCb29sZWFuKToKICBpZiBpc1NjcmVlbmluZ1JlY29tbWVuZGVkIHRoZW4KICAgICdQYXRpZW50cyBvbiBvcGlvaWQgdGhlcmFweSBzaG91bGQgaGF2ZSBhIHVyaW5lIGRydWcgdGVzdCBwZXJmb3JtZWQgZXZlcnkgMTIgbW9udGhzLicKICBlbHNlIGlmICJBcHBsaWNhYmxlIEJlY2F1c2Ugb2YgUG9zaXRpdmUgQ29jYWluZSBvciBQQ1Agb3IgT3BpYXRlcyIgdGhlbgogICAgIkNvY2FpbmUgRGV0YWlsIiYKICAgICJPcGlhdGVzIERldGFpbCImCiAgICAiUENQIERldGFpbCImCiAgICAnPGJyLz5Ob3RlOiByZXN1bHQgbWF5IGJlIGZhbHNlIHBvc2l0aXZlIHJlc3VsdCBvciBpbmRpY2F0ZSBwYXRpZW50IGlzIG9jY2FzaW9uYWwgdXNlciBvciBhZGRpY3RlZCB0byB0aGUgaWxsaWNpdCBkcnVnLicKICBlbHNlCiAgICAgIG51bGwKCmRlZmluZSAiSW5kaWNhdG9yIjoKICAnd2FybmluZycKCiAgICAvKgogICAgICAgIFVzZWQgb25seSBpbiBQbGFuRGVmaW5pdGlvbgogICAgICovCmRlZmluZSBmdW5jdGlvbiAiR2V0IFN1bW1hcnkiIChpc1NjcmVlbmluZ1JlY29tbWVuZGVkIEJvb2xlYW4pOgogIGlmIGlzU2NyZWVuaW5nUmVjb21tZW5kZWQgdGhlbgogICAgJ0FubnVhbCBVcmluZSBTY3JlZW5pbmcgQ2hlY2snCiAgZWxzZSBpZiAiQXBwbGljYWJsZSBCZWNhdXNlIG9mIFBvc2l0aXZlIENvY2FpbmUgb3IgUENQIG9yIE9waWF0ZXMiIHRoZW4KICAgIGlmIENvbmZpZy4iT3BpYXRlIFVyaW5lIFNjcmVlbmluZyBDaGVjayBFbmFibGVkIiB0aGVuCiAgICAgICdQb3NpdGl2ZSBDb2NhaW5lIG9yIFBDUCBvciBPcGlhdGVzIGluIFVyaW5lIFNjcmVlbmluZycKICAgIGVsc2UgJ1Bvc2l0aXZlIENvY2FpbmUgb3IgUENQIGluIFVyaW5lIFNjcmVlbmluZycKICBlbHNlIG51bGwKCmRlZmluZSAiVXJpbmUgRHJ1ZyBTY3JlZW5pbmcgUHJvY2VkdXJlUmVxdWVzdCBDYXRlZ29yeSI6CiAgRkhJUi5Db2RlYWJsZUNvbmNlcHQgewogICAgY29kaW5nOiB7CiAgICAgIEZISVIuQ29kaW5nIHsKICAgICAgICBzeXN0ZW06IEZISVIudXJpIHsgdmFsdWU6ICdodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21lZGljYXRpb25yZXF1ZXN0LWNhdGVnb3J5JyB9LAogICAgICAgIGNvZGU6IEZISVIuY29kZSB7IHZhbHVlOiAnb3V0cGF0aWVudCcgfSwKICAgICAgICBkaXNwbGF5OiBGSElSLnN0cmluZyB7IHZhbHVlOiAnT3V0cGF0aWVudCcgfQogICAgICB9CiAgICB9CiAgfQogIC8qIHNpbmdsZXRvbiBmcm9tIChGaXJzdCgKICAgIFtFbmNvdW50ZXJdIEUKICAgICAgd2hlcmUgRS5wZXJpb2Qgc3RhcnRzIHNhbWUgZGF5IGFzIFRvZGF5KCkKICAgICAgc29ydCBieSBzdGFydCBvZiBwZXJpb2QgZGVzYwogICkudHlwZSkgKi8KCmRlZmluZSAiQ29jYWluZSBBbmQgUENQIFN1bW1hcnkiOgogICdQb3NpdGl2ZSBmb3IgQ29jYWluZSBBTkQgUENQIDxici8+PGJyLz4nICsKICAgICJDb2NhaW5lIFN1bW1hcnkiICsgJzxici8+JyArICJQQ1AgU3VtbWFyeSIKCmRlZmluZSAiT3BpYXRlcyBTdW1tYXJ5IjoKICBpZiBub3QgZXhpc3RzIENvbW1vbi4iT3Bpb2lkIE90aGVyIFRoYW4gU3ludGhldGljIE9yZGVyZWQgSW4gTGFzdCAxMiBNb250aHMiIHRoZW4KICAgIGlmICJOZWdhdGl2ZSBPcGlhdGUgU2NyZWVuaW5ncyBDb3VudCBTaW5jZSBMYXN0IFBvc2l0aXZlIFNjcmVlbmluZyIgPiAwIHRoZW4KICAgICAgJzxici8+KlBvc2l0aXZlIGZvciBPcGlhdGVzOiAnICsKICAgICAgQ29tYmluZSgiUG9zaXRpdmUgT3BpYXRlIERhdGVzIGluIExvb2tiYWNrIFBlcmlvZCIsICcsICcpICsKICAgICAgJyAgKCcgKyBUb1N0cmluZygiTmVnYXRpdmUgT3BpYXRlIFNjcmVlbmluZ3MgQ291bnQgU2luY2UgTGFzdCBQb3NpdGl2ZSBTY3JlZW5pbmciKSArCiAgICAgICcgbmVnYXRpdmUgc2luY2UpJwogICAgZWxzZQogICAgICAnPGJyLz4qUG9zaXRpdmUgZm9yIE9waWF0ZXM6ICcgKwogICAgICBDb21iaW5lKCJQb3NpdGl2ZSBPcGlhdGUgRGF0ZXMgaW4gTG9va2JhY2sgUGVyaW9kIiwgJywgJykKICBlbHNlIG51bGwKCmRlZmluZSAiUENQIFN1bW1hcnkiOgogIGlmICJOZWdhdGl2ZSBQQ1AgU2NyZWVuaW5ncyBDb3VudCBTaW5jZSBMYXN0IFBvc2l0aXZlIFNjcmVlbmluZyIgPiAwIHRoZW4KICAgICc8YnIvPipQb3NpdGl2ZSBmb3IgUENQOiA8YnIvPicgKwogICAgQ29tYmluZSgiUG9zaXRpdmUgUENQIERhdGVzIGluIExvb2tiYWNrIFBlcmlvZCIsICcsICcpICsKICAgICcgICgnICsgVG9TdHJpbmcoIk5lZ2F0aXZlIFBDUCBTY3JlZW5pbmdzIENvdW50IFNpbmNlIExhc3QgUG9zaXRpdmUgU2NyZWVuaW5nIikgKwogICAgJyBuZWdhdGl2ZSBzaW5jZSknCiAgZWxzZQogICAgJzxici8+KlBvc2l0aXZlIGZvciBQQ1A6IDxici8+JyArCiAgICBDb21iaW5lKCJQb3NpdGl2ZSBQQ1AgRGF0ZXMgaW4gTG9va2JhY2sgUGVyaW9kIiwgJywgJykKCmRlZmluZSAiQ29jYWluZSBTdW1tYXJ5IjoKICBpZiAiTmVnYXRpdmUgQ29jYWluZSBTY3JlZW5pbmdzIENvdW50IFNpbmNlIExhc3QgUG9zaXRpdmUgU2NyZWVuaW5nIiA+IDAgdGhlbgogICAgJzxici8+KlBvc2l0aXZlIGZvciBDb2NhaW5lOiA8YnIvPicgKwogICAgQ29tYmluZSgiUG9zaXRpdmUgQ29jYWluZSBEYXRlcyBpbiBMb29rYmFjayBQZXJpb2QiLCAnLCAnKSArCiAgICAnICAoJyArIFRvU3RyaW5nKCJOZWdhdGl2ZSBDb2NhaW5lIFNjcmVlbmluZ3MgQ291bnQgU2luY2UgTGFzdCBQb3NpdGl2ZSBTY3JlZW5pbmciKSArCiAgICAnIG5lZ2F0aXZlIHNpbmNlKScKICBlbHNlCiAgICAnPGJyLz4qUG9zaXRpdmUgZm9yIENvY2FpbmU6IDxici8+JyArCiAgICBDb21iaW5lKCJQb3NpdGl2ZSBDb2NhaW5lIERhdGVzIGluIExvb2tiYWNrIFBlcmlvZCIsICcsICcpCg=="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}
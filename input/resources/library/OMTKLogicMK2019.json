{
  "resourceType": "Library",
  "id": "OMTKLogicMK2019",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-OMTKLogicMK2019</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> logic-library </td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">0.1.1</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"1\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/cdc/opioid-cds/Library/OMTKData2019</span></p></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library OMTKLogicMK2019 version '0.1.1'\n\n/*\nThis version of the OMTKLogic library uses the FHIR MedicationKnowledge Resource\nas the source for drug ingredient and strength information, rather than the\nOMTK data source.\n*/\n\nusing FHIR version '4.0.1'\n\ninclude OMTKData2019 version '0.1.1' called OMTKData\n\ncodesystem RxNorm: 'http://www.nlm.nih.gov/research/umls/rxnorm'\n\ncontext Patient\n\n/*\n  Normalizes the input units to UCUM units\n\n  Note guidance for UCUM presentation of medication units from SNOMED here:\n  https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwjU3vLpicPTAhWFMGMKHRpOBUAQFggiMAA&amp;url=https%3A%2F%2Fconfluence.ihtsdotools.org%2Fdownload%2Fattachments%2F17859188%2FExpressing%2520Units%2520of%2520Measure%2520for%2520Medicinal%2520Products.doc%3Fapi%3Dv2&amp;usg=AFQjCNE5sboicqvJDUyXJ2im8VzBpgHE8A\n\n  The values listed here are the only ones currently present in the OMTK data\n\n  Based on the HL7 UCUM subset here:\n  http://download.hl7.de/documents/ucum/ucumdata.html\n*/\ndefine function ToUCUM(unit System.String):\n  case unit\n    when 'MG' then 'mg'\n    when 'MG/ACTUAT' then 'mg/{actuat}'\n    when 'MG/HR' then 'mg/h'\n    when 'MG/ML' then 'mg/mL'\n    else 'Error: unknown{' + unit + '}'\n  end\n\n/*\n  Calculates daily frequency given frequency within a period\n*/\ndefine function ToDaily(frequency System.Integer, period System.Quantity):\n  case period.unit\n    when 'h' then frequency * (24.0 / period.value)\n    when 'min' then frequency * (24.0 / period.value) * 60\n    when 's' then frequency * (24.0 / period.value) * 60 * 60\n    when 'd' then frequency * (24.0 / period.value) / 24\n    when 'wk' then frequency * (24.0 / period.value) / (24 * 7)\n    when 'mo' then frequency * (24.0 / period.value) / (24 * 30) /* assuming 30 days in month */\n    when 'a' then frequency * (24.0 / period.value) / (24 * 365) /* assuming 365 days in year */\n    else null\n  end\n\n/*\n  Returns true if the given dose form is a patch (transdermal system)\n*/\ndefine function IsPatch(doseFormCode System.Code):\n  ToInteger(doseFormCode.code) = 316987\n\n/*\n  Returns the conversion factor for the given ingredient\n\nOpioid (strength in mg except where noted)\tMME Conversion Factor*\nBuprenorphine, transdermal patch (MCG/HR)\t12.6\nBuprenorphine, tablet or film\t30\nBuprenorphine, film (MCG)\t0.03\nButorphanol\t7\nCodeine\t0.15\nDihydrocodeine\t0.25\nFentanyl, buccal/SL tabet or lozenge/troche (MCG)\t0.13\nFentanyl, film or oral spray (MCG)\t0.18\nFentanyl, nasal spray (MCG)\t0.16\nFentanyl, transdermal patch (MCG/HR)\t2.4\nHydrocodone\t1\nHydromorphone\t4\nLevomethadyl acetate\t8\nLevorphanol tartrate\t11\nMeperidine \t0.1\nMethadone\t3\n  1-20 mg/d 4\n  21-40 mg/d 8\n  41-60 mg/d 10\n  61-80 mg/d 12\nMorphine\t1\nOpium\t1 // NOTE: Not present as an ingredient in the RxNorm data\nOxycodone\t1.5\nOxymorphone\t3\nPentazocine\t0.37\nTapentadol\t0.4\nTramadol\t0.1\n\n*/\ndefine function GetConversionFactor(ingredientCode System.Code, dailyDose System.Quantity, doseFormCode System.Code):\n  case ToInteger(ingredientCode.code)\n    when 161 then 0  /*\tAcetaminophen */\n    when 1191 then 0 /*\tAspirin */\n    when 1223 then 0 /*\tAtropine */\n    when 1767 then 0 /*\tBrompheniramine */\n    when 1819 then ( /*\tBuprenorphine */\n      case\n        when ToInteger(doseFormCode.code) = 316987 then 12.6 /* Transdermal system */\n        else 30 /* Tablet or Film (or Film in MCG) */\n      end\n    )\n    when 1841 then 7 /*\tButorphanol */\n    when 1886 then 0 /*\tCaffeine */\n    when 2101 then 0 /*\tCarisoprodol */\n    when 2354 then 0 /*\tchlorcyclizine */\n    when 2400 then 0 /*\tChlorpheniramine */\n    when 2670 then 0.15 /*\tCodeine */\n    when 3423 then 4 /*\tHydromorphone */\n    when 3498 then 0 /*\tDiphenhydramine */\n    when 4337 then ( /*\tFentanyl */\n      case\n        when ToInteger(doseFormCode.code) in { 970789, 317007, 316992 } then 0.13 /* Buccal Tablet, Sublingual Tablet, Oral Lozenge */\n        when ToInteger(doseFormCode.code) = 346163 then 0.18 /* Buccal Film */\n        when ToInteger(doseFormCode.code) in { 126542, 346163 } then 0.16 /* Nasal Spray, Mucosal Spray */\n        when IsPatch(doseFormCode) then 2.4 /* Transdermal system */\n        else 1000 /* Really ought to be an error because it represents a previously unencountered dose form.... */\n      end\n    )\n    when 5032 then 0 /*\tGuaifenesin */\n    when 5489 then 1 /*\tHydrocodone */\n    when 5640 then 0 /*\tIbuprofen */\n    when 6102 then 0 /*\tKaolin */\n    when 6378 then 11 /*\tLevorphanol (NOTE: Given as Levorphanol tartrate in the CDC conversion table) */\n    when 6754 then 0.1 /*\tMeperidine */\n    when 6813 then ( /*\tMethadone */\n      case\n        when dailyDose.value between 1 and 20 then 4\n        when dailyDose.value between 21 and 40 then 8\n        when dailyDose.value between 41 and 60 then 10\n        when dailyDose.value &gt;= 61 then 12\n        else 1000 /* Really ought to be an error because it represents an unexpected dose range... */\n      end\n    )\n    when 7052 then 1 /*\tMorphine */\n    when 7242 then 0 /*\tNaloxone */\n    when 7243 then 0 /*\tNaltrexone */\n    when 7804 then 1.5 /*\tOxycodone */\n    when 7814 then 3 /*\tOxymorphone */\n    when 8001 then 0.37 /*\tPentazocine */\n    when 8163 then 0 /*\tPhenylephrine */\n    when 8175 then 0 /*\tPhenylpropanolamine */\n    when 8745 then 0 /*\tPromethazine */\n    when 8896 then 0 /*\tPseudoephedrine */\n    when 9009 then 0 /*\tPyrilamine */\n    when 10689 then 0.1 /*\tTramadol */\n    when 10849 then 0 /*\tTriprolidine */\n    when 19759 then 0 /*\tbromodiphenhydramine */\n    when 19860 then 0 /*\tbutalbital */\n    when 22696 then 0 /*\tdexbrompheniramine */\n    when 22697 then 0 /*\tdexchlorpheniramine */\n    when 23088 then 0.25 /*\tdihydrocodeine */\n    when 27084 then 0 /*\thomatropine */\n    when 35780 then 0 /*\tropivacaine */\n    when 237005 then 8 /*\tLevomethadyl (NOTE: given as Levomethadyl acetate in the CDC conversion table) */\n    when 636827 then 0 /*\tguaiacolsulfonate */\n    when 787390 then 0.4 /*\ttapentadol */\n    else 0\n  end\n\ndefine function EnsureMicrogramQuantity(strength System.Quantity):\n  if strength.value &lt; 0.1 and (PositionOf('mg', strength.unit) = 0) then\n    System.Quantity {\n      value: strength.value * 1000,\n      unit: 'mcg' + Substring(strength.unit, 2)\n    }\n  else\n    strength\n\n/*\n  Returns the non-surgical opioid ingredients and their strengths that\n  make up the drug identified by the given rxNormCode as a list of tuples:\n\n  List&lt;Tuple {\n    rxNormCode Code,\n    doseFormCode Code,\n    doseFormName String,\n    ingredientCode Code,\n    ingredientName String,\n    strength Quantity\n  }&gt;\n*/\n\n/*\nDrugIngredients:\n  List&lt;{\n    drugCode Integer,\n    drugName String,\n    doseFormCode Integer,\n    doseFormName String,\n    ingredientCode Integer,\n    ingredientName String,\n    strength String,\n    strengthValue Decimal,\n    strengthUnit String\n  }&gt;\n*/\ndefine function GetIngredients(rxNormCode System.Code):\n  OMTKData.DrugIngredients DI\n    where DI.drugCode = ToInteger(rxNormCode.code)\n    return {\n      rxNormCode: System.Code { code: ToString(DI.drugCode), system: 'http://www.nlm.nih.gov/research/umls/rxnorm', display: DI.drugName },\n      doseFormCode: System.Code { code: ToString(DI.doseFormCode), system: 'http://www.nlm.nih.gov/research/umls/rxnorm', display: DI.doseFormName },\n      doseFormName: DI.doseFormName,\n      ingredientCode: System.Code { code: ToString(DI.ingredientCode), system: 'http://www.nlm.nih.gov/research/umls/rxnorm', display: DI.ingredientName },\n      ingredientName: DI.ingredientName,\n      strength: EnsureMicrogramQuantity(\n          System.Quantity {\n            value: DI.strengthValue,\n            unit: ToUCUM(DI.strengthUnit)\n          }\n        )\n    }\n\n/* define function GetIngredients(rxNormCode Code):\n  flatten (\n    [MedicationKnowledge: rxNormCode] M\n      return\n        M.ingredient I\n          where I.code in &quot;Opioid Ingredients&quot; // TODO: Need a value set of opioid ingredients\n          return {\n            rxNormCode: M.code,\n            doseFormCode: M.doseForm, // TODO: MedicationKnowledge specifies SNOMED-CT dose forms here, would need to profile to RXNorm\n            doseFormName: M.doseForm.text,\n            ingredientCode: I.item as CodeableConcept, // TODO: Profile to code only\n            ingredientName: (I.item as CodeableConcept).text,\n            strength: EnsureMicrogramQuantity(I.strength.denominator) // TODO: Is this correct?\n          }\n  ) */\n\n/*\n  Calculates daily dose for a specific ingredient based on the ingredient strength, dose form, dose quantity, and daily frequency\n*/\ndefine function GetDailyDose(ingredientCode System.Code, strength System.Quantity, doseFormCode System.Code, doseQuantity System.Quantity, dosesPerDay System.Decimal):\n  case\n\t  /* if patch --&gt; daily dose = dose value (e.g, number patches with doseQuantity unit = &quot;patch&quot;) * per-hour strength */\n    when IsPatch(doseFormCode) then\n      /* buprenorphine or fentanyl patch */\n      if ToInteger(ingredientCode.code) in { 1819, 4337 } then\n        System.Quantity {\n          value: dosesPerDay * doseQuantity.value * strength.value,\n          unit: strength.unit\n        }\n      else\n        null\n\n    /* if dose unit in actual mass units (mg or mcg -- when it's a single med) --&gt; daily dose = numTimesPerDay * dose */\n    when doseQuantity.unit in { 'mg', 'mcg' } then\n      System.Quantity {\n        value: dosesPerDay * doseQuantity.value,\n        unit: doseQuantity.unit\n      }\n\n    /* if doseQuantity is in actual volume units (mL) --&gt; daily dose = numTimesPerDay * dose * strength */\n    when doseQuantity.unit = 'mL' and (PositionOf('/mL', strength.unit) = Length(strength.unit) - 3) then\n      System.Quantity {\n        value: dosesPerDay * doseQuantity.value * strength.value,\n        unit: Substring(strength.unit, 0, PositionOf('/', strength.unit))\n      }\n\n\t\t/* if doseQuantity is not in actual units (e.g., 1 tab, 1 spray -- when it's a combo med with a unit of tablet, or it's mg/actuat) --&gt;  daily dose = numTimesPerDay * dose value * strength value */\n    else\n      System.Quantity {\n        value: dosesPerDay * doseQuantity.value * strength.value,\n        unit: Substring(strength.unit, 0, PositionOf('/', strength.unit))\n      }\n  end\n\ndefine function GetMedicationName(rxNormCode System.Code):\n  if rxNormCode.display is null then\n    SingletonFrom(\n      OMTKData.DrugIngredients DI\n        where DI.drugCode = ToInteger(rxNormCode.code)\n        return DI.drugName\n    )\n    else rxNormCode.display\n\n/*\n  Builds a description for the daily dose for an ingredient\n*/\ndefine function GetDailyDoseDescription(ingredientCode System.Code, ingredientName System.String, strength System.Quantity, doseFormCode System.Code, doseFormName System.String, doseQuantity System.Quantity, dosesPerDay System.Decimal, dailyDose System.Quantity):\n  case\n    /* if patch */\n    when IsPatch(doseFormCode) then\n      /* buprenorphine or fentanyl patch */\n      if ToInteger(ingredientCode.code) in { 1819, 4337 } then\n        ingredientName + ' patch: ' + ToString(doseQuantity.value) + ' * ' + ToString(strength.value) + ' = ' + ToString(dailyDose.value)\n      else\n        null\n\n    /* if dose unit in actual mass units (mg or mcg -- when it's a single med) */\n    when doseQuantity.unit in { 'mg', 'mcg' } then\n      ingredientName + ' ' + doseFormName + ': ' + ToString(dosesPerDay) + '/d * ' + ToString(doseQuantity.value) + ' = ' + ToString(dailyDose.value)\n\n    /* if doseQuantity in actual volume units (mL) or not in actual units (e.g. 1 tab, 1 spray) */\n    else\n      ingredientName + ' ' + doseFormName + ': ' + ToString(dosesPerDay) + '/d * ' + ToString(doseQuantity.value) + ' * ' + ToString(strength.value) + ' = ' + ToString(dailyDose.value)\n  end\n\n/*\n  Calculates MMEs for the given input prescription information and returns it\n  as a list of tuples:\n\n  List&lt;Tuple {\n    rxNormCode Code,\n    doseFormCode Code,\n    doseQuantity Quantity,\n    dosesPerDay Decimal,\n    ingredientCode Code,\n    ingredientName String,\n    strength Quantity,\n    dailyDose Quantity,\n    dailyDoseDescription String,\n    conversionFactor Decimal,\n    mme Quantity\n  }&gt;\n*/\ndefine function CalculateMMEs(medications List&lt;Tuple { rxNormCode System.Code, doseQuantity System.Quantity, dosesPerDay System.Decimal }&gt;):\n  Flatten(\n    medications M\n      let Ingredients: GetIngredients(M.rxNormCode)\n      return\n        Ingredients I\n          let\n            adjustedDoseQuantity: EnsureMicrogramQuantity(M.doseQuantity),\n            dailyDose: GetDailyDose(I.ingredientCode, I.strength, I.doseFormCode, adjustedDoseQuantity, M.dosesPerDay),\n            factor: GetConversionFactor(I.ingredientCode, dailyDose, I.doseFormCode)\n          return {\n            rxNormCode: M.rxNormCode,\n            doseFormCode: I.doseFormCode,\n            doseQuantity: adjustedDoseQuantity,\n            dosesPerDay: M.dosesPerDay,\n            ingredientCode: I.ingredientCode,\n            ingredientName: I.ingredientName,\n            strength: I.strength,\n            dailyDose: dailyDose,\n            dailyDoseDescription: GetDailyDoseDescription(I.ingredientCode, I.ingredientName, I.strength, I.doseFormCode, I.doseFormName, adjustedDoseQuantity, M.dosesPerDay, dailyDose),\n            conversionFactor: factor,\n            mme: System.Quantity {\n              value: dailyDose.value * factor,\n              unit: dailyDose.unit + '/d'\n            }\n          }\n  )\n\n/* define TestCalculateMMEs:\n  CalculateMMEs({ { rxNormCode: Code '388508' from RxNorm, doseQuantity: Quantity { value: 1, unit: 'patch' }, dosesPerDay: 0.33 } }) */\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKLogicMK2019",
  "version": "0.1.1",
  "name": "OMTKLogicMK2019",
  "title": "Library - OMTK Logic MK (2019)",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library OMTKData",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKData2019|0.1.1"
  }, {
    "type": "depends-on",
    "display": "Code system RxNorm",
    "resource": "http://www.nlm.nih.gov/research/umls/rxnorm"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}